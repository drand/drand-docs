"use strict";(self.webpackChunkdrand_docs=self.webpackChunkdrand_docs||[]).push([[5719],{492:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>t,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>u});var d=n(4848),i=n(8453);const r={id:"3-5-dev-guide-pubsub-network",title:"3.5 PubSub Network",description:"A list of public endpoints with usage instructions."},t="3.5 DevGuide: PubSub Network",o={id:"dev-guide/3-5-dev-guide-pubsub-network",title:"3.5 PubSub Network",description:"A list of public endpoints with usage instructions.",source:"@site/docs/03_dev-guide/03-05-DevGuide_PubSub_Network.md",sourceDirName:"03_dev-guide",slug:"/dev-guide/3-5-dev-guide-pubsub-network",permalink:"/docs/dev-guide/3-5-dev-guide-pubsub-network",draft:!1,unlisted:!1,editUrl:"https://github.com/drand/drand-docs/tree/master/docs/03_dev-guide/03-05-DevGuide_PubSub_Network.md",tags:[],version:"current",frontMatter:{id:"3-5-dev-guide-pubsub-network",title:"3.5 PubSub Network",description:"A list of public endpoints with usage instructions."},sidebar:"docsSidebar",previous:{title:"3.4 HTTP API",permalink:"/docs/dev-guide/3-4-dev-guide-http-api"},next:{title:"3.6 Code Examples",permalink:"/docs/dev-guide/3-6-dev-guide-code-examples"}},c={},u=[{value:"<strong>Public endpoints</strong>",id:"public-endpoints",level:2},{value:"<strong>Usage</strong>",id:"usage",level:2}];function a(e){const s={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.header,{children:(0,d.jsx)(s.h1,{id:"35-devguide-pubsub-network",children:"3.5 DevGuide: PubSub Network"})}),"\n",(0,d.jsxs)(s.p,{children:["drand is able to publish randomness on a\xa0",(0,d.jsx)(s.a,{href:"https://libp2p.io/",children:(0,d.jsx)(s.strong,{children:"libp2p"})})," PubSub network using the\xa0",(0,d.jsx)(s.a,{href:"https://docs.libp2p.io/concepts/publish-subscribe/",children:(0,d.jsx)(s.strong,{children:"gossipsub protocol"})}),"\xa0, using what is known as a\xa0",(0,d.jsx)(s.em,{children:"gossip relay"}),"."]}),"\n",(0,d.jsx)(s.h2,{id:"public-endpoints",children:(0,d.jsx)(s.strong,{children:"Public endpoints"})}),"\n",(0,d.jsxs)(s.p,{children:["The public\xa0",(0,d.jsx)(s.a,{href:"https://blog.cloudflare.com/league-of-entropy/",children:(0,d.jsx)(s.strong,{children:"League Of Entropy"})}),"\xa0network provides the following 1st-tier gossip relays (all existing gossip relays will form a mesh to distribute randomness around):"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"/dnsaddr/api.drand.sh"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"/dnsaddr/api2.drand.sh"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"/dnsaddr/api3.drand.sh"})}),"\n"]}),"\n",(0,d.jsx)(s.p,{children:"The pubsub topic on which randomness is published is based to the drand's chain hash as follows:"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:"/drand/pubsub/v0.0.0/<chain_hash>\n"})}),"\n",(0,d.jsxs)(s.p,{children:["for the public network being\xa0",(0,d.jsx)(s.code,{children:"/drand/pubsub/v0.0.0/8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce"}),"."]}),"\n",(0,d.jsx)(s.h2,{id:"usage",children:(0,d.jsx)(s.strong,{children:"Usage"})}),"\n",(0,d.jsxs)(s.p,{children:["The published messages are encoded protobufs of type\xa0",(0,d.jsxs)(s.a,{href:"https://github.com/drand/drand/blob/799190bff8e1a2ce46dccfcf4e7f7d75075495b2/protobuf/drand/api.proto#L42-L53",children:[(0,d.jsx)(s.strong,{children:(0,d.jsx)(s.code,{children:"PublicRandResponse"})}),"(RandResponse)"]}),"."]}),"\n",(0,d.jsxs)(s.p,{children:["In order to receive randomness using this method you will need to run an application that creates a libp2p host that can connect to a pubsub relay and subscribe to the PubSub topic. We recommend using drand's\xa0",(0,d.jsx)(s.a,{href:"3-3-dev-guide-client-libraries",children:(0,d.jsx)(s.strong,{children:"client libraries"})}),"\xa0or the\xa0",(0,d.jsx)(s.a,{href:"3-2-dev-guide-drand-client-cli",children:(0,d.jsx)(s.strong,{children:"drand-client"})}),"\xa0tool, which automatically perform\xa0",(0,d.jsx)(s.em,{children:"verification"}),"\xa0for this task."]}),"\n",(0,d.jsxs)(s.p,{children:["As a side note, IPFS can be used to subscribe to PubSub topics (running with\xa0",(0,d.jsx)(s.code,{children:"ipfs daemon --enable-pubsub-experiment"}),"):"]}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-jsx",children:"ipfs swarm connect /dnsaddr/api.drand.sh\nipfs pubsub sub /drand/pubsub/v0.0.0/8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce\n"})}),"\n",(0,d.jsx)("aside",{children:(0,d.jsx)(s.p,{children:"\u2139\ufe0f NOTE: You will only see raw protobuf as the output."})}),"\n",(0,d.jsx)(s.hr,{})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(a,{...e})}):a(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>t,x:()=>o});var d=n(6540);const i={},r=d.createContext(i);function t(e){const s=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function o(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),d.createElement(r.Provider,{value:s},e.children)}}}]);