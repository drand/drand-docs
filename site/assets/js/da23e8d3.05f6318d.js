"use strict";(self.webpackChunkdrand_docs=self.webpackChunkdrand_docs||[]).push([[1447],{9762:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>i,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>l});var o=s(4848),r=s(8453);const d={id:"4-3-ops-guide-storage-backends",title:"4.3 Storage Backends",description:"Describes options available for storage of drand beacon data."},t="4.3 DevOps: Storage Backends",a={id:"ops-guide/4-3-ops-guide-storage-backends",title:"4.3 Storage Backends",description:"Describes options available for storage of drand beacon data.",source:"@site/docs/04_ops-guide/04-03-DevOps_Storage_Backends.md",sourceDirName:"04_ops-guide",slug:"/ops-guide/4-3-ops-guide-storage-backends",permalink:"/drand-docs/docs/ops-guide/4-3-ops-guide-storage-backends",draft:!1,unlisted:!1,editUrl:"https://github.com/kentbull/drand-docs/tree/main/docs/04_ops-guide/04-03-DevOps_Storage_Backends.md",tags:[],version:"current",frontMatter:{id:"4-3-ops-guide-storage-backends",title:"4.3 Storage Backends",description:"Describes options available for storage of drand beacon data."},sidebar:"docsSidebar",previous:{title:"4.2 Docker Install",permalink:"/drand-docs/docs/ops-guide/4-2-ops-guide-docker-install"},next:{title:"4.4 Metrics Guide",permalink:"/drand-docs/docs/ops-guide/4-4-ops-guide-metrics-guide"}},i={},l=[{value:"<strong>BoltDB</strong>",id:"boltdb",level:2},{value:"<strong>Usage Example:</strong>",id:"usage-example",level:3},{value:"\ud83d\udc18 <strong>PostgreSQL</strong>",id:"-postgresql",level:2},{value:"<strong>Usage Example:</strong>",id:"usage-example-1",level:3},{value:"<strong>Supported Options:</strong>",id:"supported-options",level:3},{value:"<strong>In-memory (memDB)</strong>",id:"in-memory-memdb",level:2},{value:"<strong>Usage Example:</strong>",id:"usage-example-2",level:3},{value:"<strong>Supported Options:</strong>",id:"supported-options-1",level:3}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"43-devops-storage-backends",children:"4.3 DevOps: Storage Backends"})}),"\n",(0,o.jsx)(n.p,{children:"drand supports multiple storage backends: BoltDB, PostgreSQL, in-memory storage, aka. MemDB."}),"\n",(0,o.jsxs)(n.p,{children:["To launch drand with a specific backend, you need to provide the\xa0",(0,o.jsx)(n.code,{children:"--db"}),"\xa0flag."]}),"\n",(0,o.jsxs)(n.p,{children:["The supported values are:\xa0",(0,o.jsx)(n.code,{children:"bolt"}),"\xa0for BoltDB,\xa0",(0,o.jsx)(n.code,{children:"postgres"}),"\xa0for PostgreSQL,\xa0",(0,o.jsx)(n.code,{children:"memdb"}),"\xa0for the in-memory backend."]}),"\n",(0,o.jsx)(n.h2,{id:"boltdb",children:(0,o.jsx)(n.strong,{children:"BoltDB"})}),"\n",(0,o.jsx)(n.p,{children:"The BoltDB backend allows drand to store beacon data under a local filesystem."}),"\n",(0,o.jsxs)(n.p,{children:["The database can be found under the\xa0",(0,o.jsx)(n.code,{children:"<storage-path>/multibeacon/<beacon-id>/db/drand.db"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["This is the\xa0",(0,o.jsx)(n.em,{children:"default"}),"\xa0storage backend."]}),"\n",(0,o.jsx)(n.h3,{id:"usage-example",children:(0,o.jsx)(n.strong,{children:"Usage Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'drand start \\\n  -db boltdb \\\n  <other "start" options here>\n'})}),"\n",(0,o.jsxs)(n.p,{children:["You can also omit the\xa0",(0,o.jsx)(n.code,{children:"-db"}),"\xa0flag."]}),"\n",(0,o.jsx)(n.p,{children:"At the moment, there are no configurable options for this backend."}),"\n",(0,o.jsxs)(n.h2,{id:"-postgresql",children:["\ud83d\udc18 ",(0,o.jsx)(n.strong,{children:"PostgreSQL"})]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"This backend is supported since drand v1.5+."})})}),"\n",(0,o.jsx)(n.p,{children:"The PostgreSQL backend allows drand to store beacons in a database."}),"\n",(0,o.jsxs)(n.p,{children:["The database connection will use\xa0",(0,o.jsx)(n.code,{children:"UTC"}),"\xa0as default timezone. This parameter is not currently configurable."]}),"\n",(0,o.jsx)(n.h3,{id:"usage-example-1",children:(0,o.jsx)(n.strong,{children:"Usage Example:"})}),"\n",(0,o.jsx)(n.p,{children:"Before using this backend, you'll need to create a user that can read/write into the database you want the beacons to be stored in."}),"\n",(0,o.jsxs)(n.p,{children:["You'll also need to manually apply the migration schema\xa0",(0,o.jsx)(n.a,{href:"https://github.com/drand/drand/blob/f18ccee8e57babb635742f7f73d4289a943b533a/chain/postgresdb/schema/schema.sql",children:"chain/postgresdb/schema/schema.sql"}),"."]}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Note"}),": You should always apply the schema corresponding to your code version."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:"drand start \\\n  -db postgres \\\n  -pg-dsn 'postgres://drand:drand@services.local.rodb.ro:45432/drand?sslmode=disable&connect_timeout=5' \\\n  <other \"start\" options here>\n"})}),"\n",(0,o.jsx)(n.h3,{id:"supported-options",children:(0,o.jsx)(n.strong,{children:"Supported Options:"})}),"\n",(0,o.jsxs)(n.p,{children:["You can customize the PostgreSQL backend using the\xa0",(0,o.jsx)(n.code,{children:"-pg-dsn"}),"\xa0option. This allows you to control various connection properties."]}),"\n",(0,o.jsx)(n.p,{children:"The available options are:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"sslmode"}),"\xa0- If the SSL mode is disabled or not. Supports:\xa0",(0,o.jsx)(n.code,{children:"required"}),"\xa0or\xa0",(0,o.jsx)(n.code,{children:"disabled"}),". Default\xa0",(0,o.jsx)(n.code,{children:"disabled"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"connect_timeout"}),"\xa0- How many seconds to wait until the connection attempt times out. Default: 5 seconds."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"max-idle"}),"\xa0- The number of maximum idle connections to the database. Default: 2."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"max-open"}),"\xa0- The number of maximum open connections to the database. Default: 0 - unlimited.","\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["If\xa0",(0,o.jsx)(n.code,{children:"max-idle"}),"\xa0is greater than 0 and\xa0",(0,o.jsx)(n.code,{children:"max-open"}),"\xa0is less than\xa0",(0,o.jsx)(n.code,{children:"max-idle"}),", then\xa0",(0,o.jsx)(n.code,{children:"max-idle"}),"\xa0will be capped to\xa0",(0,o.jsx)(n.code,{children:"max-open"}),"\xa0limit."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"in-memory-memdb",children:(0,o.jsx)(n.strong,{children:"In-memory (memDB)"})}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:(0,o.jsx)(n.strong,{children:"This backend is supported since drand v1.5+."})})}),"\n",(0,o.jsx)(n.p,{children:"The in-memory backend, also referred to as memdb, allows the node to store all beacons in-memory."}),"\n",(0,o.jsx)(n.p,{children:"This backend will lose all the contents on node restart/stop."}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.strong,{children:"Warning:"}),"\xa0Using this backend on a threshold amount of nodes can cause catastrophic network disruptions if all nodes reboot/fail at the same time."]}),"\n",(0,o.jsx)(n.h3,{id:"usage-example-2",children:(0,o.jsx)(n.strong,{children:"Usage Example:"})}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-jsx",children:'drand start \\\n  -db memdb \\\n  -memdb-size 2000 \\\n  <other "start" options here>\n'})}),"\n",(0,o.jsx)(n.h3,{id:"supported-options-1",children:(0,o.jsx)(n.strong,{children:"Supported Options:"})}),"\n",(0,o.jsx)(n.p,{children:"You can customize the in-memory backend by specifying the following options:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"memdb-size"}),"\xa0- The number of beacons that each network will store before purging."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Note, the\xa0",(0,o.jsx)(n.code,{children:"memdb-size"}),"\xa0applies to individually to all the networks. E.g., for a\xa0",(0,o.jsx)(n.code,{children:"-memdb-size=2000"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"If you plan to run a single network, then the total number of beacons in memory will be 2000."}),"\n",(0,o.jsx)(n.li,{children:"If you plan to run two networks, then the total number of beacons in memory will be 4000."}),"\n",(0,o.jsx)(n.li,{children:"If you plan to run N networks, then the total number of beacons in memory will be N * 2000."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"To help you estimate the memory size required to operate an in-memory node, you can use a size of about 200 bytes for each beacon value stored."}),"\n",(0,o.jsx)(n.p,{children:"Besides the memory constraints, you'll also have to keep in mind the frequency of the network:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"For a 30 seconds period, 2000 beacons will cover the last ~16 hours of values."}),"\n",(0,o.jsx)(n.li,{children:"For a 3 seconds period, 2000 beacons will cover the last ~1 hour of values."}),"\n",(0,o.jsx)(n.li,{children:"For a 1 second period, 2000 beacons will cover the last ~30 minutes of values"}),"\n"]}),"\n",(0,o.jsx)(n.hr,{})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var o=s(6540);const r={},d=o.createContext(r);function t(e){const n=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),o.createElement(d.Provider,{value:n},e.children)}}}]);