<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xsl" href="atom.xsl"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://docs.drand.love/blog</id>
    <title>drand Blog</title>
    <updated>2024-09-14T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://docs.drand.love/blog"/>
    <subtitle>drand Blog</subtitle>
    <icon>https://docs.drand.love/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[fastnet sunsetting dates are set]]></title>
        <id>https://docs.drand.love/blog/fastnet-sunsetting-dates-set</id>
        <link href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set"/>
        <updated>2024-09-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The drand fastnet network is being shut down. This post contains the dates and other important information.]]></summary>
        <content type="html"><![CDATA[<h3 class="anchor anchorWithStickyNavbar_LWe7" id="tldr">TL;DR<a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#tldr" class="hash-link" aria-label="Direct link to TL;DR" title="Direct link to TL;DR">​</a></h3>
<p>If you’re currently using <span style="color:green"><code>fastnet</code></span> you must migrate to <span style="color:green"><code>quicknet</code></span> by October 31st.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-details">The Details<a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#the-details" class="hash-link" aria-label="Direct link to The Details" title="Direct link to The Details">​</a></h2>
<p>It’s been a little over a year since we <a href="https://drand.love/blog/fastnet-is-being-sunset-long-live-quicknet" target="_blank" rel="noopener noreferrer">announced</a> that the League of Entropy <span style="color:green"><code>fastnet</code></span> Mainnet network would be discontinued.</p>
<p>It is being discontinued as it uses a Domain Separation Tag (DST) in its HashToCurve functions that is non-conformant to the HashToCurve <a href="https://datatracker.ietf.org/doc/html/rfc9380" target="_blank" rel="noopener noreferrer">RFC9380</a> specification.</p>
<p>It is now time for us to finally decommission it, since our newer, RFC-conforming Mainnet network, <span style="color:green"><code>quicknet</code></span>, has been operating flawlessly.
Our biggest consumer (the Filecoin network) <a href="https://github.com/drand/FIPs/blob/master/FIPS/fip-0063.md" target="_blank" rel="noopener noreferrer">recently started using it</a> rather than our older, less storage-efficient default one.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="timeline">Timeline<a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#timeline" class="hash-link" aria-label="Direct link to Timeline" title="Direct link to Timeline">​</a></h3>
<p>We will deprecate the <span style="color:green"><code>fastnet</code></span> network in gradual steps:</p>
<ol>
<li>This post is the first step: we’re publicly announcing its deprecation timeline!</li>
<li>We will be performing so-called “scream tests” in September, starting on <strong>September 30th</strong> until the end of the month.
This will translate in practice to stopping all of our HTTP(S) and Gossipsub relays from serving the beacons created by the network for small periods of time, starting with an hour and increasing up to a full day by mid-October.
Our other relay partners Cloudflare and Storswift will be shutting down their <span style="color:green"><code>fastnet</code></span> relays in September in order to enable us to execute these scream tests.
(As usual, note that you should not be relying on any specific relay but have some sort of fallback mechanism using all available relays if liveness is critical to your project.)</li>
<li>We will stop operating HTTP and Gossipsub relays for the <span style="color:green"><code>fastnet</code></span> network completely on <strong>October 21st</strong>. The nodes and the network itself will continue to run until November 6th.</li>
<li>On <strong>November 6th</strong>, the League of Entropy nodes running the <span style="color:green"><code>fastnet</code></span> network will stop operating it and <strong>delete ALL secret key material</strong> related to it, effectively preventing any future beacons being produced or the network restarting.</li>
</ol>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-a-scream-test">Why a scream test?<a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#why-a-scream-test" class="hash-link" aria-label="Direct link to Why a scream test?" title="Direct link to Why a scream test?">​</a></h2>
<p>The goal of a scream test is that any affected users should notice that the network is not being relayed anymore and should be able to take action to prevent any significant downtime of their own services.</p>
<p>Note that the network will continue to operate without disturbance during this time and all beacons that are meant to be produced in September and October will still be produced.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="effect-on-timelocked-ciphertexts">Effect on timelocked ciphertexts<a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#effect-on-timelocked-ciphertexts" class="hash-link" aria-label="Direct link to Effect on timelocked ciphertexts" title="Direct link to Effect on timelocked ciphertexts">​</a></h2>
<p>As you may know, the League of Entropy <span style="color:green"><code>fastnet</code></span> and <span style="color:green"><code>quicknet</code></span> networks both enable you to timelock messages that cannot be decrypted until a given beacon round has been emitted by the network. You can read more about timelock in <a href="https://docs.drand.love/docs/concepts/2-4-concepts-timelock-encryption" target="_blank" rel="noopener noreferrer">our documentation</a>.</p>
<p>The destruction of all key material related to the <span style="color:green"><code>fastnet</code></span> network has the unfortunate side-effect of preventing ciphertexts that were timelocked using it towards later dates to ever be decryptable.</p>
<p>The alternative to allow timelocked ciphertexts to be decryptable in the future would be to reveal all key material, however this would mean that ciphertexts not meant to be decrypted for years and years could be decrypted early, which would break the security guarantees that the League of Entropy timelock service, tlock, strives to achieve.</p>
<p>If you believe there would be value in having a timelock service with the guarantee that ciphertexts can be decrypted, even in the case of a network deprecation even if that means decrypting them too early, please come and discuss it with us on our Slack workspace.
If there is high demand, the League of Entropy could create a new network with the promise of revealing secret material should it ever need to shut it down.
However this is currently not the case for the <span style="color:green"><code>fastnet</code></span> and <span style="color:green"><code>quicknet</code></span> networks and therefore we prefer to destroy all key material.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="wait-im-using-fastnet">Wait, I’m using <span style="color:green"><code>fastnet</code></span><a href="https://docs.drand.love/blog/fastnet-sunsetting-dates-set#wait-im-using-fastnet" class="hash-link" aria-label="Direct link to wait-im-using-fastnet" title="Direct link to wait-im-using-fastnet">​</a></h2>
<p>If you are still using the <span style="color:green"><code>fastnet</code></span> network, we recommend you plan migrating to our <span style="color:green"><code>quicknet</code></span> network.</p>
<p>They are both operating with signatures on the smaller G1 group of BLS12-381, they are both enabling timelock encryption and they are both running with a period of 3 seconds.</p>
<p>There are only two gotchas with migrating to the <span style="color:green"><code>quicknet</code></span> network.</p>
<p>The first gotcha is that you will have to properly “map” which <span style="color:green"><code>quicknet</code></span> round corresponds to what “epoch” in your own systems, since the <span style="color:green"><code>fastnet</code></span> network is older and running at the same frequency as <span style="color:green"><code>quicknet</code></span>, you will be “re-using” the same round numbers as you’ve already used in <span style="color:green"><code>fastnet</code></span> for the next year or so.</p>
<p>If you were previously just using the drand rounds based on the genesis time and the current time, note that you might not have to change anything other than using the new genesis time and the new public key for the network.</p>
<p>The second one is that we’re now conforming to RFC9380 and using the correct DST on G1, so if you’ve re-implemented the cryptographic operations needed to verify signatures or do timelock encryption, you might have to change your code</p>
<p>Otherwise if you’re relying on one of our own libraries in <a href="https://github.com/drand/go-clients" target="_blank" rel="noopener noreferrer">Go</a>, <a href="https://github.com/drand/drand-client" target="_blank" rel="noopener noreferrer">Typescript</a>, or <a href="https://github.com/randa-mu/drand-client-rs" target="_blank" rel="noopener noreferrer">Rust</a>, as well as the third party rust libraries <a href="https://github.com/noislabs/drand-verify/" target="_blank" rel="noopener noreferrer">drand-verify</a> or Rust client <a href="https://github.com/thibmeu/drand-rs" target="_blank" rel="noopener noreferrer">dee</a>, these already support the <span style="color:green"><code>quicknet</code></span> network.</p>
<p>If you need help or advice with migrating away from <span style="color:green"><code>fastnet</code></span> to <span style="color:green"><code>quicknet</code></span>, once again, don’t be shy: there are many members in the League of Entropy, and we’re always delighted to discuss with our users in our Slack workspace.
You can also reach us by email: <span style="color:green"><code>leagueofentropy@googlegroups.com</code></span></p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
        <category label="update" term="update"/>
        <category label="League-of-Entropy" term="League-of-Entropy"/>
        <category label="Major" term="Major"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Notion Widget for drand Public Randomness!]]></title>
        <id>https://docs.drand.love/blog/create-a-notion-widget</id>
        <link href="https://docs.drand.love/blog/create-a-notion-widget"/>
        <updated>2024-07-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Creating a Notion Widget to display the latest Public Randomness from drand!]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="creating-a-notion-widget-to-display-the-latest-public-randomness-from-drand">Creating a Notion Widget to display the latest Public Randomness from drand!<a href="https://docs.drand.love/blog/create-a-notion-widget#creating-a-notion-widget-to-display-the-latest-public-randomness-from-drand" class="hash-link" aria-label="Direct link to Creating a Notion Widget to display the latest Public Randomness from drand!" title="Direct link to Creating a Notion Widget to display the latest Public Randomness from drand!">​</a></h2>
<p>In this blog post, we’ll dive into creating a simple Notion widget that displays the latest public randomness from drand (for both the <code>default</code> and <code>quicknet</code> beacons from the League of Entropy network).</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="an-overview-of-drand">An overview of drand<a href="https://docs.drand.love/blog/create-a-notion-widget#an-overview-of-drand" class="hash-link" aria-label="Direct link to An overview of drand" title="Direct link to An overview of drand">​</a></h2>
<p>Our earlier <a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand">blog</a> post titled "A Guide on How to Use drand", explains the importance of public randomness and how drand provides it using a threshold network. It offers a step-by-step tutorial on setting up and using drand's randomness in applications, including fetching randomness with JavaScript, verifying it, and using it in real-life scenarios like coin flips and random selection. The guide emphasizes fairness and verifiability in applications requiring random numbers.</p>
<p>In a nutshell, drand uses a threshold network, where multiple parties collaborate to generate random numbers, ensuring no single entity can predict or bias the outcome. By leveraging hashed signatures without a complete secret key held by any party, drand achieves verifiable randomness. This system's reliability and unpredictability make it ideal for projects with a dependency on secure and verifiable randomness.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="step-into-notion-widgets">Step into Notion Widgets<a href="https://docs.drand.love/blog/create-a-notion-widget#step-into-notion-widgets" class="hash-link" aria-label="Direct link to Step into Notion Widgets" title="Direct link to Step into Notion Widgets">​</a></h2>
<p>Notion widgets are customizable, embedded elements that can be added to Notion pages to enhance functionality and interactivity. These widgets can display real-time information, like clocks, weather updates, calendars, or external content such as videos, and integrate third-party services directly within Notion. They are typically created using code snippets or widget creation tools and then embedded in Notion using the embed block feature. This enhances productivity and information accessibility within Notion workspaces.</p>
<p>Let’s make a drand notion widget!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="reactjs-component">ReactJS Component<a href="https://docs.drand.love/blog/create-a-notion-widget#reactjs-component" class="hash-link" aria-label="Direct link to ReactJS Component" title="Direct link to ReactJS Component">​</a></h2>
<p>The first step is to create a basic ReactJS application that can be embedded in any Notion page. To fetch the latest randomness beacon, the application will need to integrate drand JavaScript client. The client is publicly available <a href="https://github.com/drand/drand-client" target="_blank" rel="noopener noreferrer">https://github.com/drand/drand-client</a>.</p>
<p>Firstly, we will create a new React project and then install the <a href="https://www.npmjs.com/package/drand-client" target="_blank" rel="noopener noreferrer">drand client</a>. It is the same client used in the previous blog post. We will use it to interact with the drand randomness beacon networks (default network and quicknet) in our ReactJS code.</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> drand-client</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Once the drand client is installed, we’re ready to start implementing our simple ReactJS application! The application will allow users to select their desired network (i.e., default or quicknet) from a dropdown menu and display the latest randomness after each round, the round number and a countdown to the next randomness generation round or ETA.</p>
<p>Appropriate API URLs for the mainnet default and quicknet networks can be found here: <a href="https://docs.drand.love/docs/dev-guide/3-0-dev-guide" target="_blank" rel="noopener noreferrer">https://docs.drand.love/docs/dev-guide/3-0-dev-guide</a></p>
<p>Let’s implement the reactjs component in our <code>App.js</code> file.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// React is the main library for building the UI components</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// useState, useEffect, useRef are React hooks for managing state, side effects, and mutable references, respectively.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports maybe-class-name">React</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> useState</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> useEffect</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> useRef </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'react'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// This library is used to interact with the drand (decentralized randomness) network.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> watch</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">FastestNodeClient</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'drand-client'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// A built-in JavaScript object for handling large integers, declared global to avoid ESLint issues.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">/* global BigInt */</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>The main functional component of the React app is the App() function. Let’s go ahead and start implementing it.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function maybe-class-name" style="color:#d73a49">App</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Let’s add some state variables!</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// The latest randomness value</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">latestRandomness</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setLatestRandomness</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The estimated time of arrival of the next randomness</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">eta</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setETA</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The current round number</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">round</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setRound</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// The current selected network</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">network</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> setNetwork</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useState</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'default'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// A reference to the drand client instance</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> clientRef </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// A reference to an AbortController for managing asynchronous tasks</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> abortControllerRef </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">useRef</span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword null nil" style="color:#00009f">null</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Following the state variables, we will implement the rest of the JavaScript fo the App component.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">// useEffect runs the fetchLatestRandomness function when the component </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token comment" style="color:#999988;font-style:italic">// mounts or when network changes.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">useEffect</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">		</span><span class="token comment" style="color:#999988;font-style:italic">// fetchLatestRandomness async function to fetch randomness data.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">fetchLatestRandomness</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">async</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">try</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">	      </span><span class="token comment" style="color:#999988;font-style:italic">// chainHash, publicKey are set based on the selected network.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> chainHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> publicKey</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> updateInterval </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">network </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'default'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          chainHash </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          publicKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'868f005eb8e6e4ca0a47c8a77ceaa5309a47978a7c71bc5cce96366b5d7a569937c529eeda66c7293784a9402801af31'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">network </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'quicknet'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          chainHash </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          publicKey </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a'</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          updateInterval </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1000</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> options </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">disableBeaconVerification</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">noCache</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">false</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token literal-property property" style="color:#36acaa">chainVerificationParams</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> chainHash</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> publicKey </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">// List of drand API endpoints</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> urls </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'https://api.drand.sh'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'https://api2.drand.sh'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'https://api3.drand.sh'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token string" style="color:#e3116c">'https://drand.cloudflare.com'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">network </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'quicknet'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          urls </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> urls</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">map</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">url</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">url</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string string" style="color:#e3116c">/</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">chainHash</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">// Create an instance of FastestNodeClient from drand-client</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> headers </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">'Access-Control-Allow-Origin'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'*'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">'Access-Control-Allow-Credentials'</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">'true'</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">FastestNodeClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">urls</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> options</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> headers </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          clientRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">abortControllerRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          abortControllerRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">abort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        clientRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> client</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        client</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">start</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> abortController </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">AbortController</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        abortControllerRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> abortController</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">// Asynchronously iterates over beacons (randomness values) </span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">				</span><span class="token comment" style="color:#999988;font-style:italic">// from the drand network</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> beacon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">watch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">client</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> abortController</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> currentTime </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Calculate and set the next ETA for randomness</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> nextETA </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Date</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currentTime </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> updateInterval</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token comment" style="color:#999988;font-style:italic">// Update state with new randomness data</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">setETA</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nextETA</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toLocaleTimeString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">setRound</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">round</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token function" style="color:#d73a49">setLatestRandomness</span><span class="token punctuation" style="color:#393A34">(</span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">0x</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">beacon</span><span class="token template-string interpolation punctuation" style="color:#393A34">.</span><span class="token template-string interpolation property-access">randomness</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">catch</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">error</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'Error fetching randomness:'</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> error</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">fetchLatestRandomness</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">clientRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        clientRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">stop</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">abortControllerRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        abortControllerRef</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">current</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">abort</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">      </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">network</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Next, we will add a function called <code>handleNetworkChange</code> to update the <code>network</code> state when the user selects a different network.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> </span><span class="token function-variable function" style="color:#d73a49">handleNetworkChange</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">event</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">setNetwork</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">event</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">target</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">value</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>In the next part of the react component implementation, customise the JSX to render the UI as preferred. In our example, the UI displays a dropdown menu for users to select the preferred network (i.e., default or quicknet), the ETA of the next randomness, the latest round and the latest randomness.</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">App</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">header</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">className</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">App-header</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Latest Randomness from drand Beacon</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">h1</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          Select Beacon Network:</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">select</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">network</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">onChange</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f">handleNetworkChange</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">style</span><span class="token tag script language-javascript script-punctuation punctuation" style="color:#393A34">=</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript punctuation" style="color:#393A34">{</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript literal-property property" style="color:#36acaa">marginLeft</span><span class="token tag script language-javascript operator" style="color:#393A34">:</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript string" style="color:#e3116c">'10px'</span><span class="token tag script language-javascript" style="color:#00009f"> </span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag script language-javascript punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">option</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">default</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Default</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">option</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">            </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">option</span><span class="token tag" style="color:#00009f"> </span><span class="token tag attr-name" style="color:#00a4db">value</span><span class="token tag attr-value punctuation attr-equals" style="color:#393A34">=</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag attr-value" style="color:#e3116c">quicknet</span><span class="token tag attr-value punctuation" style="color:#393A34">"</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Quicknet</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">option</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">          </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">select</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">br</span><span class="token tag" style="color:#00009f"> </span><span class="token tag punctuation" style="color:#393A34">/&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        Next Randomness ETA: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">eta </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">eta</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Loading...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        Latest Round: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">round </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">round</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Loading...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">        Latest Randomness: </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">latestRandomness </span><span class="token operator" style="color:#393A34">?</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">latestRandomness</span><span class="token punctuation" style="color:#393A34">}</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">          </span><span class="token tag punctuation" style="color:#393A34">&lt;</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text">Loading...</span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">p</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">      </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">header</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain-text"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain-text">    </span><span class="token tag punctuation" style="color:#393A34">&lt;/</span><span class="token tag" style="color:#00009f">div</span><span class="token tag punctuation" style="color:#393A34">&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword module" style="color:#00009f">export</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">default</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token punctuation" style="color:#393A34">;</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Once implemented, to start the React application, run</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> start</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This will launch the application on&nbsp;<code>http://localhost:3000</code>. Open this URL in your browser to see the latest randomness from the drand beacon.</p>
<p>At this point, you've successfully created a React web page that fetches and displays randomness from the drand distributed randomness beacon! This setup can be a foundation for more complex applications requiring secure and verifiable randomness.</p>
<p>Before embedding our react app into a Notion page, we need to create a GitHub repository and push our code to the repository. This will allow us to use GitHub Pages to publish our React application to the web!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="github-pages-component">GitHub Pages Component<a href="https://docs.drand.love/blog/create-a-notion-widget#github-pages-component" class="hash-link" aria-label="Direct link to GitHub Pages Component" title="Direct link to GitHub Pages Component">​</a></h2>
<p>Now that you've built a React app to display randomness from the drand beacon, the next step is to deploy it on GitHub Pages. This will make your application accessible on the web.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-1-install-github-pages-package">Step 1: Install GitHub Pages Package<a href="https://docs.drand.love/blog/create-a-notion-widget#step-1-install-github-pages-package" class="hash-link" aria-label="Direct link to Step 1: Install GitHub Pages Package" title="Direct link to Step 1: Install GitHub Pages Package">​</a></h3>
<p>First, you need to install the&nbsp;<a href="https://www.npmjs.com/package/gh-pages" target="_blank" rel="noopener noreferrer"><code>gh-pages</code></a>&nbsp;package, which will help you deploy your app to GitHub Pages.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-2-updatepackagejson">Step 2: Update&nbsp;<code>package.json</code><a href="https://docs.drand.love/blog/create-a-notion-widget#step-2-updatepackagejson" class="hash-link" aria-label="Direct link to step-2-updatepackagejson" title="Direct link to step-2-updatepackagejson">​</a></h3>
<p>Next, update your&nbsp;<code>package.json</code>&nbsp;file to include the homepage, predeploy, and deploy scripts.</p>
<ol>
<li><strong>Homepage</strong>: Add a&nbsp;<code>homepage</code>&nbsp;field to specify the URL where your app will be hosted. This is typically&nbsp;<code>https://&lt;username&gt;.github.io/&lt;repository-name&gt;</code>.</li>
<li><strong>Scripts</strong>: Add&nbsp;<code>predeploy</code>&nbsp;and&nbsp;<code>deploy</code>&nbsp;scripts.</li>
</ol>
<p>Here’s an example of how your&nbsp;<code>package.json</code>&nbsp;should look:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"name"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-notion-widget"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"version"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"0.1.0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"private"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token boolean" style="color:#36acaa">true</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"homepage"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"&lt;https://yourusername.github.io/drand-notion-widget&gt;"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"dependencies"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"drand-client"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"^0.3.1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"react"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"^17.0.2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"react-dom"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"^17.0.2"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"react-scripts"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"4.0.3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"scripts"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"start"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-scripts start"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"build"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"react-scripts build"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"predeploy"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"npm run build"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"deploy"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"gh-pages -d build"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"devDependencies"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token string-property property" style="color:#36acaa">"gh-pages"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"^3.2.3"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Replace&nbsp;<code>&lt;username&gt;</code>&nbsp;with your GitHub username and&nbsp;<code>&lt;repository-name&gt;</code>&nbsp;with the name of your GitHub repository.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-3-initialize-git-repository">Step 3: Initialize Git Repository<a href="https://docs.drand.love/blog/create-a-notion-widget#step-3-initialize-git-repository" class="hash-link" aria-label="Direct link to Step 3: Initialize Git Repository" title="Direct link to Step 3: Initialize Git Repository">​</a></h3>
<p>Go to <a href="https://github.com/" target="_blank" rel="noopener noreferrer">GitHub</a> and create a new repository with the same name you used in the <code>homepage</code> field of your <code>package.json</code>.</p>
<p>Follow the instructions provided by GitHub to link your local repository to the newly created GitHub repository.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-4-deploy-to-github-pages">Step 4: Deploy to GitHub Pages<a href="https://docs.drand.love/blog/create-a-notion-widget#step-4-deploy-to-github-pages" class="hash-link" aria-label="Direct link to Step 4: Deploy to GitHub Pages" title="Direct link to Step 4: Deploy to GitHub Pages">​</a></h3>
<p>Finally, run the deploy script:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> run deploy</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>This command will create a production build of your React app and deploy it to the <code>gh-pages</code> branch of your GitHub repository. GitHub Pages will then serve your application from this branch.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="step-5-access-your-deployed-app">Step 5: Access Your Deployed App<a href="https://docs.drand.love/blog/create-a-notion-widget#step-5-access-your-deployed-app" class="hash-link" aria-label="Direct link to Step 5: Access Your Deployed App" title="Direct link to Step 5: Access Your Deployed App">​</a></h3>
<p>After deploying, your app should be accessible at <code>https://&lt;username&gt;.github.io/&lt;repository-name&gt;</code>.</p>
<p>By following these steps, you will have successfully deployed your React application to GitHub Pages, making it accessible to anyone with the URL. Happy deploying!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="putting-it-together">Putting it Together<a href="https://docs.drand.love/blog/create-a-notion-widget#putting-it-together" class="hash-link" aria-label="Direct link to Putting it Together" title="Direct link to Putting it Together">​</a></h2>
<p>With the GitHub Pages URL ready (e.g.,&nbsp;<code>https://yourusername.github.io/drand-notion-widget</code>), we can embed the drand reactjs application we deployed earlier in Notion.</p>
<p>Open the Notion page where you want to embed the URL, and embed it with the following steps:</p>
<ul>
<li>Click on the&nbsp;<code>+</code>&nbsp;button to add a new block or type&nbsp;<code>/embed</code>&nbsp;to bring up the embed block option.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="Screenshot 2024-07-25 at 09.41.46.png" src="https://docs.drand.love/assets/images/Screenshot_2024-07-25_at_09.41.46-51cb1fc8d8c0eebb3c7a68e585dd31fa.png" width="1020" height="886" class="img_ev3q"></p>
<p><img decoding="async" loading="lazy" alt="Screenshot 2024-07-25 at 09.41.53.png" src="https://docs.drand.love/assets/images/Screenshot_2024-07-25_at_09.41.53-afb823041d1fd56760db0810cf71e090.png" width="1588" height="612" class="img_ev3q"></p>
<ul>
<li>Select the&nbsp;<code>Embed</code>&nbsp;option from the list.</li>
<li>Paste your GitHub Pages URL into the embed block.</li>
<li>Press&nbsp;<code>Enter</code>&nbsp;or click on the&nbsp;<code>Embed link</code>&nbsp;button.</li>
</ul>
<p>Once the URL is embedded, you can resize the embed block by dragging the handles on the sides to fit your content appropriately. Notion might show a preview of your web app directly within the page, depending on how your app is configured and the type of content it displays.</p>
<p>An example drand widget embedded in a Notion page is shown below.</p>
<p><img decoding="async" loading="lazy" alt="Screenshot 2024-07-24 at 15.36.43.png" src="https://docs.drand.love/assets/images/Screenshot_2024-07-24_at_15.36.43-66e623706df99cd2f9f9fbf602aff9e0.png" width="1922" height="748" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="to-recap">To Recap<a href="https://docs.drand.love/blog/create-a-notion-widget#to-recap" class="hash-link" aria-label="Direct link to To Recap" title="Direct link to To Recap">​</a></h3>
<p>We have successfully created a ReactJS application that displays the latest drand randomness beacon from both drand main network options (default and quicknet)!</p>
<p>We could do more with our Notion widget, e.g., styling it to our preference. To do this, simply modify the ReactJS code and redeploy it using <code>gh-pages</code> and the changes should be reflected at the same URL.</p>
<p>Happy coding!</p>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="How-to" term="How-to"/>
        <category label="Beginner" term="Beginner"/>
        <category label="Features" term="Features"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Retro on the drand testnet outage of Feb 21, 2024]]></title>
        <id>https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21</id>
        <link href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21"/>
        <updated>2024-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Retro on the drand testnet outage of Feb 21, 2024]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tldr"><strong>TL;DR</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#tldr" class="hash-link" aria-label="Direct link to tldr" title="Direct link to tldr">​</a></h2>
<ul>
<li>Testnet fell behind for 45 minutes.</li>
<li>The ceremony was aborted.</li>
<li>Fallback to non-TLS on some nodes caused the network to fall behind.</li>
<li>Bugs in migration paths and the state machine blocked the ceremony.</li>
<li>We will re-run the ceremony asynchronously.</li>
<li>Testnet has regained stability and is operating normally.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="background">Background<a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#background" class="hash-link" aria-label="Direct link to Background" title="Direct link to Background">​</a></h2>
<p>On February 21, 2024, we had to abort our v2.0.2-testnet ceremony after encountering a series of bugs. The <code>default</code>, <code>testnet-g</code>, and <code>testnet-unchained-3s</code> networks were down for about 45 minutes, while <code>quicknet-t</code> remained relatively stable.</p>
<p>While it felt like a disaster, this is precisely why we have a testnet. It's better to face issues here than risk the 100% uptime of the mainnet!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="prior-to-the-ceremony"><strong>Prior to the Ceremony</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#prior-to-the-ceremony" class="hash-link" aria-label="Direct link to prior-to-the-ceremony" title="Direct link to prior-to-the-ceremony">​</a></h3>
<p>We'll focus on the <code>default</code> network for the remainder of this post-mortem, though the issues generally applied to the other networks as well. The prior <code>default</code> ceremony was in May 2023, nearly a year before this incident. In that ceremony, 12 nodes participated, with a threshold of 7. Due to known, non-deterministic issues in the codebase, 2 nodes failed to complete the distributed key generation. This left the network with 10 operational nodes.</p>
<p>In a previous testnet upgrade (for <code>quicknet-t</code> on January 10, 2024), the network upgraded to v2.0.0-testnet. Due to API incompatibilities, nodes on this version couldn't connect to nodes older than v1.5.7. cLabs did not participate in this ceremony and failed to upgrade their node since, causing a fork from the rest of the network, leaving the default network with 9 operational nodes.</p>
<p>In preparation for the same ceremony, a new member of Ken Labs accidentally overwrote their <code>default</code> keypair with an erroneous command. We've since published a fix to prevent this. Coupled with reverse proxy issues, the Ken Labs node became inoperative, reducing the <code>default</code> network to 8 operational nodes—just 1 above the threshold and at risk of halting.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-update-before-the-ceremony"><strong>The Update Before the Ceremony</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#the-update-before-the-ceremony" class="hash-link" aria-label="Direct link to the-update-before-the-ceremony" title="Direct link to the-update-before-the-ceremony">​</a></h3>
<p>Protocol Labs updated their nodes to v2.0.2-testnet first, and initially, everything looked fine.</p>
<p>IPFS Force soon reported issues starting their node due to a missing <code>SchemeName</code> when loading their key pair. They hadn't upgraded their node sequentially to v2.0.2-testnet, so their keys didn't contain all the correct fields. We quickly published v2.0.3-testnet, which included a simple patch, allowing IPFS Force to upgrade and start their node successfully.</p>
<p>As others started upgrading, we saw an uptick in <code>http2: frame too large</code> messages when connecting to some nodes, reported by Automata Network. Knowing Automata Network uses an nginx reverse proxy, we assumed it was related to misconfigured nginx gRPC proxies. We debugged with Automata Network, restarted the nodes, and the error disappeared temporarily.</p>
<p>As more nodes updated, they reported similar errors, and restarts no longer resolved the issues. Additionally, the <code>http2: frame too large</code> error inconsistently affected different nodes. Automata and QRL also reported <code>error reading server preface: EOF</code> when connecting to PL nodes.</p>
<p>The network stopped aggregating beacons as usual due to these connectivity issues. Periodic aggregations occurred, but not fast enough to catch up.</p>
<p>While debugging and assisting DIA data, we found their node had joined <code>quicknet-t</code> with the <code>TLS</code> field set to false. In v2.0.2-testnet, we removed TLS termination from the drand binary, expecting members to handle TLS via a reverse proxy. Our nodes connected to DIA over plaintext, which was unexpected but not a security issue (everything in drand is signed and verified).</p>
<p>This fallback to non-TLS connections explained the errors we saw. QRL logs confirmed their node dropped to non-TLS connections, causing the <code>http2: frame too large</code> and <code>error reading server preface: EOF</code> errors. We quickly shipped patch v2.0.4-testnet, and as nodes updated, the network began to recover.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-ceremony"><strong>The Ceremony</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#the-ceremony" class="hash-link" aria-label="Direct link to the-ceremony" title="Direct link to the-ceremony">​</a></h3>
<p>After allowing the network to catch up, we proceeded with the leader's ceremony instructions but encountered an error.</p>
<p>During the first load of a daemon on v2.x after a v1.5.x ceremony, the group file migrates into the DKG database. This worked as expected, but a change in our signature scheme required fetching new signatures for participating nodes. An oversight caused even the keys for nodes leaving the network to attempt to fetch, leading to failures in generating a valid proposal.</p>
<p>To avoid further updates, we deployed a patched version to our leader node and generated a proposal successfully.</p>
<p>With the patched version, we initiated the resharing on the leader node but encountered an invalid packet signature error. Another node received our packet, attempted to gossip it, and the signature was deemed invalid. Despite our DKG database reporting a successful proposal, we were unsure of other nodes' states.</p>
<p>Facing time pressure, we decided to abort the DKG and retry. The leader can issue aborts unilaterally, and this packet gossiped without issue.</p>
<p>In hindsight, we should have asked other LoE members for their <code>drand dkg status</code> output to confirm receipt of the proposal. If all had received it, we could have continued the resharing.</p>
<p>After aborting, we attempted to restart the ceremony but faced another bug. Nodes keep copies of the last successful DKG state and the most recent interim state. Comparing the new proposal against the interim state, rather than the complete state, caused rejection by the leader node and other nodes.</p>
<p>We instructed LoE members to stop their nodes, run <code>drand dkg nuke --id default</code>, and restart their nodes, restoring the v1.5.x DKG state and refreshing the interim state. With some members unable to commit more time, we called off the ceremony.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps"><strong>Next Steps</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#next-steps" class="hash-link" aria-label="Direct link to next-steps" title="Direct link to next-steps">​</a></h3>
<ul>
<li>Testnet LoE members who haven't run <code>drand dkg nuke --id default</code> should do so at their earliest convenience.</li>
<li>The drand team will patch all identified issues and release a new version.</li>
<li>The drand team will add additional testing for erroneous flows and DKG timeouts.</li>
<li>We will instruct LoE members to upgrade more gradually ahead of any ceremony to identify issues sooner.</li>
<li>We will perform an asynchronous testnet ceremony in the coming weeks.</li>
<li>We will run a mainnet ceremony on v1.5.9 to ensure all required upgrade paths are met.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="final-thoughts"><strong>Final Thoughts</strong><a href="https://docs.drand.love/blog/retro-drand-testnet-outage-2024-02-21#final-thoughts" class="hash-link" aria-label="Direct link to final-thoughts" title="Direct link to final-thoughts">​</a></h3>
<p>This was not a good look for the drand team. Drand v2 has been in the pipeline for over a year, and this is the second aborted ceremony in a row. We owe an apology to the League of Entropy members for wasting their time. This shouldn’t happen.</p>
<p>After numerous ceremonies last year, everyone is experiencing ceremony fatigue. Mandating early or late participation is unsustainable. v2 promises fully asynchronous ceremonies, eliminating the need for everyone to be online at once. The leader can start the ceremony, and members can join anytime over a week.</p>
<p>Outages, especially in distributed systems, often result from multiple bugs in succession. This outage was no exception. In v2, many things changed, leading to a confluence of edge cases. We should have done many small releases instead of one large one.</p>
<p>Thank you to everyone who participated. We are continually impressed by the professionalism and engagement of League of Entropy members. Without you, we wouldn’t be running the flagship threshold network serving over a billion requests per month.</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
        <category label="Postmortem" term="Postmortem"/>
        <category label="Ceremony" term="Ceremony"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[quicknet is live!]]></title>
        <id>https://docs.drand.love/blog/quicknet-live-on-loe-mainnet</id>
        <link href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet"/>
        <updated>2023-10-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[quicknet is live on League of Entropy mainnet]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="quicknet-is-live-on-league-of-entropy-mainnet">quicknet is live on League of Entropy mainnet<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#quicknet-is-live-on-league-of-entropy-mainnet" class="hash-link" aria-label="Direct link to quicknet is live on League of Entropy mainnet" title="Direct link to quicknet is live on League of Entropy mainnet">​</a></h2>
<p>We are thrilled to announce the General Availability (GA) of our brand new <code>quicknet</code> drand network running on the <code>mainnet</code> nodes. This significant upgrade harnesses the capabilities of the new unchained randomness mode, enables timelock encryption in production, and delivers outputs at a much faster frequency of <strong>3 seconds</strong>!</p>
<p>The network has now been running without issues for a month and a half since its launch on August 23rd, and we’ve seen our first early adopters start transitioning to it successfully.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-key-features-of-quicknet-drand-network">🌟 Key Features of <code>quicknet</code> drand Network<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#-key-features-of-quicknet-drand-network" class="hash-link" aria-label="Direct link to -key-features-of-quicknet-drand-network" title="Direct link to -key-features-of-quicknet-drand-network">​</a></h2>
<p>Keep reading to learn more details about the new features this network launch enables:</p>
<ul>
<li><strong>Unchained randomness mode:</strong> This allows for <strong>faster and simpler beacon verification</strong>. Furthermore, unchained mode allows one to predict the message that will be signed in a future round (but nothing else), thus enabling “<strong>timelock encryption</strong>”!</li>
<li><strong>Runs on the League of Entropy’s mainnet nodes:</strong> Offers robustness, scalability, and reliability to our users. It runs on the same nodes that have been flawlessly delivering beacons every 30 seconds for the past 3 years without missing a beat.</li>
<li><strong>3-second frequency:</strong> Quicker generation compared to the legacy frequency, enabling faster applications, better UX, and higher throughput.</li>
<li><strong>Shorter beacons:</strong> Thanks to the G1-G2 swap that we’re detailing below, we’ve been able to cut our signatures’ size by 50%!</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-quicknet-details">The <code>quicknet</code> Details<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#the-quicknet-details" class="hash-link" aria-label="Direct link to the-quicknet-details" title="Direct link to the-quicknet-details">​</a></h2>
<p>We successfully launched the <code>quicknet-t</code> Testnet beacon chain on July 13th and more recently the <code>quicknet</code> one on our Mainnet on August 23rd.</p>
<p>They are both available on our HTTPS relays, just like the previous <code>default</code> network.</p>
<p>All available chains on a given relay can be queried using the <code>/chains</code> endpoint, e.g. <a href="https://api.drand.sh/chains" target="_blank" rel="noopener noreferrer">https://api.drand.sh/chains</a> returns:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">[</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string" style="color:#e3116c">"8990e7a9aaed2ffed73dbd7092123d6f289930540d7651336225dc172e51b2ce"</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>which are the chain-hashes of the <code>fastnet</code>, <code>quicknet</code>, and <code>default</code> chains respectively.</p>
<p>The same holds for our testnet relays, e.g. <a href="https://pl-us.testnet.drand.sh/chains" target="_blank" rel="noopener noreferrer">https://pl-us.testnet.drand.sh/chains</a> returns the following chains:</p>
<ul>
<li><code>84b2234fb34e835dccd048255d7ad3194b81af7d978c3bf157e3469592ae4e02</code> our initial, <code>default</code> testnet launched in May 2020 and running in chained mode.</li>
<li><code>7672797f548f3f4748ac4bf3352fc6c6b6468c9ad40ad456a397545c6e2df5bf</code> our G2 based unchained testnet, launched in May 2022 and <em>compatible with timelock on G2</em>.</li>
<li><code>f3827d772c155f95a9fda8901ddd59591a082df5ac6efe3a479ddb1f5eeb202c</code> our <code>testnet-g</code> unchained beacon chain, featuring our non-RFC compliant G1 signature scheme.</li>
<li><code>cc9c398442737cbd141526600919edd69f1d6f9b4adb67e4d912fbc64341a9a5</code> which is our latest <code>quicknet-t</code> network, featuring RFC compliant BLS12-381 G1 based BLS signatures!</li>
</ul>
<p>Check our <a href="https://docs.drand.love/docs/dev-guide/3-4-dev-guide-http-api" target="_blank" rel="noopener noreferrer">DevGuide: HTTP API</a> for more information about our public endpoints!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="quicknet-t"><code>quicknet-t</code><a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#quicknet-t" class="hash-link" aria-label="Direct link to quicknet-t" title="Direct link to quicknet-t">​</a></h2>
<p>You can always get more details about a given chain by querying its <code>{chainhash}/info</code> endpoint, e.g. <a href="https://testnet-api.drand.cloudflare.com/cc9c398442737cbd141526600919edd69f1d6f9b4adb67e4d912fbc64341a9a5/info" target="_blank" rel="noopener noreferrer">https://testnet-api.drand.cloudflare.com/cc9c398442737cbd141526600919edd69f1d6f9b4adb67e4d912fbc64341a9a5/info</a> returns the <code>quicknet-t</code> details:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"public_key"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"b15b65b46fb29104f6a4b5d1e11a8da6344463973d423661bb0804846a0ecd1ef93c25057f1c0baab2ac53e56c662b66072f6d84ee791a3382bfb055afab1e6a375538d8ffc451104ac971d2dc9b168e2d3246b0be2015969cbaac298f6502da"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"period"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"genesis_time"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1689232296</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"hash"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"cc9c398442737cbd141526600919edd69f1d6f9b4adb67e4d912fbc64341a9a5"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"groupHash"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"40d49d910472d4adb1d67f65db8332f11b4284eecf05c05c5eacd5eef7d40e2d"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"schemeID"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bls-unchained-g1-rfc9380"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"metadata"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"beaconID"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"quicknet-t"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="quicknet"><code>quicknet</code><a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#quicknet" class="hash-link" aria-label="Direct link to quicknet" title="Direct link to quicknet">​</a></h2>
<p>The same holds for our mainnet relays. Any given beacon chain information can be queried from our HTTP relays, e.g. <a href="https://api.drand.sh/52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971/info" target="_blank" rel="noopener noreferrer">https://api.drand.sh/52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971/info</a> returns the <code>quicknet</code> details:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"public_key"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"83cf0f2896adee7eb8b5f01fcad3912212c437e0073e911fb90022d3e760183c8c4b450b6a0a6c3ac6a5776a2d1064510d1fec758c921cc22b0e17e63aaf4bcb5ed66304de9cf809bd274ca73bab4af5a6e9c76a4bc09e76eae8991ef5ece45a"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"period"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"genesis_time"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1692803367</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"hash"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"52db9ba70e0cc0f6eaf7803dd07447a1f5477735fd3f661792ba94600c84e971"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"groupHash"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"f477d5c89f21a17c863a7f937c6a6d15859414d2be09cd448d4279af331c5d3e"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"schemeID"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bls-unchained-g1-rfc9380"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token string-property property" style="color:#36acaa">"metadata"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"> </span><span class="token string-property property" style="color:#36acaa">"beaconID"</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"quicknet"</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sun-setting-of-fastnet">Sun-setting of <code>fastnet</code><a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#sun-setting-of-fastnet" class="hash-link" aria-label="Direct link to sun-setting-of-fastnet" title="Direct link to sun-setting-of-fastnet">​</a></h2>
<p>If you've been following our blog, you'll remember our previous post about <a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet">Timelock Encryption is now supported on drand mainnet</a> where we announced the launch of our new <code>fastnet</code> network that supported our timelock scheme. The League of Entropy launched this new drand network on March 1st, 2023. However, we quickly identified an issue with our BLS signatures on G1 that made them non-compliant with the Hash To Curve <a href="https://www.ietf.org/rfc/rfc9380.html" target="_blank" rel="noopener noreferrer">RFC 9380</a> specification, as well as most BLS signatures implementations on G1 apart from ours. Therefore, we had to double down and launch the <code>quicknet</code> network to fix this issue.</p>
<p>We’ll be sun-setting <code>fastnet</code> in the coming months <a href="https://docs.drand.love/blog/fastnet-to-be-sunset">as announced previously</a>. We are currently going to scale down <code>fastnet</code> by another 3 nodes in November, and we’ll be shutting it down completely at the earliest opportunity. Please reach out to</p>
<p>us if this is a concern for you or your team.</p>
<blockquote>
<p>ℹ️ NOTE: The default chained beacon network remains available with its legacy frequency of 30s for those who require it. We might consider deprecating it at some point in the next 18 months, but nothing is set in stone yet.</p>
</blockquote>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="shoutout-to-the-league-of-entropy-">Shoutout to the League of Entropy 🤝<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#shoutout-to-the-league-of-entropy-" class="hash-link" aria-label="Direct link to Shoutout to the League of Entropy 🤝" title="Direct link to Shoutout to the League of Entropy 🤝">​</a></h2>
<p>Our decentralization journey wouldn't be possible without <a href="https://drand.love/1e76674b75e249699445799c5083fe78" target="_blank" rel="noopener noreferrer">The League of Entropy</a>. We are delighted to share that all members in the League of Entropy are running the <code>quicknet</code> drand network alongside the <code>default</code> chained beacon network on the League’s network of 23 nodes.</p>
<p>A big shoutout to the League of Entropy for their invaluable contributions, running drand nodes for free for anyone to use whenever one needs public, verifiable randomness. Together, we're pioneering a faster, more decentralized future for randomness generation, with this new unchained network enabling a host of new possibilities for our users!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="get-started-">Get Started 🚀<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#get-started-" class="hash-link" aria-label="Direct link to Get Started 🚀" title="Direct link to Get Started 🚀">​</a></h2>
<p>For developers and users eager to dive into the new <code>quicknet</code> drand network, our <a href="https://docs.drand.love/docs/category/30-developers-guide" target="_blank" rel="noopener noreferrer">official documentation</a> provides detailed resources about using drand relays and beacons.</p>
<p>We also have a blog post about “<a href="https://docs.drand.love/blog/drand-explainer-for-begginers">drand for beginners</a>” that’s packed with useful information and another one about <a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle">using drand on-chain</a> with a demo lottery use-case running on the Filecoin Virtual Machine.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="g1---g2-swap">G1 - G2 Swap<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#g1---g2-swap" class="hash-link" aria-label="Direct link to G1 - G2 Swap" title="Direct link to G1 - G2 Swap">​</a></h2>
<p>Let us see what the G1-G2 swap really means!</p>
<p>The BLS signature schemes operate on “pairing-friendly” elliptic curves. These curves typically define 3 groups that are of interest to the cryptographer: the group G1 and G2 and the so-called “target group” GT onto which a <a href="https://en.wikipedia.org/wiki/Pairing-based_cryptography" target="_blank" rel="noopener noreferrer">pairing operation</a> will allow projecting points from the groups G1 and G2 in a bilinear manner.</p>
<p>In the current instantiations of drand networks, we’re relying on the pairing-friendly curve BLS12-381, whose groups G1 and G2 have points that can be encoded in 48 bytes and 96 bytes, respectively.</p>
<p>Therefore, it usually makes sense for BLS signatures to be instantiated with the <strong>public key</strong> over G1 and the <strong>signatures</strong> over G2, meaning <em>shorter</em> public keys but <em>longer</em> signatures. This is so because the BLS signature scheme allows for <strong>signature aggregation</strong>, which means we can aggregate multiple signatures for different public keys into a single aggregated signature that verifies against the many public keys. Using short public keys but long signatures minimizes the overall size of the data required for verification.</p>
<p>However, this does not apply to drand’s beacons since new ones are generated at a fixed frequency, each with its own signature. Therefore, it makes more sense for drand’s beacons to have shorter signatures and a longer group public key, since we cannot benefit from the aggregation capabilities of BLS signatures and the public key for a given group never changes, and can thus be stored only once, unlike the signatures which need to be stored for each single beacon.</p>
<p>This is the reason why it makes more sense given the way drand beacons work to have the public key of the group on G2 (i.e. be of size 96 bytes) and have the signatures of the beacons on the group G1 of BLS12-381 (i.e. be encoded into only 48 bytes).</p>
<p>This swap allowed us to <strong>reduce the size of the drand beacons emitted by the new <code>quicknet</code> network by 50%</strong>, as well as to <strong>increase the performance and reduce the gas cost</strong> of any on-chain operations pertaining to drand beacons produced by <code>quicknet</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="unchained-mode">Unchained Mode<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#unchained-mode" class="hash-link" aria-label="Direct link to Unchained Mode" title="Direct link to Unchained Mode">​</a></h2>
<p>We’ve introduced the notion of <a href="https://docs.drand.love/blog/multi-frequency-support-and-timelock-encryption-are-coming-to-drand">unchained beacons</a> last year on the blog already. But in essence, the new drand network brings a host of improvements aimed at enhancing the overall UX for drand users and developers. The 'unchained mode' means that new random beacons are entirely independent from previous ones, meaning that you can now perform stateless verification of a beacon, without having to keep a record of past beacons!</p>
<p>These enhancements are designed to make the drand network more robust, efficient, and user-friendly. They help in reducing the computational and storage load of our users, making drand more cost-effective and faster. The unchained nature of the beacons also means you can now decide to sample only one every 5 beacons to have a frequency of 15s or one every 20 beacons to have a frequency of 1 minute! This significantly improves flexibility and scalability for everyone.</p>
<p>We’re looking forward to your projects and ideas, don’t hesitate to <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer">join our Slack workspace</a> to discuss these.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="security-considerations">Security Considerations<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#security-considerations" class="hash-link" aria-label="Direct link to Security Considerations" title="Direct link to Security Considerations">​</a></h2>
<p>Finally, you might be wondering what these changes might mean from a <strong>security</strong> point of view. On that front, the guarantees of the League of Entropy (LoE) network remain the same:</p>
<ul>
<li>A random beacon <strong>cannot be predicted</strong> unless a threshold number of LoE nodes collude (current threshold is 12 out of 22 nodes; it should increase as the League of Entropy onboards new members).</li>
<li>A random beacon <strong>cannot be biased</strong> by anybody unless the attacker is able to change the public key of the group, which should be hard-coded in your code.</li>
</ul>
<p>The fact that the drand beacons are now <strong>unchained</strong> might give the <em>false impression</em> that they are <em>less secure</em> than the previous <em><strong>chained</strong></em> ones, however this is not the case:</p>
<ul>
<li><strong>Predictability:</strong> An attacker controlling a threshold number of shares is able to predict any arbitrary round in the unchained setting, whereas they would need to compute all intermediary rounds to predict a given future round with the chained setting. <em>However</em>, controlling a threshold amount of shares at any point in time allows computation of the shared secret of the group, and nothing can prevent such an attacker having obtained the group secret from then computing all future chained rounds offline much faster than the existing network would have, leading to the same result as in the unchained case: complete predictability of all future rounds in case of a compromise of either scheme.</li>
<li><strong>Bias:</strong> All future beacons are entirely determined by two things: the initial Distributed Key Generation and their round number. This was already the case for the chained network and hasn’t changed with the unchained schemes. For a given distributed group public key, future rounds cannot be biased in any way after the initial Distributed Key Generation ceremony has been run.</li>
</ul>
<p>We’ve also made sure our new Timelock Encryption service relying on our new <code>quicknet</code> network was <a href="https://docs.drand.love/blog/security-assessment-of-tlock">properly audited</a>. We’ve got you covered!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="extra-liveness">Extra Liveness!<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#extra-liveness" class="hash-link" aria-label="Direct link to Extra Liveness!" title="Direct link to Extra Liveness!">​</a></h2>
<p>From a <strong>liveness</strong> point of view, the way the drand nodes operate hasn’t changed and we are very happy to announce the availability of a new official HTTP relay run by <a href="https://www.storswift.com/" target="_blank" rel="noopener noreferrer">StorSwift</a>, a dear member of the League of Entropy. Their relay is reachable at <a href="https://api.drand.secureweb3.com:6875/" target="_blank" rel="noopener noreferrer">https://api.drand.secureweb3.com:6875</a> and as you can see by querying <a href="https://api.drand.secureweb3.com:6875/chains" target="_blank" rel="noopener noreferrer">https://api.drand.secureweb3.com:6875/chains</a>, it provides access to both our mainnet <code>default</code> and mainnet <code>quicknet</code> beacons. It is also located in Asia.</p>
<p>As you can see, the League of Entropy’s and drand’s security, liveness, and availability are not impacted in any way by these changes - on the contrary.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="onward">Onward!<a href="https://docs.drand.love/blog/quicknet-live-on-loe-mainnet#onward" class="hash-link" aria-label="Direct link to Onward!" title="Direct link to Onward!">​</a></h2>
<p>That’s it, we’ve launched everything we need to allow you to start using Timelock Encryption or drand random beacons right now in your services! And actually, people do!</p>
<p>If you are already doing so, or plan on doing so, don’t hesitate to join our <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer">drand Slack</a>, since we love hearing about what people are doing with what we’ve built!</p>
<p>Until next time! 😄</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing Randamu!]]></title>
        <id>https://docs.drand.love/blog/announcing-randamu</id>
        <link href="https://docs.drand.love/blog/announcing-randamu"/>
        <updated>2023-10-03T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Randamu is a spin off of the drand project with the original team members from Protocol Labs.]]></summary>
        <content type="html"><![CDATA[<p>Dear Friends &amp; Colleagues,</p>
<p>TOPLINE: After four years of stewarding the <a href="https://github.com/drand" target="_blank" rel="noopener noreferrer">drand</a> project on behalf of <a href="https://leagueofentropy.com/" target="_blank" rel="noopener noreferrer">LoE</a>, <a href="https://protocol.ai/" target="_blank" rel="noopener noreferrer">Protocol Labs</a> has decided to spin off our drand team into its own private enterprise, now called <a href="https://randa.mu/" target="_blank" rel="noopener noreferrer">Randamu</a>.</p>
<p>BACKGROUND: Protocol Labs is undergoing a slow and steady process of decentralization, expected to culminate by the end of this year. At its conclusion, Protocol Labs will no longer be one company but rather a network of companies known as the Protocol Labs Network (PLN). Today the PLN is already approaching 100 independent companies - each unique, but bound together in common cause to drive breakthroughs in computing that push humanity forward. For more details please visit the <a href="https://protocol.ai/blog/" target="_blank" rel="noopener noreferrer">Protocol Labs Blog</a>.</p>
<p>What do these changes mean for you, the League of Entropy and the drand codebase?</p>
<p>TLDR; not much change in the near term, but expect new opportunities to collaborate in the coming months.</p>
<p>Both Protocol Labs and Randamu remain steadfast in our commitments to public goods, the League of Entropy, open-source software, and the drand codebase. Protocol Labs plans to continue maintaining their nodes through Randamu. We are humbled and honored by the trust they have placed in us to improve and maintain drand, while continuing to shepherd LoE network operations - we don't expect any of that to change, but to ensure we aren’t relying on any incorrect assumptions, we will put this to a vote in the loe-governance Slack channel.</p>
<p>Moving forward we are updating drand in v2.0 to enable asynchronous ceremonies - no more jumping on the phone at odd hours for periodic key re-sharing. This, plus other improvements should help drand's operation to become more automated in the coming weeks, requiring less of your valuable time and attention.</p>
<p>The Randamu team is excited by the opportunities we have before us as an independent organization. We have a growing list of commercial offerings based on threshold cryptography in our development pipeline, several of which benefit from drand, and some of which you, as an LoE member, may wish to partner with us on. We'll keep you posted here as these plans develop and mature.</p>
<p>Please accept our deepest thanks for your continued trust and partnership.</p>
<p>Warm regards, -- Yolan, Patrick, Laith &amp; Erick (The Randamu Team)</p>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <author>
            <name>Patrick McClurg</name>
        </author>
        <author>
            <name>Laith Alissa</name>
        </author>
        <author>
            <name>Erick Watson</name>
        </author>
        <category label="News" term="News"/>
        <category label="update" term="update"/>
        <category label="League-of-Entropy" term="League-of-Entropy"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[fastnet to be sunset, long live quicknet]]></title>
        <id>https://docs.drand.love/blog/fastnet-to-be-sunset</id>
        <link href="https://docs.drand.love/blog/fastnet-to-be-sunset"/>
        <updated>2023-07-02T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Last month, we have identified a minor issue in our implementation of the BLS signature on G1 used in the newly launched fastnet network. This is an RFC compliance issue which led us to plan the launch of a new compliant quicknet network and to spin down fastnet.]]></summary>
        <content type="html"><![CDATA[<p>Last month, we have identified&nbsp;<a href="https://github.com/drand/kyber-bls12381/issues/22" target="_blank" rel="noopener noreferrer">**a minor issue</a>** in our implementation of the BLS signature on G1 used in the newly launched&nbsp;<code>fastnet</code>&nbsp;network. This is an RFC compliance issue which led us to plan the launch of a new compliant&nbsp;<code>quicknet</code>&nbsp;network and to spin down&nbsp;<code>fastnet</code>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-issue">The Issue<a href="https://docs.drand.love/blog/fastnet-to-be-sunset#the-issue" class="hash-link" aria-label="Direct link to The Issue" title="Direct link to The Issue">​</a></h2>
<p>While not a&nbsp;<em>security issue</em>&nbsp;for drand, the problem is affecting our “hash to curve” function, used to map round numbers to a point on the elliptic curve that get signed using&nbsp;<a href="https://en.wikipedia.org/wiki/BLS_digital_signature" target="_blank" rel="noopener noreferrer">**threshold BLS</a>** by the drand network. The issue relates to the upcoming Hash To Curve&nbsp;<a href="https://www.rfc-editor.org/auth48/rfc9380" target="_blank" rel="noopener noreferrer"><strong>RFC 9380</strong></a>, which mandates specific “Domain Separation Tags“ (DST) for certain curves. In the BLS curve case, where we have two different groups (G1 and G2) that we can map to, the RFC recommends using different DST for both groups (it’s the point of having a DST!). Sadly, our implementation of BLS signatures was initially written to perform signatures on G2 and not on G1… (Stay tuned for an upcoming blog post about the choice of the group for BLS signatures!) The usage of a global variable in our codebase for the DST meant that both our G1 and G2 implementations were sharing the same DST. Since we don’t have “official test vectors” for BLS signatures on G1 and G2, this went unnoticed until&nbsp;<a href="https://drandworkspace.slack.com/archives/C011JB8NU2E/p1683527867397549?thread_ts=1683197659.071499&amp;cid=C011JB8NU2E" target="_blank" rel="noopener noreferrer">**someone tried</a>** to verify our signatures done on G1 with a C++ implementation and reported the issue in our Slack.</p>
<p>We launched our&nbsp;<code>fastnet</code>&nbsp;Testnet in February to try and identify any potential issues, while also allowing people to start building their applications on top of our new design featuring&nbsp;<a href="https://docs.drand.love/docs/concepts/2-1-concepts-cryptography" target="_blank" rel="noopener noreferrer"><strong>unchained randomness</strong></a> and&nbsp;<a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet"><strong>timelock capabilities</strong></a>. Despite this, the issue went unnoticed in all signature verification implementations that we tried with our drand beacons (including our typescript&nbsp;<a href="https://github.com/drand/drand-client" target="_blank" rel="noopener noreferrer">**drand-client</a>** codebase and two different third party Rust implementations of drand verification!). Amusingly, within weeks of this issue being identified, a second team, building their own timelock scheme on top of our new&nbsp;<code>fastnet</code>&nbsp;network, also identified the issue and reported it to us.</p>
<p>For us, the main takeaways here are:</p>
<ul>
<li>Make sure to have as many test vectors as possible, generated using multiple, different implementations.</li>
<li>Generate more noise and community outreach around new network launches, including new testnets.</li>
<li>Expect early adopters to take at least 2-3 months to start testing their implementations building on top of your new features, and therefore plan your testnet and mainnet launches accordingly.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://docs.drand.love/blog/fastnet-to-be-sunset#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h2>
<p>This issue means that&nbsp;<strong>all beacons</strong>&nbsp;emitted for the new&nbsp;<code>fastnet</code>&nbsp;network that we launched on March 1st are featuring signatures that are non-compliant with the hash to curve spec, and so is the case for beacons from our testnet.</p>
<p>While not a&nbsp;<em>security</em>&nbsp;issue for our usage, using the wrong domain separator tag to map points on G1 is non-compliant with the RFC and therefore not great for future compatibility and adoption of our new network. We have&nbsp;<a href="https://github.com/drand/drand/pull/1249" target="_blank" rel="noopener noreferrer">**already implemented a new, RFC-compliant scheme</a>** for drand, affectionately named&nbsp;<code>bls-unchained-g1-rfc9380</code>.</p>
<p>During investigations, we identified 4 main ways to solve this issue:</p>
<ul>
<li><strong>Do nothing and document the non-compliance</strong>&nbsp;of the signatures on the drand website, however this would have caused significant friction for future adoption, reducing the usability and the developer experience of drand.</li>
<li><strong>Create a new&nbsp;<code>quicknet</code>&nbsp;network and keep the existing&nbsp;<code>fastnet</code>&nbsp;network running</strong>, causing a 90% increase of the load of our existing nodes, forcing us to increase our tech debt and maintenance burden but not disrupting any existing users. (The verifiability of drand beacons allows our users to re-use them or redistribute them without us knowing about it. This further means that we do not have visibility into our user-base, and therefore, getting in contact with them to notify them of a “<code>fastnet</code>&nbsp;shutdown” is not an option).</li>
<li><strong>Create a new</strong>&nbsp;<code>fastnet</code>&nbsp;<strong>network (<code>quicknet</code>)</strong>&nbsp;using a&nbsp;<strong>compliant implementation</strong>&nbsp;of the signature function and&nbsp;<strong>shutdown</strong>&nbsp;the existing non-compliant one immediately. This would inevitably cause our current&nbsp;<code>fastnet</code>&nbsp;users to be completely stranded and having to switch quickly to our new&nbsp;<code>quicknet</code>&nbsp;network, causing serious disruption for our users.</li>
<li><strong>Create a new</strong>&nbsp;<code>quicknet</code>&nbsp;<strong>network</strong>&nbsp;using a&nbsp;<strong>compliant implementation</strong>&nbsp;of the signature function and&nbsp;<strong>sunset</strong>&nbsp;the existing one over multiple months before&nbsp;<strong>shutting it down entirely</strong>. This would allow our users to ensure 100% uptime of their services, while gradually migrating to the new network.</li>
</ul>
<p>Given the above, [The League of Entropy][LOE] has voted and elected to choose the last option, using its governance process, and therefore will:</p>
<ul>
<li><strong>Sunset</strong>&nbsp;the current&nbsp;<code>fastnet</code>&nbsp;network, reduce the number of Mainnet nodes running it (from 21 with a&nbsp;<strong>threshold of 11</strong>&nbsp;to a committee of 14 with a&nbsp;<strong>threshold of 8</strong>), stop onboarding new nodes to it, and most importantly&nbsp;<strong>stop it entirely</strong>&nbsp;as soon as possible.</li>
<li>launch a new&nbsp;<code>quicknet</code>&nbsp;network with the same settings, e.g. 3 seconds frequency, 2 seconds catch-up period,&nbsp;<a href="https://docs.drand.love/blog/multi-frequency-support-and-timelock-encryption-are-coming-to-drand">**unchained randomness</a>** (thus compatible with timelock schemes), except it would be using our newly released&nbsp;<code>bls-unchained-g1-rfc9380</code>&nbsp;scheme which is RFC-compliant.</li>
<li>do the same on our Testnet&nbsp;<code>testnet-g</code>&nbsp;network, shutting it down before Mainnet, in order to allow us to effectively test the shutdown scenario.</li>
</ul>
<p>We are currently planning to launch these new&nbsp;<code>quicknet</code>&nbsp;networks in July on both our Testnet and Mainnet.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="consequences">Consequences<a href="https://docs.drand.love/blog/fastnet-to-be-sunset#consequences" class="hash-link" aria-label="Direct link to Consequences" title="Direct link to Consequences">​</a></h2>
<p>The biggest problem with shutting down our&nbsp;<code>fastnet</code>&nbsp;network, is that any usage of its public key to perform timelock encryption past the shutdown date will lead to ciphertexts that cannot be decrypted. This is because the required beacon’s signature won’t be emitted by the network. This means that whoever used our timelock system with our&nbsp;<code>fastnet</code>&nbsp;network (or our&nbsp;<code>testnet-g</code>&nbsp;one) and set a decryption date after their shutdown date won’t be able to decrypt their ciphertexts.</p>
<p>For “classical” public randomness usage, switching to a new network does not affect the quality or verifiability of the randomness.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="recommendations">Recommendations<a href="https://docs.drand.love/blog/fastnet-to-be-sunset#recommendations" class="hash-link" aria-label="Direct link to Recommendations" title="Direct link to Recommendations">​</a></h2>
<p>For “public verifiable randomness usage”, we recommend always having a way to transition to a new “beacon chain” easily shall the need arise. This means being able to switch to a new public key and starting to monitor a new chainhash at a given time.</p>
<p>If you are working on a&nbsp;<strong>timelock</strong>-based system relying on our&nbsp;<code>fastnet</code>&nbsp;be aware that you’ll need to either launch a new version of your application in July, or plan a way to transition to our new network, and that any ciphertexts meant for December, or later, on&nbsp;<code>fastnet</code>&nbsp;are not going to be decryptable after that point. The League of Entropy members will be deleting their secret shares allowing them to perform the threshold operations required to produce valid signatures for the group. We recommend communicating to your users that they’ll need to re-issue any such ciphertexts using the new network if they want them to be decryptable after December 2023.</p>
<p>If you are using our&nbsp;<code>fastnet</code>&nbsp;for randomness, plan your transition to the new network by the end of Q3’2023.</p>
<p>Please, don’t hesitate to reach us (for example on&nbsp;<a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>our Slack</strong></a>) in case you have any concerns or if your current&nbsp;<code>fastnet</code>&nbsp;usage cannot accommodate a shutdown of the&nbsp;<code>fastnet</code>&nbsp;network by the end of the year.</p>
<p>Stay tuned for more blog posts about the groups G1 and G2 and how to choose the right one when doing BLS signatures, as well as for the quicknet launch announcement after our new upcoming Distributed Key Generation ceremony. See you on quicknet in July!</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Announcing the drand Code Walkthroughs]]></title>
        <id>https://docs.drand.love/blog/announcing-drand-code-walkthrough</id>
        <link href="https://docs.drand.love/blog/announcing-drand-code-walkthrough"/>
        <updated>2023-06-05T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[code-walkthroughs]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" src="https://images.spr.so/cdn-cgi/imagedelivery/j42No7y-dcokJuNgXeA0ig/843ad7ff-c63c-4c1d-86fe-8cb595395f15/drand-code-walkthroughs.5726ed76/w=1080,quality=90,fit=scale-down" alt="code-walkthroughs" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-where--when"><strong>What, Where, &amp; When</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#what-where--when" class="hash-link" aria-label="Direct link to what-where--when" title="Direct link to what-where--when">​</a></h2>
<p>The drand community and developer base is expanding rapidly. drand usage is gaining momentum with many applications using it to draw randomness for their systems. While our <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer">**slack workspace</a>** is a great place to interact with other developers and the drand core maintainers, code walkthroughs are even better if one wants to gain a holistic view of the system, become familiar with nitty gritty details, and ask questions in real time.</p>
<p>With those benefits in mind, we have designed and will be running a series of virtual code walkthroughs on the drand codebase. The series consists of eight (8) sessions, taking place <strong>every other Tuesday at 1430 UTC, starting on the 20th of June</strong>. Each session is scheduled to last approximately 45mins with 30mins for Q&amp;A and pair programming assistance.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="registration"><strong>Registration</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#registration" class="hash-link" aria-label="Direct link to registration" title="Direct link to registration">​</a></h2>
<p>Registrations are handled through Lu.ma. Any modifications or updates to the schedule or topics will be reflected on the Lu.ma event page, so the best way to be kept up-to-date is to register for the event series.</p>
<p>Lu.ma registration page: <a href="https://lu.ma/drand-code-walkthroughs" target="_blank" rel="noopener noreferrer"><strong>https://lu.ma/drand-code-walkthroughs</strong></a></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="sessions-in-a-nutshell"><strong>Sessions in a Nutshell</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#sessions-in-a-nutshell" class="hash-link" aria-label="Direct link to sessions-in-a-nutshell" title="Direct link to sessions-in-a-nutshell">​</a></h2>
<p>The topics and brief descriptions of the code walkthrough sessions are listed below. Note that both topics and dates are subject to change, especially given that the series is scheduled to run through the summer period with several events taking place. The best way to be kept up-to-date is to register through the above Lu.ma link and join our drand slack workspace.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-1-what-is-drand-how-to-use-its-cli-and-clients"><strong>Session 1: “What is drand?: How to use its CLI and Clients”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-1-what-is-drand-how-to-use-its-cli-and-clients" class="hash-link" aria-label="Direct link to session-1-what-is-drand-how-to-use-its-cli-and-clients" title="Direct link to session-1-what-is-drand-how-to-use-its-cli-and-clients">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>20th June 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> We will explain what the drand binary is, what it does and run through all of the CLI commands and related parameters to explain how to start a node as an operator and how to sync and follow other nodes. We will also run a Distributed Key Generation (DKG), perhaps the most central part of setting up a drand network. In this session we will not go through the DKG code, which is subject to another session. Finally we will do a walkthrough of the drand client libraries. There are currently two drand libraries (in Go and in JS), which we will use to consume drand randomness.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-2-what-is-a-drand-beacon-how-is-it-created"><strong>Session 2: “What is a drand beacon? How is it created?”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-2-what-is-a-drand-beacon-how-is-it-created" class="hash-link" aria-label="Direct link to session-2-what-is-a-drand-beacon-how-is-it-created" title="Direct link to session-2-what-is-a-drand-beacon-how-is-it-created">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>4th July 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> This session will focus on the randomness beacons produced by the drand network. We will explain the different representations of a beacon, as well as the beacon model followed by the drand mainnet. We will also dive into the details of why drand randomness is “verifiable” and how to derive randomness from the signature. drand is based on “threshold cryptography”, which, in practice, means that every node is producing a “partial” of the final signature. In this session, we will explain how partials are aggregated to produce the final randomness beacon.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-3-drand-cryptographic-primitives"><strong>Session 3: “drand Cryptographic Primitives”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-3-drand-cryptographic-primitives" class="hash-link" aria-label="Direct link to session-3-drand-cryptographic-primitives" title="Direct link to session-3-drand-cryptographic-primitives">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>18th July 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> Cryptography is at the heart of drand. In this session, we will dive into the cryptographic primitives on which drand is based on. We will explain and showcase keypairs and distributed keys, the vault and the Kyber library.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-4-drands-distributed-key-generation-dkg"><strong>Session 4: “drand’s Distributed Key Generation (DKG)”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-4-drands-distributed-key-generation-dkg" class="hash-link" aria-label="Direct link to session-4-drands-distributed-key-generation-dkg" title="Direct link to session-4-drands-distributed-key-generation-dkg">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>1st August 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> Distributed Key Generation is the most central part of the drand network and threshold cryptography more in general. In this session, we will dive into the details of basic concepts, such as the Shamir secret sharing, Pedersen DKG, the “group file” and their implementation. We will also go through the lifecycle of a DKG event, relevant security considerations and the difference between “initial sharing” vs “resharing”.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-5-the-different-layers-of-the-drand-system-from-the-daemon-and-the-beacon-process-to-storagesync-manager-and-the-client"><strong>Session 5: “The different layers of the drand system: from the daemon and the beacon process to storage/sync manager and the client”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-5-the-different-layers-of-the-drand-system-from-the-daemon-and-the-beacon-process-to-storagesync-manager-and-the-client" class="hash-link" aria-label="Direct link to session-5-the-different-layers-of-the-drand-system-from-the-daemon-and-the-beacon-process-to-storagesync-manager-and-the-client" title="Direct link to session-5-the-different-layers-of-the-drand-system-from-the-daemon-and-the-beacon-process-to-storagesync-manager-and-the-client">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>15th August 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> At a high level, drand comes as one coherent system. However, it is composed of several subcomponents that are distinct and play a particular role in the operation of the overall system. In this session, we’re going to put puzzle pieces from previous sessions together, define the taxonomy of the components, specify where does one stop and the other start and how they communicate and interoperate with one another.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-6-drands-networking-stack--monitoring-infra"><strong>Session 6: “drand’s Networking Stack &amp; Monitoring Infra”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-6-drands-networking-stack--monitoring-infra" class="hash-link" aria-label="Direct link to session-6-drands-networking-stack--monitoring-infra" title="Direct link to session-6-drands-networking-stack--monitoring-infra">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>29th August 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> As a distributed, Internet-based system, drand has a number of networking components to distribute randomness beacons across the drand network nodes and make beacons available to its users. In this session we will go through the network-layer protocols used by drand and will also cover the monitoring tools, metrics and infrastructure that we have in place in order to guarantee smooth operation and identify concerning situations before they become serious incidents.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-7-drands-storage--sync-functionality"><strong>Session 7: “drand’s Storage &amp; Sync Functionality”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-7-drands-storage--sync-functionality" class="hash-link" aria-label="Direct link to session-7-drands-storage--sync-functionality" title="Direct link to session-7-drands-storage--sync-functionality">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>12th September 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> drand beacons are not only valuable at the time they’re produced, but also well after their generation for applications that want to use or verify past beacons. As such, storage of beacons is an important functionality that all nodes in the network should support. In this session, we’ll go through the different types of storage backends. We will also cover the “sync” functionality, i.e., the case when a new node (re-)joins the network and needs to sync the history of beacons.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="session-8-client-libraries-deep-dive"><strong>Session 8: “Client Libraries Deep Dive”</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#session-8-client-libraries-deep-dive" class="hash-link" aria-label="Direct link to session-8-client-libraries-deep-dive" title="Direct link to session-8-client-libraries-deep-dive">​</a></h3>
<ul>
<li><strong>Dates:</strong> Tuesday, <strong>26th September 2023</strong>, 1430 UTC</li>
<li><strong>Description:</strong> In this final session, we will walk through the code of the client libraries in detail. We will also go through examples of using these libraries in practical use-cases to showcase their workflows. In addition, we will dive into the timelock encryption libraries and their code.</li>
</ul>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="looking-forward"><strong>Looking forward</strong><a href="https://docs.drand.love/blog/announcing-drand-code-walkthrough#looking-forward" class="hash-link" aria-label="Direct link to looking-forward" title="Direct link to looking-forward">​</a></h2>
<p>We’re looking forward to an enlightening series of sessions. Please share your thoughts and feedback by joining the drand slack workspace <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>invitation link</strong></a>] and posting questions in the <code>#code-walkthroughs</code> channel. Requests for extra topics are more than welcome. The League of Entropy can also be reached through email at: <code>leagueofentropy [ at ] googlegroups.com</code>.</p>
<p>Finally, don't forget to <strong>register for free</strong> to our code walkthroughs on our <a href="https://lu.ma/drand-code-walkthroughs" target="_blank" rel="noopener noreferrer"><strong>registration page</strong></a>, see you there!</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
        <category label="How-to" term="How-to"/>
        <category label="Code-Walkthrough" term="Code-Walkthrough"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[drand Explainer for Beginners]]></title>
        <id>https://docs.drand.love/blog/drand-explainer-for-begginers</id>
        <link href="https://docs.drand.love/blog/drand-explainer-for-begginers"/>
        <updated>2023-06-01T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[drand is software for running a threshold network that generates publicly verifiable random numbers.]]></summary>
        <content type="html"><![CDATA[<p><strong>drand is software for running a threshold network that generates publicly verifiable random numbers.</strong></p>
<p>Boy, that's a mouthful.</p>
<!-- -->
<p>To the uninitiated, a bunch of questions spring to mind: What on earth is a threshold network? How can random numbers be verified?! Surely they're random? Why would I want my random numbers to be public?</p>
<p>Well, this blog post is the right place to uncover all the mysteries of the above statement. Let's work backwards to build up a picture of what drand is and how it works.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-random-numbers">🔢 <strong>Random Numbers</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#-random-numbers" class="hash-link" aria-label="Direct link to -random-numbers" title="Direct link to -random-numbers">​</a></h3>
<p>What constitutes a random number?</p>
<p>There are some fancy mathematical definitions, but stated simply: it's a number that cannot be guessed at a rate better than chance. Suppose we choose a random number in the range 1 and 100 (including 100). If we asked 100 people to guess our number, on average only one of those people would guess the number correctly, even with a fully random selection process.</p>
<p>For cryptographic purposes, it's often important that two people don't select the same random number. For example, if two people used the same random number as their Bitcoin private key, they'd be sharing a wallet (and the wallet's funds)!</p>
<p>While this is impossible to prevent entirely, cryptographic schemes use astronomically large number ranges (on the order of the number of atoms in the universe!) to ensure users get unique random numbers if they use proven selection methods.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-public-random-numbers-vs-private-random-numbers">🏙️ <strong>Public Random Numbers vs. Private Random Numbers</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#%EF%B8%8F-public-random-numbers-vs-private-random-numbers" class="hash-link" aria-label="Direct link to ️-public-random-numbers-vs-private-random-numbers" title="Direct link to ️-public-random-numbers-vs-private-random-numbers">​</a></h3>
<p>Random numbers are used by everybody daily: connecting to a website over HTTPS, signing into our bank account, creating a user account, or purchasing an item online generates random identifiers. Most of these are <em>private</em> random numbers. If you shared random numbers associated with your bank account publicly, a malicious actor might be able to steal all your money.</p>
<p>Public random numbers are different. These are numbers we <em>want</em> everybody to see: think lottery numbers, the roll of a dice in a board game, selecting a business to be audited at random, or a coin flip for who takes the kick-off in a football match. This is exactly the type of randomness that drand provides—you definitely <em><strong>shouldn't</strong></em> generate your Bitcoin private key using drand!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-verifiability">🔍 <strong>Verifiability</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#-verifiability" class="hash-link" aria-label="Direct link to -verifiability" title="Direct link to -verifiability">​</a></h3>
<p>In examples of public randomness, humans have created procedures to ensure fairness: lottery numbers are drawn from fancy machines, dice are shared in board games to prevent cheating, and a referee picks the coin and flips it for a fair start in football.</p>
<p>However, these solutions are not truly <em>verifiable</em> and require trusting third parties (e.g., referees, dice &amp; lotto manufacturers, etc.) For generating random numbers fast and at scale, proving fairness is more challenging:</p>
<aside><p>❓</p><ul>
<li>If I trust a third party to generate the random number, how do I know they really chose it randomly?</li>
<li>If I trust a third party to run a random number generator I have audited, how do I know they're running the code they say they are?</li>
<li>If I run some code to generate a random number, how do I know the code is statistically random and bug-free?</li>
</ul></aside>
<p>Human intuition can mislead us when it comes to randomness. If you were to look at the following binary numbers, which do you think is the most random?</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">1111111111111111</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">0000000000000000</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">1001011010001001</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>At first glance, the first two seem far too uniform to be random, but from a random selection of values from <code>0000000000000000</code> to <code>1111111111111111</code> (inclusive), they are all equally likely to occur!</p>
<p>How can we verify a randomly selected number was really random? It seems impossible. However, in drand, we exploit some cryptographic principles to make this possible. To fully understand it, we need a bit of background.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-digital-signatures">🔏 <strong>Digital Signatures</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#-digital-signatures" class="hash-link" aria-label="Direct link to -digital-signatures" title="Direct link to -digital-signatures">​</a></h3>
<p>Digital signatures are similar to human signatures: we take some piece of data (like a contract or a letter) and append a message that uniquely identifies us and binds the signature to the data. Digital signatures differ from human signatures in several ways:</p>
<ul>
<li>Human signatures map to a single person; digital signatures map to a single private key (and a person could own multiple private keys).</li>
<li>Human signatures can be copied to another piece of data and still be valid; digital signatures are bound to a single piece of data, as the data is 'included' in the signature in a mathematical sense.</li>
<li>Digital signatures are verifiable; we can run mathematical operations to verify that the person who created the signature had access to the data and the private key.</li>
</ul>
<aside><p>🔐 SIDE NOTE: private keys are like a password. They're a huge (private) random number used in lieu of a password. They're more secure than passwords due to their size, and users tend to store them somewhere rather than typing them by hand. In digital signature schemes, users also create a public key, a mathematical counterpart to the private key used to verify signatures. The public key can be shared publicly, and anyone can use it to validate signatures.</p></aside>
<p>So why are we talking about signatures?! This post is about randomness, and I even said we need randomness to generate a signature! Some properties of digital signatures are particularly interesting for randomness. Given some data, an attacker who has our public key but not our private key cannot predict a valid signature for it better than chance. To create a valid signature, they would have to create all possible signatures and verify them against the public key, which would take more computing power than exists in the world. Additionally, there's exactly one valid signature for a given message and private key combination.</p>
<p>Another way to look at this: for users without access to a private key, a signature is indistinguishable from a random number and can be verified using the associated message and public key. If we had a way to create signatures with a private key that nobody could access, we would have publicly verifiable random numbers!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-threshold-cryptography">🕳️ <strong>Threshold Cryptography</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#%EF%B8%8F-threshold-cryptography" class="hash-link" aria-label="Direct link to ️-threshold-cryptography" title="Direct link to ️-threshold-cryptography">​</a></h3>
<p>We're close to explaining drand now. We've identified a way to create publicly verifiable numbers that are random under some assumptions but with a small problem: somebody needs to be a custodian for the private key used to create signatures. That amounts to trusting a third party, which we identified as an issue.</p>
<p>Enter threshold cryptography.</p>
<p>Threshold cryptography is like a business bank account: to reduce risk, transactions over a certain value require multiple parties to sign off. A threshold signature scheme is similar in that multiple parties must work together to create a valid signature.</p>
<p>Each party has their own private key and signs a message with it to create a 'partial signature'. When enough partial signatures are created, they can be aggregated into a final valid signature. There's no hierarchy between signers in a threshold scheme; any group of partial signatures will do. 'Enough' is a parameter of the protocol called 'threshold'. It's also called a <code>t of n</code> signature scheme, where <code>t</code> (threshold) of <code>n</code> (total) parties must sign to create a valid signature.</p>
<p>Threshold signature schemes improve our security model compared to normal signature schemes. Instead of relying on a single trusted third party, we can trust a group of numerous, unrelated parties. The probability that <code>t</code> parties collude against us is lower than that of a single party. Another key piece of intuition is that the group shares a public key and private key, but <em>nobody</em> has access to the private key. This is created during a distributed key generation protocol at the foundation of a network.</p>
<p>The threshold signing scheme exploits mathematical properties of <a href="https://en.wikipedia.org/wiki/Pairing-based_cryptography" target="_blank" rel="noopener noreferrer"><strong>pairing-based cryptography</strong></a>, which is outside the scope of this post, to create signatures without ever needing the private key.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-tying-it-all-together">👟 <strong>Tying It All Together</strong><a href="https://docs.drand.love/blog/drand-explainer-for-begginers#-tying-it-all-together" class="hash-link" aria-label="Direct link to -tying-it-all-together" title="Direct link to -tying-it-all-together">​</a></h3>
<p>We've covered a lot of ground, so let's pull it back into the real world and show how drand works in practice.</p>
<p>At the foundation of a drand network, all parties generate their own private key and initiate a distributed key generation protocol to create a shared pair of private and public keys. Recall that <em>NO</em> single party has access to that private key. Every epoch (30 seconds for our default mainnet network), each party signs the same message (the epoch number) and sends their partial signature to the network. Upon receiving partial signatures from others, each party verifies their validity and, upon reaching a threshold number, aggregates them into a single valid group signature. This single group signature is effectively a random number that can be verified as having been created by the drand network. This randomness is released publicly for others to verify and use. Because drand epochs coincide with times on the clock, consumers can commit to certain future random values for use in their applications (e.g., "I will draw the lottery using the random number generated at 12 PM tomorrow by the drand network, which will be epoch 123456").</p>
<p>This was a whistle-stop tour of how drand works, and some details were omitted for clarity.</p>
<p>If you'd like to dive deeper into the cryptography or operation of the drand network, check out our <a href="https://docs.drand.love/docs/category/20-concepts-getting-started" target="_blank" rel="noopener noreferrer"><strong>documentation</strong></a>, <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>join our Slack workspace</strong></a>, or email us at: <a href="mailto:leagueofentropy@googlegroups.com" target="_blank" rel="noopener noreferrer">leagueofentropy@googlegroups.com</a>.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="suggested-references-for-learning-more">Suggested References for Learning More:<a href="https://docs.drand.love/blog/drand-explainer-for-begginers#suggested-references-for-learning-more" class="hash-link" aria-label="Direct link to Suggested References for Learning More:" title="Direct link to Suggested References for Learning More:">​</a></h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Random_number" target="_blank" rel="noopener noreferrer">Random Number</a></li>
<li><a href="https://en.wikipedia.org/wiki/Elliptic_curve" target="_blank" rel="noopener noreferrer">Elliptic Curve</a></li>
<li><a href="https://en.wikipedia.org/wiki/Threshold_cryptography" target="_blank" rel="noopener noreferrer">Threshold Cryptography</a></li>
<li><a href="https://en.wikipedia.org/wiki/Digital_signature" target="_blank" rel="noopener noreferrer">Digital Signature</a></li>
</ul>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="Beginner" term="Beginner"/>
        <category label="Features" term="Features"/>
        <category label="How-to" term="How-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Security Assessment of tlock]]></title>
        <id>https://docs.drand.love/blog/security-assessment-of-tlock</id>
        <link href="https://docs.drand.love/blog/security-assessment-of-tlock"/>
        <updated>2023-05-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are happy to announce that our timed release encryption scheme "tlock" and its implementations, which we introduced in our previous blog post, have recently undergone a comprehensive security assessment by Kudelski Security. This was a crucial step in ensuring the robustness and reliability of our encryption system in order to guarantee that timelocked content remains encrypted until the time has come for it to be decrypted and never before.]]></summary>
        <content type="html"><![CDATA[<p>We are happy to announce that our timed release encryption scheme "<a href="https://eprint.iacr.org/2023/189" target="_blank" rel="noopener noreferrer"><strong>tlock</strong></a>" and its implementations, which we introduced in our&nbsp;<a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet"><strong>previous blog post</strong></a>, have recently undergone a comprehensive security assessment by&nbsp;<a href="https://drand.love/d800657770494c6cb39cffb5480407a4" target="_blank" rel="noopener noreferrer">Kudelski Security</a>. This was a crucial step in ensuring the robustness and reliability of our encryption system in order to guarantee that timelocked content remains encrypted until the time has come for it to be decrypted and never before.</p>
<!-- -->
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="overview"><strong>Overview</strong><a href="https://docs.drand.love/blog/security-assessment-of-tlock#overview" class="hash-link" aria-label="Direct link to overview" title="Direct link to overview">​</a></h2>
<p><a href="https://drand.love/d800657770494c6cb39cffb5480407a4" target="_blank" rel="noopener noreferrer">Kudelski Security</a>, a renowned provider of cybersecurity solutions, was engaged to review the implementation of drand’s timelock encryption scheme and timelock responsible disclosure demo. The work covered:</p>
<ul>
<li><code>tlock</code>, our&nbsp;<a href="https://github.com/drand/tlock/" target="_blank" rel="noopener noreferrer">**Go implementation</a>** as both a library and a command line tool (<code>tle</code>) for timelock encryption.</li>
<li><code>tlock-js</code>, our interoperable&nbsp;<a href="https://github.com/drand/tlock-js/" target="_blank" rel="noopener noreferrer">**TypeScript implementation</a>** of timelock encryption.</li>
<li><code>timevault</code>, our web demo for timelock encryption, which is available at&nbsp;<a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer"><strong>https://timevault.drand.love/</strong></a>.</li>
<li>Their critical security dependencies.</li>
</ul>
<p>The audit primarily focused on code security, protocol security, and ensuring our implementations matched the&nbsp;<a href="https://eprint.iacr.org/2023/189" target="_blank" rel="noopener noreferrer">tlock paper</a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-audit-findings">📋 <strong>Audit Findings</strong><a href="https://docs.drand.love/blog/security-assessment-of-tlock#-audit-findings" class="hash-link" aria-label="Direct link to -audit-findings" title="Direct link to -audit-findings">​</a></h2>
<p>During the audit, Kudelski Security identified:</p>
<ul>
<li>1 High severity issue</li>
<li>5 Medium severity issues</li>
<li>3 Low severity issues</li>
</ul>
<p>It is worth highlighting that none of the identified issues would have put existing encrypted data at risk. We are pleased to report that all identified issues have been addressed and corrected. The&nbsp;<strong>detailed audit report is available on IPFS</strong>&nbsp;with CID&nbsp;<a href="https://ipfs.io/ipfs/QmWQvTdiD3fSwJgasPLppHZKP6SMvsuTUnb1vRP2xM7y4m" target="_blank" rel="noopener noreferrer"><strong>QmWQvTdiD3fSwJgasPLppHZKP6SMvsuTUnb1vRP2xM7y4m</strong></a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="️-security-considerations">🛡️ <strong>Security Considerations</strong><a href="https://docs.drand.love/blog/security-assessment-of-tlock#%EF%B8%8F-security-considerations" class="hash-link" aria-label="Direct link to ️-security-considerations" title="Direct link to ️-security-considerations">​</a></h2>
<p>The security of our timelock encryption system relies on four main aspects:</p>
<ol>
<li>The security of the&nbsp;<a href="https://en.wikipedia.org/wiki/Boneh%E2%80%93Franklin_scheme" target="_blank" rel="noopener noreferrer">**Identity Encryption Scheme</a>** from 2001 that we used, and our implementation of it.</li>
<li>The security of the underlying threshold&nbsp;<a href="https://en.wikipedia.org/wiki/BLS_digital_signature" target="_blank" rel="noopener noreferrer">**BLS scheme</a>** from 2003 that we used, and our implementation of it.</li>
<li>The security of&nbsp;<code>age</code>'s underlying primitives, and that of the&nbsp;<code>age</code>&nbsp;implementation used to encrypt the actual data. (See&nbsp;<a href="https://age-encryption.org/" target="_blank" rel="noopener noreferrer">**https://age-encryption.org/</a>** for details about&nbsp;<code>age</code>.)</li>
<li>The security of the threshold network providing you with its BLS signatures at a given frequency.</li>
</ol>
<p>Please note that neither the BLS, nor the IBE scheme are "quantum resistant". However, a quantum computer that is able to break them seems unlikely to be built within the next 5-10 years, therefore we currently believe you can expect a "long term security" horizon of about five years by relying on our design for timed release encryption.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-conclusion">🏆 <strong>Conclusion</strong><a href="https://docs.drand.love/blog/security-assessment-of-tlock#-conclusion" class="hash-link" aria-label="Direct link to -conclusion" title="Direct link to -conclusion">​</a></h2>
<p>We are grateful to the Kudelski Security Research team for their thorough and professional audit. Their expertise has been critical in helping us improve the security of drand's timelock encryption functionality. We also want to thank the Kudelski team for the smooth collaboration and availability throughout the assessment.</p>
<p>However, it's important to note that no security assessment can guarantee 100% security. While we've taken extensive measures to ensure the security of our timelock encryption system, we encourage users to understand the security considerations and make informed decisions, especially when encrypting data for a long time period.</p>
<p>Our code being entirely open-source, further scrutiny and reviews are always welcome. Don't hesitate to&nbsp;<a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer">**join our Slack workspace</a>** to discuss our Timelock design, possible use-cases, or to show us what you've done with it!</p>
<p>We look forward to continuing to enhance the security and reliability of our systems, and we remain committed to transparency and collaboration in all our endeavors.</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
        <category label="Updates" term="Updates"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Randomness Summit Tokyo 2023]]></title>
        <id>https://docs.drand.love/blog/randomness-summit-tokyo-2023</id>
        <link href="https://docs.drand.love/blog/randomness-summit-tokyo-2023"/>
        <updated>2023-04-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[On the 30th of March, the drand team hosted the second edition of the Randomness Summit alongside Real World Crypto in Tokyo, the first having been online only in 2020 during the COVID pandemic.]]></summary>
        <content type="html"><![CDATA[<p>On the 30th of March, the drand team hosted the second edition of the Randomness Summit alongside <a href="https://rwc.iacr.org/" target="_blank" rel="noopener noreferrer"><strong>Real World Crypto</strong></a> in Tokyo, the first having been <a href="https://randomness2020.com/" target="_blank" rel="noopener noreferrer"><strong>online only in 2020</strong></a> during the COVID pandemic.</p>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="overview">Overview<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#overview" class="hash-link" aria-label="Direct link to Overview" title="Direct link to Overview">​</a></h3>
<p>The Randomness Summit was a one day conference consisting of talks from a range of speakers on topics such as verifiable randomness functions, verifiable delay functions, distributed key generation, cryptographic specifications, and more!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="kickoff-presentation">Kickoff Presentation<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#kickoff-presentation" class="hash-link" aria-label="Direct link to Kickoff Presentation" title="Direct link to Kickoff Presentation">​</a></h3>
<ul>
<li><strong>Speaker:</strong> Patrick McClurg from <a href="https://randa.mu/" target="_blank" rel="noopener noreferrer">Randamu</a></li>
<li><strong>Topic:</strong> Brief overview of drand's progress since the 2020 Randomness Summit.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-presentations">📽️ Presentations<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#%EF%B8%8F-presentations" class="hash-link" aria-label="Direct link to 📽️ Presentations" title="Direct link to 📽️ Presentations">​</a></h3>
<ol>
<li><strong>Generating Distributed Randomness</strong>
<ul>
<li><strong>Speaker:</strong> Lefteris Kokoris Kogias from IST Austria and Mysten Labs</li>
<li><strong>Topic:</strong> Architecting for producing distributed randomness under asynchrony safely.</li>
</ul>
</li>
<li><strong>Specification-Writing Tips</strong>
<ul>
<li><strong>Speaker:</strong> Filippo Valsorda</li>
<li><strong>Topic:</strong> Recommendations for specification-writers on avoiding common pitfalls when specifying protocols and schemes using randomness.</li>
</ul>
</li>
<li><strong>Types of Randomness Beacons</strong>
<ul>
<li><strong>Speaker:</strong> Bernardo David from the University of Copenhagen</li>
<li><strong>Topic:</strong> Comprehensive breakdown of different types of randomness beacons, their guarantees, and how to combine them to fit your security model.</li>
</ul>
</li>
<li><strong>Supra VRF Architecture</strong>
<ul>
<li><strong>Speaker:</strong> Pratyay Mukherjee</li>
<li><strong>Topic:</strong> Challenges faced in designing the <a href="https://supraoracles.com/" target="_blank" rel="noopener noreferrer"><strong>Supra</strong></a> VRF and the innovative solutions created.</li>
</ul>
</li>
<li><strong>NIST Randomness Efforts</strong>
<ul>
<li><strong>Speaker:</strong> Luis Brandão from NIST</li>
<li><strong>Topic:</strong> Ongoing efforts to standardize randomness beacons and threshold cryptography. Details can be found <a href="https://csrc.nist.gov/projects/interoperable-randomness-beacons" target="_blank" rel="noopener noreferrer"><strong>on the NIST website</strong></a>.</li>
</ul>
</li>
<li><strong>Scalable Byzantine Fault Tolerance Algorithms</strong>
<ul>
<li><strong>Speaker:</strong> Matej Pavlovic from the Consensus Lab team at [Protocol Labs][PROTOCOL]</li>
<li><strong>Topic:</strong> Latest research into scalable Byzantine fault tolerance algorithms and how randomness can improve their performance characteristics.</li>
</ul>
</li>
<li><strong>Timelock Encryption</strong>
<ul>
<li><strong>Speaker:</strong> Yolan Romailler from <a href="https://randa.mu/" target="_blank" rel="noopener noreferrer">Randamu</a></li>
<li><strong>Topic:</strong> Shortened version of his talk on timelock encryption from the main Real World Crypto conference. The full talk is available on the <a href="https://www.youtube.com/watch?v=Xh849Ij3lhU" target="_blank" rel="noopener noreferrer"><strong>IACR YouTube channel</strong></a>.</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-real-world-applications">🌎 Real-World Applications<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#-real-world-applications" class="hash-link" aria-label="Direct link to 🌎 Real-World Applications" title="Direct link to 🌎 Real-World Applications">​</a></h3>
<ol>
<li><strong>Drand Implementation in Rust and No-Code Tool</strong>
<ul>
<li><strong>Speaker:</strong> Hong Yu from <a href="https://docs.drand.love/blog/storswift-joins-the-league-of-entropy">StorSwift</a></li>
<li><strong>Topic:</strong> Upcoming drand implementation in Rust and a no-code tool for creating smart contracts using timelock encryption.</li>
</ul>
</li>
<li><strong>CLI Tool for Drand and Timelock Encryption</strong>
<ul>
<li><strong>Speaker:</strong> Thibault Meunier from <a href="https://drand.love/12bbcd90be5f4e42af18599f65019e7e" target="_blank" rel="noopener noreferrer">Cloudflare</a></li>
<li><strong>Topic:</strong> New <a href="https://github.com/thibmeu/drand-rs" target="_blank" rel="noopener noreferrer"><strong>CLI tool</strong></a> for drand and timelock encryption.</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-resources">📚 Resources<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#-resources" class="hash-link" aria-label="Direct link to 📚 Resources" title="Direct link to 📚 Resources">​</a></h3>
<p>For those who couldn't attend, we have compiled a YouTube playlist of all the talks available <a href="https://www.youtube.com/watch?v=U4bEewhZIus&amp;list=PLhuBigpl7lqtE883Z3I6FCrtjmVOJ7A9c" target="_blank" rel="noopener noreferrer"><strong>here</strong></a>. The slide decks are available for download on IPFS: <a href="https://ipfs.io/ipfs/Qmd8Hbj31yXq6MDptaiez5JiRiG3vyU672oYTFfaV31NZL" target="_blank" rel="noopener noreferrer"><strong>Qmd8Hbj31yXq6MDptaiez5JiRiG3vyU672oYTFfaV31NZL</strong></a>.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-future-events">🎪 Future Events<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#-future-events" class="hash-link" aria-label="Direct link to 🎪 Future Events" title="Direct link to 🎪 Future Events">​</a></h3>
<p>It's too early to release details of a possible Randomness Summit 2024, but a big thank you to everyone who attended. We look forward to seeing you at future events! Monitor this blog for announcements of future Randomness Summits and other events where the drand team will be present.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-stay-connected">📬 Stay Connected<a href="https://docs.drand.love/blog/randomness-summit-tokyo-2023#-stay-connected" class="hash-link" aria-label="Direct link to 📬 Stay Connected" title="Direct link to 📬 Stay Connected">​</a></h3>
<p>Join our <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>drand Slack Workspace</strong></a> to discuss drand and randomness-related topics or share your use cases. Follow us on our newly created <a href="https://twitter.com/drand_loe" target="_blank" rel="noopener noreferrer"><strong>@drand_loe Twitter account</strong></a> to stay updated with the latest news from the drand team.</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="Conferences-and-Events" term="Conferences-and-Events"/>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Timelock Encryption is now supported on drand mainnet]]></title>
        <id>https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet</id>
        <link href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet"/>
        <updated>2023-03-27T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[The drand team has been busy during the past year working on delivering an exciting new feature: Timelock Encryption. Timelock encryption enables you to encrypt a message that cannot be decrypted by anyone until a specified time in the future.]]></summary>
        <content type="html"><![CDATA[<p>The drand team has been busy during the past year working on delivering an exciting new feature: <strong>Timelock Encryption</strong>. Timelock encryption enables you to encrypt a message that cannot be decrypted by anyone until a specified time in the future.</p>
<!-- -->
<p>You might have heard about it from us already, since we were proud to present not just one, but <em>three</em> new open-source projects in August 2022, bringing a new very exciting feature called “timelock encryption” to our drand testnet!</p>
<p>Well, wait no more: we have now finally reached “General Availability” and our <em>audited</em> Timelock Encryption scheme is <strong>now compatible with the drand mainnet</strong>, thanks to our newly launched <code>fastnet</code> network which we’ll discuss quickly in this post as well.</p>
<p>Thanks to the team's work, you can now use these features in many ways:</p>
<ul>
<li><a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer"><strong>Our Timevault web-demo</strong></a> using <code>tlock-js</code> to perform timelock encryption easily in your browser, locally.</li>
<li><code>tlock</code>, a <a href="https://github.com/drand/tlock/" target="_blank" rel="noopener noreferrer"><strong>Go library doing Timelock encryption</strong></a> by relying on drand’s beacon signatures, along with <code>tle</code> - a CLI tool allowing you to use timelock encryption just like you would use <code>gpg</code> or <code>age</code>.</li>
<li><code>tlock-js</code>, a <a href="https://github.com/drand/tlock-js/" target="_blank" rel="noopener noreferrer"><strong>TS library doing the same</strong></a> for your browser apps.</li>
<li>Using the unchained drand beacons from our new <code>fastnet</code> network: <a href="https://api.drand.sh/dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493/public/latest" target="_blank" rel="noopener noreferrer">https://api.drand.sh/dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493/public/latest</a></li>
</ul>
<aside><p>⚠️ NOTE: <code>fastnet</code> has been deprecated in favor of <code>quicknet</code> since the original publication of this blog post.</p></aside>
<p>These were already <a href="https://www.youtube.com/watch?t=1652&amp;v=IW7sdSd2wOQ&amp;feature=youtu.be" target="_blank" rel="noopener noreferrer"><strong>presented at DEF CON</strong></a> when we launched them on our testnet. Check the talk if you want more details about possible applications and the history behind Timelock Encryption.</p>
<p>More recently, we released a <a href="https://eprint.iacr.org/2023/189" target="_blank" rel="noopener noreferrer"><strong>pre-print paper</strong></a> explaining the details of our timelock scheme and we have a talk scheduled at Real World Crypto tomorrow, on March 29th, 2023 where we’ll explain more in depth how <strong>we transformed the League of Entropy</strong> and drand into the first practical <strong>Timelock Encryption service</strong> globally available with a <strong>100% uptime history</strong> over the past 3 years!</p>
<p>But for today let’s first see what this “Timelock Encryption” we’re talking about is.</p>
<p>P.S.: If this has piqued your interest and you’d rather watch a video about how this works, you can also find more technical explanations about what is coming next in this <a href="https://www.youtube.com/watch?v=Zgsv4LY0Sn0" target="_blank" rel="noopener noreferrer"><strong>Research Seminar</strong></a> that we gave in September!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="timelock-encryption"><strong>Timelock Encryption</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#timelock-encryption" class="hash-link" aria-label="Direct link to timelock-encryption" title="Direct link to timelock-encryption">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="drand-background"><strong>Drand background</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#drand-background" class="hash-link" aria-label="Direct link to drand-background" title="Direct link to drand-background">​</a></h3>
<p>In order to understand how the system works, we need to first recall a few things about how drand functions…</p>
<p>First things first, let’s recall that <code>drand</code>, which stands for “<strong>distributed randomness</strong>” (and thus pronounced “dee-rand”), is our very own <a href="https://github.com/drand/drand" target="_blank" rel="noopener noreferrer"><strong>open-source software</strong></a> meant to create distributed randomness networks. These networks emit <strong>random “beacons” at a given frequency</strong> in a way that you never need to trust any single party in the network, and can <em><strong>verify</strong></em> that you actually have random values as long as you trust there is <strong>never a threshold number of malicious parties</strong> in the network, thus the security of the threshold BLS signature scheme holds.</p>
<p>To accomplish this drand relies on the threshold BLS signature scheme and its security proof that tells us BLS signatures are indistinguishable from random ones (in the group of all possible signatures). At each epoch, the members of a drand network work together to create an aggregated BLS signature on the message <strong>m = H(round)}</strong>. An important point here for what comes next is that the <strong>message is predictable</strong> according to the target round at a time T (in other words, there is a mapping between time and round numbers, since the network operates at a fixed frequency), when we’re using drand in the so-called unchained mode that <a href="https://docs.drand.love/blog/multi-frequency-support-and-timelock-encryption-are-coming-to-drand"><strong>we presented in a post last year</strong></a>.</p>
<p>You can learn more about drand and how it works under the hood in our documentation: <a href="https://docs.drand.love/docs/concepts/2-1-concepts-cryptography" target="_blank" rel="noopener noreferrer"><strong>Cryptography Page</strong></a></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="the-league-of-entropy"><strong>The League of Entropy</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#the-league-of-entropy" class="hash-link" aria-label="Direct link to the-league-of-entropy" title="Direct link to the-league-of-entropy">​</a></h3>
<p>The League of Entropy is a consortium of organisations that decided, back in 2019, to start running a global drand network in order to provide free, unbiased, and verifiable public randomness for anyone to use. Since 2019, the League has been growing steadily, with new members joining it regularly and thus increasing the security and trust we can have in the League. You can read more about the League on Cloudflare’s website: <a href="https://www.cloudflare.com/leagueofentropy/" target="_blank" rel="noopener noreferrer"><strong>https://www.cloudflare.com/leagueofentropy/</strong></a></p>
<p>As of March 2023, the League is constituted of over 21 drand nodes operated by 18 organisations, with a threshold of over 50%, and you can follow our blog to see when new partners are joining the League: <a href="https://docs.drand.love/blog" target="_blank" rel="noopener noreferrer">Blog</a></p>
<p>In case you were worried after reading our paper, know that whenever new members join the League, we conduct a so-called “resharing” of the League’s group secret key using verifiable secret sharing. This means that <strong>the public keys of the drand networks we run never change</strong> and it is not going to cause an incompatibility issue with our timelock scheme.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="our-timed-release-encryption-scheme"><strong>Our “timed release encryption” scheme</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#our-timed-release-encryption-scheme" class="hash-link" aria-label="Direct link to our-timed-release-encryption-scheme" title="Direct link to our-timed-release-encryption-scheme">​</a></h3>
<p>Our timelock scheme, also sometimes called a “timed release encryption” (TRE) scheme, is a direct application of the <a href="https://crypto.stanford.edu/~dabo/papers/bfibe.pdf" target="_blank" rel="noopener noreferrer"><strong>Identity Based Encryption scheme</strong></a> (IBE) from Boneh et al. (section 4.2) to the threshold BLS signature setting of drand.</p>
<p>In IBE, participants are referred to via their <strong>identity</strong> which can be an email, a name, etc. and anyone can encrypt a message to any identity, even if the recipient is not “registered” with the system. This works because there is a Private Key Generator (PKG) service that distributes the required secret keys to participants depending on their identity.</p>
<p>As it turns out, the League of Entropy is basically acting as a <strong>“Distributed PKG” network</strong> because they’re using the BLS scheme to sign messages and, (as already denoted in the initial 2001 IBE paper), the decryption keys of their IBE scheme can be used as signatures over a given identity, which is exactly what the BLS scheme is accomplishing.</p>
<p>Moreover, it uses <strong>the round number as the identity</strong>, <strong>and the corresponding signature becomes the private key to decrypt.</strong> In short:</p>
<p>Public key = <strong>round number</strong></p>
<p>Private key = <strong>signature over the round number</strong></p>
<p>Given this, the flow is as follows:</p>
<ul>
<li>Anyone can encrypt a message towards a specific round X in advance</li>
<li>When the time has come, the network will generate the BLS signature (i.e. the <em>private key)</em> and release it publicly</li>
<li>Anybody can retrieve the BLS signature of the beacon produced at round X and decrypt any message that was encrypted towards that round X.</li>
</ul>
<p>For more technical information about how this works, you can <strong>check our pre-print paper</strong> about our Timelock Encryption scheme on ePrint <a href="https://eprint.iacr.org/2023/189" target="_blank" rel="noopener noreferrer"><strong>here</strong></a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="hybrid-encryption"><strong>Hybrid Encryption</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#hybrid-encryption" class="hash-link" aria-label="Direct link to hybrid-encryption" title="Direct link to hybrid-encryption">​</a></h2>
<p>Because our timed release encryption scheme allows users to <strong>encrypt a fixed sized message</strong>, and also to achieve better performance in general, it relies on “<strong>Hybrid encryption</strong>” to encrypt arbitrary data more easily. Hybrid encryption means that we are using an asymmetric encryption scheme to <strong>encrypt a Data Encryption Key (DEK)</strong> used to subsequently encrypt the actual data we want to transmit with a symmetric encryption scheme. This is commonly known as “wrapping a key”, and it's how modern public key encryption schemes function to encrypt more data than their “block size”. It has the benefit of being much faster than doing asymmetric encryption of each chunk of data. Typically, the DEK is an AES or ChaCha key, both being blazingly fast symmetric encryption schemes compared to the public key scheme used to encrypt the DEK.</p>
<p>Hybrid encryption also allows users to significantly reduce the size of a ciphertext meant for multiple recipients, since one only needs to wrap the DEK for different recipients while the bulk of the encrypted data remains the same for all recipients since it was encrypted with a single symmetric key.</p>
<p>In practice, we decided the easiest way to implement this was to rely on the existing <a href="https://github.com/FiloSottile/age" target="_blank" rel="noopener noreferrer"><strong><code>age</code></strong></a> library and tool to create new types of “recipients” and “identities” for it using our timelock scheme to wrap symmetric encryption keys. This is made easier with <code>age</code> through the notion of “stanzas”, data itself is encrypted using a <code>filekey</code> which is then encrypted (wrapped) using one or multiple stanzas following the battle-tested hybrid encryption technique.</p>
<p>We tried to stay pretty close to the age-plugin format in order to possibly adapt this new scheme into a plugin, perhaps sometime in the future. Here is our custom tlock stanza:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token operator" style="color:#393A34">-</span><span class="token operator" style="color:#393A34">&gt;</span><span class="token plain"> tlock </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">roundnumber</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">chainhash</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain">timelocked</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">fileKey</span><span class="token operator" style="color:#393A34">-</span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">given</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">roundnumber</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">and</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">chainhash</span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="tlock"><strong>tlock</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#tlock" class="hash-link" aria-label="Direct link to tlock" title="Direct link to tlock">​</a></h2>
<p>We have implemented the scheme in a <strong>Golang library</strong> <a href="https://github.com/drand/tlock" target="_blank" rel="noopener noreferrer"><strong>tlock</strong></a> and a <strong>Typescript library</strong> <a href="https://github.com/drand/tlock-js" target="_blank" rel="noopener noreferrer"><strong>tlock-js</strong></a>.</p>
<p>For convenience, we have implemented:</p>
<ul>
<li><strong>a web demo</strong> at <a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer"><strong>https://timevault.drand.love/</strong></a> using our tlock-js library</li>
<li><strong>a CLI utility</strong> <code>tle</code> that you can find on the <a href="https://github.com/drand/tlock#install-or-build-the-cli" target="_blank" rel="noopener noreferrer"><strong>tlock repo</strong></a></li>
</ul>
<p>The <code>tlock</code> Go library is a pure Go library implemented on top of an implementation of <a href="https://github.com/drand/kyber/tree/master/encrypt/ibe" target="_blank" rel="noopener noreferrer"><strong>IBE in our Kyber library</strong></a> fork and instantiated using <a href="https://github.com/kilic/bls12-381" target="_blank" rel="noopener noreferrer"><strong>kilic’s BLS12-381</strong></a> elliptic curve library. The <code>tle</code> CLI tool is built following the same kind of flags as used in <code>age</code> itself. Here’s a quick demo using it:</p>
<p><img decoding="async" loading="lazy" src="https://user-images.githubusercontent.com/181501/177999855-cc1cfef7-ee1c-4193-bea7-4ee2e689f2d1.svg" alt="https://user-images.githubusercontent.com/181501/177999855-cc1cfef7-ee1c-4193-bea7-4ee2e689f2d1.svg" class="img_ev3q"></p>
<p>The <code>tlock-js</code> is a pure Typescript implementation of timed encryption using the drand network. Like the <code>tlock</code> Go library, it uses <a href="http://age-encryption.org/" target="_blank" rel="noopener noreferrer"><strong>Age encryption</strong></a> under the hood to perform symmetric encryption on a given payload using <a href="https://en.wikipedia.org/wiki/ChaCha20-Poly1305" target="_blank" rel="noopener noreferrer"><strong>chacha20-poly1305</strong></a> and wraps the symmetric key using timelock encryption. This ciphertext is then (optionally) encoded using ascii armor making it easy to move around and display - similar to what PGP and other utilities do.</p>
<p>The library only has a handful of dependencies:</p>
<ul>
<li>some of the noble crypto libraries (the de facto standard for many algorithms in js/ts)</li>
<li>Stablelib’s chacha20-poly1305 implementation</li>
<li>a polyfill for node’s <code>Buffer</code></li>
</ul>
<p>It’s available on npm at <a href="https://www.npmjs.com/package/tlock-js" target="_blank" rel="noopener noreferrer"><strong>https://www.npmjs.com/package/tlock-js</strong></a> and github at <a href="https://github.com/drand/tlock-js" target="_blank" rel="noopener noreferrer"><strong>https://github.com/drand/tlock-js</strong></a> and is used by our <a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer"><strong>Timevault web demo</strong></a>!</p>
<p>Finally, to ensure the best security guarantees possible to our users, we had both <code>tlock</code> and <code>tlock-js</code> go through a code assessment by a renowned cybersecurity company, which we’ll be releasing shortly as well.</p>
<h1><strong>Our new <code>fastnet</code> network</strong></h1>
<p>The best part about our timelock solution is that it is live on our mainnet! You can try it in your browser here: <a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer"><strong>https://timevault.drand.love/</strong></a></p>
<p>This is possible because the League of Entropy actually launched a new drand mainnet network, on March 1st, 2023: the <code>fastnet</code> 🏎️ network! It is readily available through our mainnet endpoints: <a href="https://api.drand.sh/dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493/info" target="_blank" rel="noopener noreferrer"><strong>https://api.drand.sh/dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493/info</strong></a></p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"public_key"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"a0b862a7527fee3a731bcb59280ab6abd62d5c0b6ea03dc4ddf6612fdfc9d01f01c31542541771903475eb1ec6615f8d0df0b8b6dce385811d6dcf8cbefb8759e5e616a3dfd054c928940766d9a5b9db91e3b697e5d70a975181e007f87fca5e"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"period"</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"genesis_time"</span><span class="token operator" style="color:#393A34">:</span><span class="token number" style="color:#36acaa">1677685200</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"hash"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"dbd506d6ef76e5f386f41c651dcb808c5bcbd75471cc4eafa3f4df7ad4e4c493"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"groupHash"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"a81e9d63f614ccdb144b8ff79fbd4d5a2d22055c0bfe4ee9a8092003dab1c6c0"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"schemeID"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"bls-unchained-on-g1"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token string-property property" style="color:#36acaa">"metadata"</span><span class="token operator" style="color:#393A34">:</span><span class="token punctuation" style="color:#393A34">{</span><span class="token string-property property" style="color:#36acaa">"beaconID"</span><span class="token operator" style="color:#393A34">:</span><span class="token string" style="color:#e3116c">"fastnet"</span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It is running at a 3 second frequency, which is 10 times faster than our previous chained <code>default</code> mainnet network, and it uses G1 for signatures, which means its random beacons have signatures that are 50% smaller! It is also running in unchained mode, and thus enables timelock encryption on mainnet!</p>
<p>You can start building your very own sealed-bid auction system on top of it, <a href="https://research.kudelskisecurity.com/2023/02/22/releasing-a-timelocked-responsible-disclosure/" target="_blank" rel="noopener noreferrer"><strong>do a timelocked responsible disclosure</strong></a>, or use it as a <a href="https://gwern.net/self-decrypting#uses" target="_blank" rel="noopener noreferrer"><strong>deadman’s switch by encrypting your bitcoin private key</strong></a> with it and giving the timelocked ciphertext to your heirs, while having the full security of running on the League of Entropy mainnet instead of on our testnet, as was the case until now.</p>
<p>Expect another blog post in the coming months with more details about the G1/G2 swap in <code>fastnet</code>, and what it means for BLS signatures, and for the applications using drand beacons. (Hints: smaller footprint, better performance and, where applicable, much cheaper gas costs!)</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="related-works"><strong>Related works</strong><a href="https://docs.drand.love/blog/timelock-encryption-is-now-supported-on-drand-mainnet#related-works" class="hash-link" aria-label="Direct link to related-works" title="Direct link to related-works">​</a></h2>
<p>Our timelock work has already gathered significant interest from the community and we’re happy to report that there already exists:</p>
<ul>
<li>a <a href="https://github.com/timoth-y/tlock-rs" target="_blank" rel="noopener noreferrer"><strong>tlock-rs library</strong></a> prototype by <a href="https://twitter.com/timoethey" target="_blank" rel="noopener noreferrer"><strong>Timofey Luin</strong></a> supporting only the timelock part of our scheme without the hybrid encryption using age and not compatible with our <code>tle</code> tool. Timofey then used it to benchmark arithmetic circuits doing <a href="https://github.com/timoftime/zk-timelock" target="_blank" rel="noopener noreferrer"><strong>verifiable timelock encryption</strong></a> with Arkworks, cool stuff!</li>
<li>the <a href="https://github.com/thibmeu/tlock-rs" target="_blank" rel="noopener noreferrer"><strong>tlock_age library</strong></a> by <a href="https://twitter.com/thibmeu" target="_blank" rel="noopener noreferrer"><strong>Thibault Meunier</strong></a>, which started as a fork of the tlock-rs library adding age support to it and making it compatible with the age-based scheme implemented in our <code>tlock</code> and <code>tlock-js</code> libraries as well as in our <code>tle</code> tool. Thibault also changed the API significantly and is looking at migrating to a much faster Rust BLS12-381 implementation. If you’re looking at using timelock in Rust, search no more!</li>
<li>a <a href="https://github.com/thibmeu/drand-rs" target="_blank" rel="noopener noreferrer"><strong>CLI tool in Rust</strong></a>, called <code>dee</code>, also by <a href="https://twitter.com/thibmeu" target="_blank" rel="noopener noreferrer"><strong>Thibault</strong></a>, that uses his library in order to be compatible with <code>tle</code> but that also has cool drand-related features to get verifiable, public randomness. It also has a different set of flags.</li>
</ul>
<p>We are also aware of a few blockchain ecosystems that are currently looking into building on top of the BLS signatures emitted by the League of Entropy in order to achieve their own timed release encryption scheme. Stay tuned for more timelock-related news in the coming months!</p>
<p>Finally, don’t hesitate to <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>join our drand Slack Workspace</strong></a> to discuss timelock encryption, or share with us your cool use cases for it, or follow us on our <a href="https://twitter.com/drand_loe" target="_blank" rel="noopener noreferrer"><strong>newly created @drand_loe Twitter account</strong></a> to stay tuned with the latest news from the drand team. Until next time!</p>
<hr>]]></content>
        <category label="Conferences-and-Events" term="Conferences-and-Events"/>
        <category label="Features" term="Features"/>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[drand on Filecoin Virtual Machine (FVM) - draffle]]></title>
        <id>https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle</id>
        <link href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle"/>
        <updated>2023-03-15T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[To mark the launch of user-programmable smart contracts on the Filecoin Virtual Machine (FVM), the drand team is excited to release a three-part blog series on using randomness on the FVM! In this first part, we dive into the prevrandao EVM opcode (the FVM fully supports EVM bytecode!), a sample Solidity contract using it, a UI to interact with it, and some other necessary plumbing to make it all work.]]></summary>
        <content type="html"><![CDATA[<p>To mark the launch of user-programmable smart contracts on the Filecoin Virtual Machine (FVM), the drand team is excited to release a three-part blog series on using randomness on the FVM! In this first part, we dive into the prevrandao EVM opcode (the FVM fully supports EVM bytecode!), a sample Solidity contract using it, a UI to interact with it, and some other necessary plumbing to make it all work.</p>
<!-- -->
<p>If you want to skip all the wonderful learning, you can jump straight into the demo project we developed <a href="https://github.com/drand/draffle" target="_blank" rel="noopener noreferrer"><strong>on GitHub</strong></a> - the contract is deployed at address <code>0x9D38f3BB80D98cE09C3f0936Bea140181d4CCABA</code> on the Hyperspace testnet! A little familiarity with <a href="https://soliditylang.org/" target="_blank" rel="noopener noreferrer"><strong>Solidity</strong></a> will be helpful to follow along, but anyone familiar with a C-style language should be able to get the gist.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-randomness-on-the-blockchain-️">🎲 <strong>Randomness on the Blockchain</strong> ⛓️<a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#-randomness-on-the-blockchain-%EF%B8%8F" class="hash-link" aria-label="Direct link to -randomness-on-the-blockchain-️" title="Direct link to -randomness-on-the-blockchain-️">​</a></h2>
<p>When developers think of randomness, we most often think of private randomness - for example, <a href="https://en.wikipedia.org/wiki/Cryptographically_secure_pseudorandom_number_generator" target="_blank" rel="noopener noreferrer"><strong>using a cryptographically secure pseudorandom number generator</strong></a> such as <a href="https://en.wikipedia.org/wiki//dev/random" target="_blank" rel="noopener noreferrer"><strong>/dev/random/</strong></a> to generate a private key. When executing a smart contract in a blockchain ecosystem, this poses a few challenges: Who provides the randomness? How do you know it's random? If you interact with a smart contract, you can't trust the author to generate randomness for you, as they may have a vested interest in the outcome. Similarly, you can't trust miners to generate the randomness for you, as they too might have an interest in the outcome (or wish to collude with other participants).</p>
<hr>
<p>To be more concrete: <strong>Suppose I'm running a raffle via a smart contract</strong>, and users enter the draw by calling a function such as the following:</p>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> entrants</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">enter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    entrants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Everybody who submits a transaction (and has it mined) has their address added to the list of entrants, which will be "randomly" drawn from. As the <em>totally unbiased</em> author of the smart contract, I've provided another function that allows me to draw the randomly chosen participant:</p>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">event</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Winner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">address</span><span class="token plain"> theWinner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">draw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint32</span><span class="token plain"> someTotallyRandomNumber</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">author </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"Only the completely unbiased author can execute the draw winner!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// assuming we have set the `author` field in the constructor somewhere</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Winner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">entrants</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">someTotallyRandomNumber</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Of course, in blockchain-land, the state of the contract is public to everyone, and you as the author could simply register your own address as an entrant and pass in its index to win the raffle yourself!</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-ethereum-increases-fairness"><strong>How Ethereum Increases Fairness</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#how-ethereum-increases-fairness" class="hash-link" aria-label="Direct link to how-ethereum-increases-fairness" title="Direct link to how-ethereum-increases-fairness">​</a></h3>
<p>To address the challenges of randomness in smart contracts, the Ethereum community created <a href="https://github.com/randao/randao" target="_blank" rel="noopener noreferrer"><strong>RANDAO</strong></a>, a Decentralized Autonomous Organization (DAO) for providing randomness.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how-randao-works"><strong>How RANDAO Works</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#how-randao-works" class="hash-link" aria-label="Direct link to how-randao-works" title="Direct link to how-randao-works">​</a></h3>
<ol>
<li><strong>Contribution Phase</strong>:<!-- -->
<ul>
<li>In each block, 128 addresses from the network can contribute their piece of randomness.</li>
<li>Contributors send a small amount of ETH to the RANDAO contract along with a hash of their chosen random number.</li>
</ul>
</li>
<li><strong>Reveal Phase</strong>:<!-- -->
<ul>
<li>Six blocks later, contributors reveal their number.</li>
<li>Revealing the number earns them an ETH bounty.</li>
<li>Failing to reveal the number results in the loss of their deposited ETH.</li>
</ul>
</li>
<li><strong>Aggregation Phase</strong>:<!-- -->
<ul>
<li>Revealed numbers are combined to create a final random number.</li>
<li>This final random number is included in the block and is available to smart contracts in the next block using the prevrandao opcode.</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="advantages-over-single-author-randomness"><strong>Advantages Over Single-Author Randomness</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#advantages-over-single-author-randomness" class="hash-link" aria-label="Direct link to advantages-over-single-author-randomness" title="Direct link to advantages-over-single-author-randomness">​</a></h3>
<ol>
<li><strong>Verifiability</strong>:<!-- -->
<ul>
<li>Users can inspect the RANDAO contract state and see all the inputs combined to create the final random number.</li>
<li>This transparency attests to the method of construction and ensures fairness.</li>
</ul>
</li>
<li><strong>Reduced Bias</strong>:<!-- -->
<ul>
<li>Instead of relying on a single <em>totally unbiased</em> author, up to 128 parties are involved in creating the randomness.</li>
<li>This makes it much harder to influence the output, raising the bar for any potential bias.</li>
</ul>
</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-challenges-and-limitations">⛔ <strong>Challenges and Limitations</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#-challenges-and-limitations" class="hash-link" aria-label="Direct link to -challenges-and-limitations" title="Direct link to -challenges-and-limitations">​</a></h3>
<p>While RANDAO improves fairness, it is not entirely immune to manipulation. One such challenge is the 'last mover's advantage':</p>
<ul>
<li><strong>Commit/Reveal Scheme</strong>: Participants commit to a random number ahead of time by providing the corresponding (SHA-3) hash. Later, they can choose to reveal or not reveal that number.</li>
<li><strong>Last Mover's Advantage</strong>: The last participant to reveal their number can choose to reveal or not reveal it based on the desired outcome, thereby biasing the final output.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="illustrating-last-movers-advantage"><strong>Illustrating Last Mover's Advantage</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#illustrating-last-movers-advantage" class="hash-link" aria-label="Direct link to illustrating-last-movers-advantage" title="Direct link to illustrating-last-movers-advantage">​</a></h3>
<p>Imagine a scenario with 10 slots where each participant decides a single bit of the output number:</p>
<div class="codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-text codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">Number | 1 | 1 | 0 | 1 | 0 | 0 | 0 | 1 | 0 | ? |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">Slot   | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 |</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>Suppose the committed number is <code>1</code>.</li>
<li>The last participant can influence the final bit by deciding whether to reveal or not reveal their number.</li>
<li>For example, if a coin-flipping smart contract uses the last bit to determine heads (1) or tails (0), the last participant can ensure a desired outcome by revealing or not revealing their number.</li>
</ul>
<p>In practice, the influence is probabilistic and not direct. However, larger players who can fill more of the 'slots' in RANDAO can still exert undue influence.</p>
<p>By involving multiple parties and ensuring transparency, RANDAO significantly enhances the fairness and reliability of randomness in smart contracts, despite its limitations.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="randao-on-fvm"><strong>RANDAO on FVM</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#randao-on-fvm" class="hash-link" aria-label="Direct link to randao-on-fvm" title="Direct link to randao-on-fvm">​</a></h3>
<p>RANDAO on EVM is still great - the above is more an insight into some of the security assumptions around it, as a way of introducing FVM's approach to RANDAO and contrasting it. As the FVM is EVM compatible (i.e., everything possible in EVM bytecode is also possible on the FVM), it must also provide a <code>prev_randao</code> opcode for use in smart contracts and compatibility purposes. Instead of bridging to Ethereum or running its own RANDAO (both of which could happen in the future), Filecoin already has its own source of randomness used for leader election: drand.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="refresher-of-how-drand-works"><strong>Refresher of how drand works</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#refresher-of-how-drand-works" class="hash-link" aria-label="Direct link to refresher-of-how-drand-works" title="Direct link to refresher-of-how-drand-works">​</a></h3>
<ul>
<li><strong>Threshold Network</strong>: drand is a <a href="https://en.wikipedia.org/wiki/Threshold_cryptosystem" target="_blank" rel="noopener noreferrer"><strong>threshold network</strong></a> that provides publicly verifiable, unbiasable randomness. It exploits the fact that the hash of a signature is indistinguishable from randomness to people without the associated private key.</li>
<li><strong>Cooperative Action</strong>: A threshold network is a network of nodes that can cooperatively perform actions such as signing. Enough nodes need to work together (referred to as the 'threshold') to perform these actions.</li>
<li><strong>Shamir's Secret Sharing</strong>: Using a form of <a href="https://en.wikipedia.org/wiki/Shamir%27s_secret_sharing" target="_blank" rel="noopener noreferrer"><strong>Shamir's Secret Sharing</strong></a>, the network creates a cryptographic keypair that no single member of the group has the private key of. Instead, they each get a share of that private key and must aggregate a threshold number of signatures to create a full signature on behalf of the entire group.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-features-of-drand"><strong>Key Features of drand</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#key-features-of-drand" class="hash-link" aria-label="Direct link to key-features-of-drand" title="Direct link to key-features-of-drand">​</a></h3>
<ul>
<li><strong>Unbiasable Randomness</strong>: Unlike RANDAO, nodes in drand cannot influence the final random output. Once the keypair is generated, all future random numbers are deterministically decided, but nobody can get them until they've received a threshold number of signatures for each number.</li>
<li><strong>Security Considerations</strong>: One drawback is that if a threshold number of nodes were compromised, all future random numbers could be derived.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="drand-in-filecoin"><strong>drand in Filecoin</strong><a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#drand-in-filecoin" class="hash-link" aria-label="Direct link to drand-in-filecoin" title="Direct link to drand-in-filecoin">​</a></h3>
<ul>
<li><strong>Inclusion in Blocks</strong>: In Filecoin, the drand randomness beacon for the current time is included in every block's headers.</li>
<li><strong>Usage in Smart Contracts</strong>: When a contract calls the <code>prevrandao</code> opcode, the randomness from the previous block is provided to it. This offers a straightforward method of using randomness on-chain, though with some potential pitfalls to consider.</li>
</ul>
<hr>
<p>Okay - without further ado let's jump into the web app and code!</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-ui">The UI<a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#the-ui" class="hash-link" aria-label="Direct link to The UI" title="Direct link to The UI">​</a></h2>
<p>When the user first opens the UI, they should see something like this:</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/start.bdca1319.png" src="https://docs.drand.love/assets/images/start.bdca1319-5b6ec8b47e6a2be361d8b5ebd73a236f.png" width="2048" height="1042" class="img_ev3q"></p>
<p>On the left-hand side we see when the next draw is scheduled, the current block and any draws that have already happened. There’s also a button labelled ‘Enter the next draw’ that we can click to pay the entry fee via our Metamask wallet. When we click it, a popup from Metamask such as the following appears:</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/connect-wallet.083095e5.png" src="https://docs.drand.love/assets/images/connect-wallet.083095e5-f1603df1091b63db423dd7e7245fe794.png" width="712" height="1394" class="img_ev3q"></p>
<p>Once we’ve confirmed the transaction, we’ve now entered the draw:</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/draw-accepted.2ff1aab6.png" src="https://docs.drand.love/assets/images/draw-accepted.2ff1aab6-d1598b7ac9596149bffc8764498031e8.png" width="2048" height="1043" class="img_ev3q"></p>
<p>If you’re on hyperspace, we can wait up to 24 hours (the default) until the next draw is scheduled, and we will be able to trigger it (in the next section we’ll find how to reduce that to any time we want for easier testing). At the time of the draw, the right-hand side of the UI will have changed:</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/trigger-draw.4356efc5.png" src="https://docs.drand.love/assets/images/trigger-draw.4356efc5-9cf48c8285526c36ea5093aec44344c0.png" width="2048" height="1049" class="img_ev3q"></p>
<p>At the draw block height, users will be able to compete to trigger the draw and receive a small payout. Once the draw has been triggered, a new one is scheduled:</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/draw-triggered.ac101ff4.png" src="https://docs.drand.love/assets/images/draw-triggered.ac101ff4-f2804b448884e9c64783c4af3f3a0724.png" width="2048" height="1049" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="the-contract">The Contract<a href="https://docs.drand.love/blog/drand-on-filecoin-virtual-machine-FVM-draffle#the-contract" class="hash-link" aria-label="Direct link to The Contract" title="Direct link to The Contract">​</a></h2>
<p>First off, in the <code>./contracts/</code> directory, we have a single file called <a href="https://drand.love/blog/2023/03/16/draffle/contracts/DRaffle.sol" target="_blank" rel="noopener noreferrer"><strong>DRaffle.sol</strong></a>. It contains the solidity code which will be run on FVM to manage all the entrants and payouts from the contest. Let's take a look at its constructor and fields:</p>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">solidityCopy code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">uint256</span><span class="token plain"> costPerDraw</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">uint256</span><span class="token plain"> drawCutoff</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">uint256</span><span class="token plain"> triggerReward</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">uint256</span><span class="token plain"> nextDrawBlockHeight</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin">address</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> candidates</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">constructor</span><span class="token punctuation" style="color:#393A34">(</span><span class="token builtin">uint256</span><span class="token plain"> roundCutoff</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> cost</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token builtin">uint256</span><span class="token plain"> reward</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    costPerDraw </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> cost</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    triggerReward </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> reward</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    drawCutoff </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> roundCutoff</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">scheduleNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<ul>
<li>The first field set in the constructor enables the author of the contract to choose a <code>cost</code> of entry (in FIL). All entrants will pay it, and (nearly all of) the total pool for every draw will be paid out to the winning address.</li>
<li>The second field set is a <code>reward</code> for users who initiate the draw. As the contract runs on-chain, we can't easily (in solidity anyway) schedule future draws automagically - we have to rely on somebody in the ecosystem submitting a transaction to trigger the draw. To incentivise that, we'll provide a small FIL bounty to cover the transaction fee plus a little extra, so users will want to trigger the draw.</li>
<li>The final field set - <code>drawCutOff</code> - is the number of blocks in advance we wish to close entries for a given draw. Readers with a keen eye will have noticed in the explanation of the <code>prevrandao</code> instruction, that it returns the randomness from the <em>previous</em> block header, and not the current block. Entrants could therefore know the random number used for a draw in advance of the draw happening.<!-- -->
<ul>
<li><em>In follow-up blog posts, we'll discuss how we can use more current randomness to avoid this pitfall, but for now let's close draws a few blocks in advance to eliminate this possibility of gaming the draw.</em></li>
</ul>
</li>
<li>Finally the constructor calls the <code>scheduleNext</code> function which will set the <code>nextDrawBlockHeight</code> field, clear any candidates and emit some convenient events for the UI to consume. It's implementation is as follows:</li>
</ul>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">solidityCopy code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">scheduleNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">internal</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    candidates </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">address</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    nextDrawBlockHeight </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">number </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2880</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Scheduled</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">nextDrawBlockHeight</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>With this implementation a draw will happen once every 24 hours (Filecoin mines a block every 30 seconds, i.e. 2 per minute, 60 minutes per hour, 24 hours per day- 2 * 60 * 24 = 2880), but it can easily be configured to be more frequent.</p>
<p>Now to our function users will call to enter the draw:</p>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">solidityCopy code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">enter</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">payable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">value </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> costPerDraw</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"you have passed too much or too little money to enter the lotto"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">number </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> nextDrawBlockHeight </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> drawCutoff</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"It's too close to the next draw to participate"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    candidates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">push</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>It's quite simple: users must pass a token amount equal to the <code>costPerDraw</code> into the contract with their transaction (hence the <code>payable</code> keyword). If they correctly do that and it's not too close to the draw (remembering our <code>prevrandao</code> limitation discussed above!), their address is added to the candidate list for the draw.</p>
<p>The final important function is the draw function itself:</p>
<div class="language-solidity codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-solidity codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">solidityCopy code</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">function</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">draw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">external</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">payable</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// first we ensure that users can't trigger the draw too early</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// we let them draw late, because perhaps nobody could get a transaction mined for the exact block height!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">require</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">number </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> nextDrawBlockHeight</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"it's too early to trigger the draw!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// if nobody entered the draw, and thus there is no money to pay out, we send an event that there was no winner and</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// just schedule the next draw</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token builtin">uint</span><span class="token plain"> numberOfEntries </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> candidates</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">length</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">numberOfEntries </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">NoWinner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">number</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// if there are candidates for the draw, we use the `prevrandao` value from the block, and turn it into an index to choose the winner.</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// note: using the modulo operation can result in an output bias - check this great blog post on the matter: &lt;https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/&gt;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">address</span><span class="token plain"> winner </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> candidates</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">prevrandao </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> numberOfEntries</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token builtin">uint256</span><span class="token plain"> amount </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> numberOfEntries </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> costPerDraw </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> triggerReward</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// we pay out the chosen winner</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">payable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">winner</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">amount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// and also pay out the `triggerReward` to the address who triggered the draw successfully</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// a small point to note is that they won't get paid out if there are no entrants...</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// paying them out would require the contract to maintain its own balance of tokens to pay out</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// raffles with no entries, so it's been omitted for convenience, but it's something to consider if you</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// decide to run your own raffle!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">payable</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">msg</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">sender</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token function" style="color:#d73a49">transfer</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">triggerReward</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// and emit an event to let any listeners know who won!</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword" style="color:#00009f">emit</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">Winner</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">block</span><span class="token punctuation" style="color:#393A34">.</span><span class="token plain">number</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> winner</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> amount</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token comment" style="color:#999988;font-style:italic">// finally, regardless of whether there is a winner or not we want to schedule the next draw as we saw in the constructor</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token function" style="color:#d73a49">scheduleNext</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So that's it for part 1 - how to run a raffle using drand on the FVM via solidity. The sample repository contains a lot more useful tooling for deploying your own smart contract to the <a href="https://hyperspace.yoga/" target="_blank" rel="noopener noreferrer"><strong>Hyperspace testnet</strong></a> or your own local <a href="https://trufflesuite.com/ganache/" target="_blank" rel="noopener noreferrer"><strong>ganache network</strong></a>. In our next post, we'll discuss how to use more immediate randomness functionality specific to the FVM, stepping outside the bounds of EVM compatibility.</p>
<p>Until then you can find the team on both the <a href="https://filecoin.io/slack" target="_blank" rel="noopener noreferrer"><strong>Filecoin slack</strong></a> and our own <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>drand slack</strong></a> should you have any questions. Enjoy deploying cool projects to the FVM, and let us know how you've been using the FVM and randomness!</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="FVM" term="FVM"/>
        <category label="Features" term="Features"/>
        <category label="How-to" term="How-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Automata Network Joins the League of Entropy!]]></title>
        <id>https://docs.drand.love/blog/auttomata-network-joins-the-league-of-entropy</id>
        <link href="https://docs.drand.love/blog/auttomata-network-joins-the-league-of-entropy"/>
        <updated>2023-03-14T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[We are proud to announce that Automata Network, a web3 middleware protocol focused on protecting fairness & privacy, is joining forces with the League of Entropy (LoE)! Automata is becoming the 17th member to join the LoE and the first partner joining from Singapore - a significant milestone for the LoE.]]></summary>
        <content type="html"><![CDATA[<p>We are proud to announce that <a href="https://www.ata.network/" target="_blank" rel="noopener noreferrer">Automata Network</a>, a web3 middleware protocol focused on protecting fairness &amp; privacy, is joining forces with the League of Entropy (LoE)! Automata is becoming the 17th member to join the LoE and the first partner joining from Singapore - a significant milestone for the LoE.</p>
<!-- -->
<p>We’ve asked Automata some key questions that we’ve regularly ask of new LoE members - see <a href="https://docs.drand.love/blog/the-value-of-drand-part-1-of-2"><strong>here</strong></a>, <a href="https://docs.drand.love/blog/the-value-of-drand-part-2-of-2"><strong>here</strong></a> and <a href="https://docs.drand.love/blog/storswift-joins-the-league-of-entropy"><strong>here</strong></a> - on the value of drand. Here are the team's answers.</p>
<hr>
<p><strong>Why is drand important as a protocol for the next generation of the Internet in your opinion?</strong></p>
<ul>
<li>Randomness plays a critical role in modern infrastructure, but by far the most important and widely used aspect of it is within the field of cryptography. What really impressed us about drand was how the system approaches and realizes randomness - instead of having a single entity that controls the infrastructure where it runs, beacon providers work together and run their own nodes to ensure that no single party can either bias or predict the final output.</li>
<li>A diverse set of stakeholders is important in so many ways; in ensuring the integrity of the randomness being generated; in improving the transparency of the source of randomness; in making it such that no individual party is the single point of failure, be it benign or malicious. While Web3 on its own can sometimes be too vague to be a coherent goal, drand is an excellent example of what it takes to get the job done in a distributed fashion.</li>
</ul>
<hr>
<p><strong>Why did you decide to join the League of Entropy? What value do you see in drand that is important for your mission? What convinced you to join?</strong></p>
<ul>
<li>Fairness and privacy are important to us at Automata. The rise of Web3 - which has shown itself to be as much an ideological movement as much as it has been an economic one - has given us reason to believe that its subsequent development will be governed by a set of rules quite unlike its predecessors. A decentralized source of randomness is fundamental to a decentralized Web3.</li>
<li>In particular, there are a few characterizations that are helpful to keep in mind when it comes to considering what constitutes high-quality randomness: Anyone (such as users!) should be able to verify that a number is legitimately random. Randomness needs to be unbiased. No participant should be able to influence the output in any measure or way. Randomness needs to be unpredictable. No participant should be able to predict the output (or its properties) before it has been generated</li>
<li>drand’s passion about verifiable, unpredictable and bias-resistant randomness really spoke to us, and joining the League was an easy decision.</li>
</ul>
<hr>
<p><strong>Please explain briefly how you use drand in your setup.</strong></p>
<ul>
<li>Using random numbers generated by drand’s distributed randomness beacon helps to ensure the “freshness” of the information at the point of computation, a global timestamp if you will. By integrating the latest number by drand - 256 bits of entropy generated every 30 seconds (also available every 3s in the latest deployment) - and ensuring that the random number is only valid during the interval it is generated, attackers are restricted in their ability to perform brute-force attacks, like reversing a one-way function.</li>
<li>Pre-computation is not possible if the number is not yet known and the interval limits the time attackers have to guess for any given valid number.</li>
</ul>
<hr>
<p><strong>Where would you like to see drand in 2 years from now? What should we have achieved?</strong></p>
<ul>
<li>We’ve been keeping a keen eye on drand’s roadmap and there have been some pretty exciting developments, including the Time-lock-encryption and Unchained Randomness, which now allows each randomness beacon to be independent of the previous one.</li>
<li>We would love to see drand grow to be the definitive source of randomness for Web3 and for the project to extend its capabilities in more impactful ways, some of which are: a) On-demand randomness for specific requests, such as the generation of random nonces to cater to users who need tailored randomness, b) Verifiable, confidential randomness to enable a wider range of use-cases such as gaming.</li>
</ul>
<hr>
<p><em>The League of Entropy evaluates, votes on, and onboards new members quarterly. If you want to be a part of the first production-grade distributed randomness beacon and help provide publicly verifiable randomness as a service, contact us at <a href="mailto:leagueofentropy@googlegroups.com" target="_blank" rel="noopener noreferrer">leagueofentropy@googlegroups.com</a>. We are looking for enthusiastic teams with experience running secure production services who are interested in operating drand nodes and relays. We also encourage you to check out the <a href="https://github.com/drand" target="_blank" rel="noopener noreferrer"><strong>drand GitHub repository</strong></a> for details and <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer"><strong>join us on slack</strong></a>.</em></p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="League-of-Entropy" term="League-of-Entropy"/>
        <category label="New-Members" term="New-Members"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[A Guide on how to use drand]]></title>
        <id>https://docs.drand.love/blog/a-guide-on-how-to-use-drand</id>
        <link href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand"/>
        <updated>2023-02-21T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[In this blog post, we’ll dive into the fascinating world of public randomness and provide a step-by-step tutorial on how to consume randomness from drand and use it in your applications. Get ready for an exciting journey into the heart of randomness!]]></summary>
        <content type="html"><![CDATA[<p>In this blog post, we’ll dive into the fascinating world of public randomness and provide a step-by-step tutorial on how to consume randomness from drand and use it in your applications. Get ready for an exciting journey into the heart of randomness!</p>
<!-- -->
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why-public-randomness">Why Public Randomness?<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#why-public-randomness" class="hash-link" aria-label="Direct link to Why Public Randomness?" title="Direct link to Why Public Randomness?">​</a></h3>
<p>Most developers are familiar with private randomness: we use randomness to generate keypairs, randomize back off timings in distributed systems, choose stats for games, and a plethora of other things. This makes sense—if the randomness used to generate our keypairs was public, bad actors could intercept all our communications or steal our bitcoin!</p>
<p>However, some applications that currently use private randomness might be better served using public randomness. For example, online casinos generate random numbers to order cards dealt or determine a winner. We must trust that these casinos use effective random number generators, but <a href="http://web.archive.org/web/20210615005520/http://www.lauradhamilton.com/random-lessons-online-poker-exploit" target="_blank" rel="noopener noreferrer">history has shown this is not always the case</a>. If they committed to a random number generated by a third party (or third parties), or used some kind of <em>verifiable randomness</em>, this could improve fairness and increase user trust.</p>
<p>For cases such as random distribution of welfare (e.g., <a href="https://en.wikipedia.org/wiki/Universal_basic_income" target="_blank" rel="noopener noreferrer">universal basic income</a> experiments), the government could use a third party such as an NGO to draw random numbers. However, this still constitutes a weak link, as a single third party <a href="https://en.wikipedia.org/wiki/Dual_EC_DRBG#Software_and_hardware_which_contained_the_possible_backdoor" target="_blank" rel="noopener noreferrer">could be unduly influenced</a> to bias the randomness.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="enter-drand">Enter drand<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#enter-drand" class="hash-link" aria-label="Direct link to Enter drand" title="Direct link to Enter drand">​</a></h3>
<p>drand is built upon a <a href="https://en.wikipedia.org/wiki/Threshold_cryptosystem" target="_blank" rel="noopener noreferrer">threshold network</a>. Instead of relying on a single third party, multiple third parties work together to generate a random number. It exploits the fact that a hashed signature has all the properties of randomness as long as nobody holds the secret key. Due to the way drand <a href="https://evervault.com/blog/shamir-secret-sharing" target="_blank" rel="noopener noreferrer">distributes keys</a>, no party ever has the whole secret key, and as such no one can ever predict the signature generated—woohoo, randomness! These properties are why projects such as <a href="https://socialincome.org/" target="_blank" rel="noopener noreferrer">Social Income</a> are building on top of drand for their randomness!</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-drand">Using drand<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#using-drand" class="hash-link" aria-label="Direct link to Using drand" title="Direct link to Using drand">​</a></h3>
<p>Presently, the drand network generates a random hex string every thirty seconds. It can be verified using the public key of the network, so you can receive randomness from an untrusted party and verify that it’s truly been created by the drand network. This powerful property simplifies your trust assumptions: you can receive randomness without having to trust the node that sent you the message because you can verify it for yourself.</p>
<p>In this tutorial, we're going to fetch randomness using the <a href="https://github.com/drand/drand-client" target="_blank" rel="noopener noreferrer">official JavaScript client</a>, but you could also use the <a href="https://github.com/drand/drand/tree/master/client" target="_blank" rel="noopener noreferrer">official Go client</a>, one of the <a href="https://github.com/search?q=drand+rust" target="_blank" rel="noopener noreferrer">multiple unofficial Rust clients</a>, or fetch it via curl/libp2p/other channels and verify the BLS signatures yourself.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="setting-up">Setting Up<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#setting-up" class="hash-link" aria-label="Direct link to Setting Up" title="Direct link to Setting Up">​</a></h3>
<p>First, make sure you have a relatively recent version of Node.js (17+) and npm installed. Instructions can be found <a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm" target="_blank" rel="noopener noreferrer">here</a>.</p>
<p>Then, create a new folder for your project:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">mkdir</span><span class="token plain"> drand-client-tutorial</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token builtin class-name">cd</span><span class="token plain"> drand-client-tutorial</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> init</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">npm</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">install</span><span class="token plain"> drand-client</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>As the drand client is bundled as an ESM module, add <code>"type": "module"</code> in your <code>package.json</code> to use it.</p>
<p>Create a new file at the root of the project called <code>index.js</code> and open it in your editor of choice.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="fetching-randomness">Fetching Randomness<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#fetching-randomness" class="hash-link" aria-label="Direct link to Fetching Randomness" title="Direct link to Fetching Randomness">​</a></h3>
<p>The most basic primitive is a <code>Chain</code>—it represents a single network instance hosted by a node. Networks can have different parameters such as frequency, algorithm, and participants, but for our purposes, the default network is enough.</p>
<p>We're going to connect to the HTTP API of the drand team’s nodes (<a href="https://api.drand.sh/" target="_blank" rel="noopener noreferrer">api.drand.sh</a>), but you could also use Cloudflare's API endpoint (<a href="https://drand.cloudflare.com/" target="_blank" rel="noopener noreferrer">drand.cloudflare.com</a>), or StorSwift’s relay (<a href="https://api.drand.secureweb3.com:6875/" target="_blank" rel="noopener noreferrer">api.drand.secureweb3.com:6875</a>).</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports"> </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">info</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">info</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">info</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Run this with:</p>
<div class="language-bash codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-bash codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token function" style="color:#d73a49">node</span><span class="token plain"> --experimental-fetch index.js</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>(Node versions greater than 18 can skip the <code>--experimental-fetch</code> flag!)</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="fetching-the-latest-beacon">Fetching the Latest Beacon<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#fetching-the-latest-beacon" class="hash-link" aria-label="Direct link to Fetching the Latest Beacon" title="Direct link to Fetching the Latest Beacon">​</a></h3>
<p>To fetch the latest beacon, use the <code>fetchBeacon</code> function:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> fetchBeacon </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">fetchBeacon</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">beacon</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>To get the latest beacon by time:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChainClient</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> fetchBeaconByTime </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChainClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">fetchBeaconByTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">client</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token known-class-name class-name">Date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">beacon</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>For real-time applications, use the <code>watch</code> function to listen for new beacons:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChainClient</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> watch </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> client </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChainClient</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> beacons </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">watch</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">client</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">AbortController</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">await</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> beacon </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> beacons</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="using-randomness-effectively">Using Randomness Effectively<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#using-randomness-effectively" class="hash-link" aria-label="Direct link to Using Randomness Effectively" title="Direct link to Using Randomness Effectively">​</a></h3>
<p>If we only ever needed a 64-byte random value in our applications, we'd be finished now. Unfortunately, real-life applications often require more tailored randomness. Here’s how to handle different use cases:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="coin-flip-example">Coin Flip Example<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#coin-flip-example" class="hash-link" aria-label="Direct link to Coin Flip Example" title="Direct link to Coin Flip Example">​</a></h3>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> fetchBeaconByTime </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">fetchBeaconByTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token known-class-name class-name">Date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">beacon</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> flip </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"0x"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> beacon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">randomness</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">flip </span><span class="token operator" style="color:#393A34">===</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">round</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">": HEADS!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">beacon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">round</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">": TAILS!"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="avoiding-bias-in-random-selection">Avoiding Bias in Random Selection<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#avoiding-bias-in-random-selection" class="hash-link" aria-label="Direct link to Avoiding Bias in Random Selection" title="Direct link to Avoiding Bias in Random Selection">​</a></h3>
<p>For selecting a random winner from a lottery:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword module" style="color:#00009f">import</span><span class="token plain"> </span><span class="token imports punctuation" style="color:#393A34">{</span><span class="token imports"> </span><span class="token imports maybe-class-name">HttpChain</span><span class="token imports punctuation" style="color:#393A34">,</span><span class="token imports"> fetchBeaconByTime </span><span class="token imports punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword module" style="color:#00009f">from</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"drand-client"</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> participants </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">[</span><span class="token string" style="color:#e3116c">"alice"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"bob"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"carol"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"dave"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"edward"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"fiona"</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token string" style="color:#e3116c">"georgina"</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> chain </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">HttpChain</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"&lt;https://api.drand.sh&gt;"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token function" style="color:#d73a49">fetchBeaconByTime</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">chain</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token known-class-name class-name">Date</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">now</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">then</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">beacon</span><span class="token plain"> </span><span class="token arrow operator" style="color:#393A34">=&gt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">const</span><span class="token plain"> randomNumber </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"0x"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> beacon</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">randomness</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword" style="color:#00009f">let</span><span class="token plain"> winnerIndex </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> randomNumber </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">participants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token comment" style="color:#999988;font-style:italic">// Rejection sampling to avoid bias</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token keyword control-flow" style="color:#00009f">while</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">winnerIndex </span><span class="token operator" style="color:#393A34">&gt;=</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">participants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    winnerIndex </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"0x"</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> crypto</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">randomBytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">'hex'</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> </span><span class="token known-class-name class-name">BigInt</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">participants</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">length</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">  </span><span class="token console class-name">console</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">log</span><span class="token punctuation" style="color:#393A34">(</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token template-string string" style="color:#e3116c">The winner is </span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">${</span><span class="token template-string interpolation">participants</span><span class="token template-string interpolation punctuation" style="color:#393A34">[</span><span class="token template-string interpolation">winnerIndex</span><span class="token template-string interpolation punctuation" style="color:#393A34">]</span><span class="token template-string interpolation interpolation-punctuation punctuation" style="color:#393A34">}</span><span class="token template-string template-punctuation string" style="color:#e3116c">`</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token punctuation" style="color:#393A34">}</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wrapping-up">Wrapping Up<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#wrapping-up" class="hash-link" aria-label="Direct link to Wrapping Up" title="Direct link to Wrapping Up">​</a></h3>
<p>Using drand can bring a new level of fairness and verifiability to your applications. Whether you’re flipping coins or selecting lottery winners, drand's verifiable randomness ensures transparency and trust. We love hearing about the projects you’re working on, so feel free to <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-19u4rf6if-bf7lxIvF2zYn4~TrBwfkiA" target="_blank" rel="noopener noreferrer">join us on Slack</a> and share your stories or ask for help.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="suggested-readings">Suggested Readings:<a href="https://docs.drand.love/blog/a-guide-on-how-to-use-drand#suggested-readings" class="hash-link" aria-label="Direct link to Suggested Readings:" title="Direct link to Suggested Readings:">​</a></h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Random_number" target="_blank" rel="noopener noreferrer">Random Number</a></li>
<li><a href="https://en.wikipedia.org/wiki/Threshold_cryptosystem" target="_blank" rel="noopener noreferrer">Threshold Cryptosystem</a></li>
<li><a href="https://en.wikipedia.org/wiki/Pseudorandom_number_generator" target="_blank" rel="noopener noreferrer">Pseudorandom Number Generator</a></li>
<li><a href="https://en.wikipedia.org/wiki/Universal_basic_income" target="_blank" rel="noopener noreferrer">Universal Basic Income</a></li>
<li><a href="https://en.wikipedia.org/wiki/Shamir%27s_Secret_Sharing" target="_blank" rel="noopener noreferrer">Shamir's Secret Sharing</a></li>
<li><a href="https://en.wikipedia.org/wiki/Timing_attack" target="_blank" rel="noopener noreferrer">Timing Attack</a></li>
<li><a href="https://en.wikipedia.org/wiki/Dual_EC_DRBG" target="_blank" rel="noopener noreferrer">Dual_EC_DRBG</a></li>
</ul>
<hr>
<p>Until next time, happy coding! 🚀</p>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="Features" term="Features"/>
        <category label="How-to" term="How-to"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[IPFS Force joins the League of Entropy!]]></title>
        <id>https://docs.drand.love/blog/ipfs-force-joins-the-league-of-entropy</id>
        <link href="https://docs.drand.love/blog/ipfs-force-joins-the-league-of-entropy"/>
        <updated>2023-01-26T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[https://drand.love/assets/img/ipfs-force-logo.18be5e96.png]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/ipfs-force-logo.18be5e96.png" src="https://docs.drand.love/assets/images/ipfs-force-logo.18be5e96-d5b4c6c479f5fe211bd67e98917809ed.png" width="2048" height="481" class="img_ev3q"></p>
<p>We are excited to announce that IPFSForce has joined the League of Entropy!</p>
<!-- -->
<p>IPFSForce has focused on technology research and development in blockchain since 2017. With the vision of being Web 3.0’s infrastructure service provider, IPFSForce is working to make storage more efficient, cost-effective, open, and safer. With "Co-built Value, Sharing Honour" as a guiding principle, IPFSForce leverages technologies to empower global communities with high-quality services.</p>
<p>We've asked IPFSForce some key questions that we've previously asked other LoE members - see <a href="https://docs.drand.love/blog/the-value-of-drand-part-1-of-2"><strong>here</strong></a> and <a href="https://docs.drand.love/blog/the-value-of-drand-part-2-of-2"><strong>here</strong></a> - on the value of drand. Check out what they said.</p>
<hr>
<p><strong>Why is drand important as a protocol for the next generation of the Internet in your opinion?</strong></p>
<ul>
<li>The blockchain industry and the broader Web 3.0 ecosphere are in dire need of a decentralized, scalable, impartial, verifiable, and secure service that delivers randomness, which is exactly the mission of drand: to create and provide such a service. A randomness service is no doubt the most fundamental component to the decentralized world.</li>
</ul>
<hr>
<p><strong>Why did you decide to join the League of Entropy? What value do you see in drand that is important for your mission? In other words, what convinced you to join?</strong></p>
<ul>
<li>Our goal is to become a Web 3.0 infrastructure service provider, and drand is envisioned as an Internet infrastructure level service that offers randomness to applications. That's where we're comparable in certain ways. Furthermore, it has always been in our best interests to assist and participate in such research-based security tech communities and products focusing on advanced technologies.</li>
</ul>
<hr>
<p><strong>How do you use drand in your setup, infrastructure or application?</strong></p>
<ul>
<li>As an IPFS/Filecoin service provider, we are using drand to provide Filecoin chain services to our customers. drand acts as a randomness beacon in the Filecoin network and has provided us with crucial services in block generation, various stages of <a href="https://spec.filecoin.io/#section-algorithms.pos" target="_blank" rel="noopener noreferrer"><strong>Proof of Replication (PoRep) and Proof of Spacetime (PoSt)</strong></a>.</li>
</ul>
<hr>
<p><strong>Where would you like to see drand in 2 years from now?</strong></p>
<ul>
<li>We expect that the LoE network will be more accessible to Web 3.0 partners, thereby encouraging more developers to be involved and build infrastructure and dApps utilizing drand as a randomness service. It is only with more partners engaging that the LoE network will be able to grow and better serve the Web 3.0 globe.</li>
</ul>
<hr>
<p><em>The League of Entropy evaluates, votes on, and onboards new members quarterly. If you want to be a part of the first production-grade distributed randomness beacon and help provide publicly verifiable randomness as a service, contact us at <a href="mailto:leagueofentropy@googlegroups.com" target="_blank" rel="noopener noreferrer">leagueofentropy@googlegroups.com</a>. We are looking for enthusiastic teams with experience running secure production services who are interested in operating drand nodes and relays. We also encourage you to check out the drand GitHub repository for details.</em></p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="League-of-Entropy" term="League-of-Entropy"/>
        <category label="New-Members" term="New-Members"/>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[drand: 2022 Year in Review & our 2023 Roadmap]]></title>
        <id>https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap</id>
        <link href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap"/>
        <updated>2023-01-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[drand: 2022 Year in Review]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="drand-2022-year-in-review">drand: 2022 Year in Review<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#drand-2022-year-in-review" class="hash-link" aria-label="Direct link to drand: 2022 Year in Review" title="Direct link to drand: 2022 Year in Review">​</a></h2>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-reflections-on-a-year-of-achievements">🥳 Reflections on a Year of Achievements<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-reflections-on-a-year-of-achievements" class="hash-link" aria-label="Direct link to 🥳 Reflections on a Year of Achievements" title="Direct link to 🥳 Reflections on a Year of Achievements">​</a></h3>
<p>As 2022 wrapped up, the drand team took a moment to reflect on the incredible journey we’ve been on. The year was packed with milestones, innovations, and expansions that have set the stage for an exciting future. Here’s a look back at some of the standout moments from our year.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-new-features-that-shaped-our-journey">🆕 New Features That Shaped Our Journey<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-new-features-that-shaped-our-journey" class="hash-link" aria-label="Direct link to 🆕 New Features That Shaped Our Journey" title="Direct link to 🆕 New Features That Shaped Our Journey">​</a></h3>
<p>One of the highlights of 2022 was the development of some game-changing features:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-unchained-randomness-and-higher-frequency-beacons-">⛓️ Unchained Randomness and Higher Frequency Beacons 🚨<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#%EF%B8%8F-unchained-randomness-and-higher-frequency-beacons-" class="hash-link" aria-label="Direct link to ⛓️ Unchained Randomness and Higher Frequency Beacons 🚨" title="Direct link to ⛓️ Unchained Randomness and Higher Frequency Beacons 🚨">​</a></h3>
<p>Early in the year, we rolled out unchained randomness and higher frequency beacons on our testnet. These features have shown immense potential, and we’ve been thrilled with their performance. They promise to expand the horizons for drand and the applications using it. We’ve been testing them rigorously, and they’ve been operational for several months now.</p>
<p><em>Want to dive deeper? Check out <a href="https://docs.drand.love/blog/multi-frequency-support-and-timelock-encryption-are-coming-to-drand">Multi-Frequency Support &amp; Timelock Encryption are coming to drand!</a> for all the details.</em></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-timelock-encryption">⏱️ Timelock Encryption<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#%EF%B8%8F-timelock-encryption" class="hash-link" aria-label="Direct link to ⏱️ Timelock Encryption" title="Direct link to ⏱️ Timelock Encryption">​</a></h3>
<p>Building on the success of unchained randomness, we developed Timelock Encryption on drand. This feature has been a hit, garnering a lot of attention and excitement. While it’s still in the testnet phase, we’ve already launched a web app, <a href="https://timevault.drand.love/" target="_blank" rel="noopener noreferrer">Timevault</a>, and we’re looking forward to deploying it on the mainnet soon. Stay tuned for updates!</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-enhancing-network-visibility">🔭 Enhancing Network Visibility<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-enhancing-network-visibility" class="hash-link" aria-label="Direct link to 🔭 Enhancing Network Visibility" title="Direct link to 🔭 Enhancing Network Visibility">​</a></h3>
<p>Monitoring and maintaining a robust network is crucial. This year, we made significant strides in enhancing our visibility into the drand network:</p>
<ul>
<li><strong>Integrated Metrics:</strong> We embedded metrics directly into our codebase, providing a clearer view of the network’s health.</li>
<li><strong>New Dashboard:</strong> We built a comprehensive dashboard that gives us a holistic view of nodes before, during, and after resharing ceremonies. This tool has been instrumental in enabling async ceremonies, making the process more flexible for node operators.</li>
</ul>
<p><em>Curious about the technical details? Read more in <a href="https://docs.drand.love/blog/observing-randomness">Observing Randomness</a></em></p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-taking-drand-to-new-heights--literally">🛰️ Taking drand to New Heights – Literally!<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#%EF%B8%8F-taking-drand-to-new-heights--literally" class="hash-link" aria-label="Direct link to 🛰️ Taking drand to New Heights – Literally!" title="Direct link to 🛰️ Taking drand to New Heights – Literally!">​</a></h3>
<p>One of the most exciting developments of 2022 was our collaboration with CryptoSat. In October, we deployed drand on one of their satellites, sending it into space! This space node interacted with ground station nodes, marking a significant milestone in our journey.</p>
<p>We’re not stopping there. Our goal is to have a permanent drand node operating from space, further enhancing the resilience of our network.</p>
<p><em>Read all about this groundbreaking achievement in <a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space">CryptoSat takes drand to Space!</a></em></p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-growing-the-league-of-entropy">🪴 Growing the League of Entropy<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-growing-the-league-of-entropy" class="hash-link" aria-label="Direct link to 🪴 Growing the League of Entropy" title="Direct link to 🪴 Growing the League of Entropy">​</a></h3>
<p>2022 was also a year of growth for the League of Entropy (LoE):</p>
<ul>
<li><strong>New Members:</strong> We welcomed four new members to the League and have several more lined up for consideration in the coming months.</li>
<li><strong>Community Engagement:</strong> We presented drand at several high-profile events, including NorthSec, MCH, and DEFCON. These presentations sparked new collaborations and expanded our community.</li>
</ul>
<p>Interested in joining the League of Entropy? Learn more at <a href="https://drand.love/1e76674b75e249699445799c5083fe78" target="_blank" rel="noopener noreferrer">The League of Entropy</a></p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="celebrating--uptime">Celebrating 💯% Uptime!<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#celebrating--uptime" class="hash-link" aria-label="Direct link to Celebrating 💯% Uptime!" title="Direct link to Celebrating 💯% Uptime!">​</a></h3>
<p>We’re proud to report that our network had 100% uptime throughout the year, with no hiccups or disruptions. This level of reliability is a testament to the hard work and dedication of our team.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-looking-ahead-drand-in-2023">😎 Looking Ahead: drand in 2023<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-looking-ahead-drand-in-2023" class="hash-link" aria-label="Direct link to 😎 Looking Ahead: drand in 2023" title="Direct link to 😎 Looking Ahead: drand in 2023">​</a></h3>
<p>As we celebrate our successes, we’re also gearing up for an ambitious 2023. Here’s a sneak peek at what’s in store:</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-network-maintenance-and-upgrades">🔧 Network Maintenance and Upgrades<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-network-maintenance-and-upgrades" class="hash-link" aria-label="Direct link to 🔧 Network Maintenance and Upgrades" title="Direct link to 🔧 Network Maintenance and Upgrades">​</a></h3>
<p>Our ongoing commitment to maintaining and enhancing the drand network includes:</p>
<ul>
<li>Optimizing storage for beacons.</li>
<li>Implementing unchained randomness and higher frequency beacons on the mainnet.</li>
<li>Refactoring the Distributed Key Generation (DKG) process to improve resilience and flexibility.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="expanding-the-league-of-entropy">Expanding the League of Entropy<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#expanding-the-league-of-entropy" class="hash-link" aria-label="Direct link to Expanding the League of Entropy" title="Direct link to Expanding the League of Entropy">​</a></h3>
<p>With improved processes, we’re looking to expand the League of Entropy. We’re also exploring incentive structures to reward those who contribute their time and resources to the network.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-integrating-with-filecoin-virtual-machine-fvm">🪙 Integrating with Filecoin Virtual Machine (FVM)<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-integrating-with-filecoin-virtual-machine-fvm" class="hash-link" aria-label="Direct link to 🪙 Integrating with Filecoin Virtual Machine (FVM)" title="Direct link to 🪙 Integrating with Filecoin Virtual Machine (FVM)">​</a></h3>
<p>The Filecoin team is working on the Filecoin Virtual Machine (FVM), and we’re excited to integrate drand beacons into this system. This will significantly broaden drand’s user base and application scope.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-supporting-the-drand-community">🤝🏽 Supporting the drand Community<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#-supporting-the-drand-community" class="hash-link" aria-label="Direct link to 🤝🏽 Supporting the drand Community" title="Direct link to 🤝🏽 Supporting the drand Community">​</a></h3>
<p>We’re committed to making drand more user- and developer-friendly. This includes updating our processes, websites, and “how to” guides, and holding regular “code walkthroughs” and hackathons to engage with our community.</p>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-join-us-on-our-journey">🛣️ Join Us on Our Journey!<a href="https://docs.drand.love/blog/drand-2022-year-in-review-&amp;-our-2023-roadmap#%EF%B8%8F-join-us-on-our-journey" class="hash-link" aria-label="Direct link to 🛣️ Join Us on Our Journey!" title="Direct link to 🛣️ Join Us on Our Journey!">​</a></h3>
<p>2023 promises to be a year of growth and innovation. We invite you to join us on this exciting journey. Whether you’re a developer, a potential partner, or just a fan of what we’re doing, we’d love to have you involved.</p>
<ul>
<li><strong>Monitor Our Progress:</strong> here on this blog!</li>
<li><strong>Get Involved:</strong> Join the discussion in the drand Slack workspace through this <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-2p00bn43o-qALTK5RZEIK3I4fIO9h8dQ" target="_blank" rel="noopener noreferrer">invitation link</a>.</li>
</ul>
<p>Best wishes for a productive 2023! 🎉</p>
<hr>
<p>Feel free to let us know if you need more adjustments or further details!</p>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[CryptoSat takes drand to Space!]]></title>
        <id>https://docs.drand.love/blog/cryptosat-takes-drand-to-space</id>
        <link href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space"/>
        <updated>2022-10-19T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[https://drand.love/assets/img/cryptosat-blog-header3.84006631.png]]></summary>
        <content type="html"><![CDATA[<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/cryptosat-blog-header3.84006631.png" src="https://docs.drand.love/assets/images/cryptosat-blog-header3.84006631-e394f4b58920c86fa32654f97ac123ed.png" width="1400" height="786" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-drand--️-cryptosat-pioneering-space-based-randomness">🎲 drand &amp; 🛰️ CryptoSat: Pioneering Space-Based Randomness<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#-drand--%EF%B8%8F-cryptosat-pioneering-space-based-randomness" class="hash-link" aria-label="Direct link to 🎲 drand &amp; 🛰️ CryptoSat: Pioneering Space-Based Randomness" title="Direct link to 🎲 drand &amp; 🛰️ CryptoSat: Pioneering Space-Based Randomness">​</a></h2>
<p><strong>drand is the next generation distributed randomness service.</strong> It requires several independent organizations to run a node that contributes a part of the randomness to the network. So far, all of the nodes that participate in the <a href="https://blog.cloudflare.com/league-of-entropy/" target="_blank" rel="noopener noreferrer"><strong>League of Entropy’s</strong></a> drand network have been placed on Earth. But this has just changed! Temporarily for now, but hopefully more permanently in the near future. Read on to find out all the details.</p>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-cryptosat">What is CryptoSat?<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#what-is-cryptosat" class="hash-link" aria-label="Direct link to What is CryptoSat?" title="Direct link to What is CryptoSat?">​</a></h3>
<p><a href="http://cryptosat.io/" target="_blank" rel="noopener noreferrer">CryptoSat</a> builds and launches satellites that power blockchain and cryptographic protocols. Satellites are physically inaccessible and can serve as the most secure root-of-trust that guarantees the confidentiality and integrity of sensitive computations and data. Such tamper-proof satellites can serve numerous use-cases including transaction signing, trusted setups for cryptographic schemes, a randomness oracle, a time-oracle (VDF), and more.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-drand">What is drand?<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#what-is-drand" class="hash-link" aria-label="Direct link to What is drand?" title="Direct link to What is drand?">​</a></h3>
<p>drand is designed to be run by a network of nodes to produce verifiable, unpredictable, and non-biasable random values. The primary drand network is operated by a group of partners known as the <em>League of Entropy</em> (LoE). The LoE currently consists of 16 independent member organizations located on several continents and operating 23 nodes across different cloud providers, data centers, and geographies.</p>
<p>drand is based on a cryptography model called “Threshold Cryptography.” According to this model, a <code>threshold</code> number of “partial signatures” need to be collected from different nodes to produce a valid signature for the whole group. In the LoE’s drand network, the <code>threshold</code> is set to 50% of nodes +1, which gives a <code>threshold</code> of 12 for a 23-node network.</p>
<p>The random numbers produced by drand are:</p>
<ul>
<li><strong>Verifiable:</strong> Anyone can verify that a random value was indeed produced by the LoE group by checking the signature and re-deriving the randomness from it themselves.</li>
<li><strong>Unpredictable:</strong> A new random value can only be produced when a <code>threshold</code> number of parts (also called partials) of the final signature are collected and aggregated.</li>
<li><strong>Non-biasable:</strong> It is impossible to influence any future random value without compromising a <code>threshold</code> number of nodes.</li>
</ul>
<p>The LoE drand network has been running since August 2020, has produced more than 2M random values (emitted every 30 seconds) as of September 2022, and has had zero downtime.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-the-experiment">⚗️ The Experiment<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#%EF%B8%8F-the-experiment" class="hash-link" aria-label="Direct link to ⚗️ The Experiment" title="Direct link to ⚗️ The Experiment">​</a></h3>
<p>On March 16th, 2022, CryptoSat conducted a series of experiments aboard the International Space Station (ISS). These experiments tested the operational aspects of performing cryptographic operations from space, as a stepping stone towards running such operations in satellites. One important experiment was to run a drand node on a machine on the ISS and connect it to a drand node on the ground.</p>
<p>First, the two nodes performed a Distributed Key Generation (DKG) procedure. Then, the pair of nodes started periodically producing a random beacon. The experiment established the feasibility of placing a drand node in space, despite operational complexities.</p>
<p>Latency between nodes plays an important role in the drand network, and satellite networks may incur increased latency and delays due to the distance between terrestrial nodes and those on satellites. Spotty connectivity due to “line-of-sight” requirements can cause satellite nodes to disappear and experience severe bandwidth fluctuations.</p>
<p><em>drand was never before tested under such circumstances.</em> The ISS experiment confirmed the feasibility of using the existing drand implementation on a space node, given unpredictable connectivity. However, the ISS experiment provided only limited insight into the long-term ongoing operation of a drand node in space, due to the very limited time frame of the experiment (under an hour). Spotty connectivity needs to be further simulated before deploying drand on an actual satellite.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-importance-and-next-steps">❗ Importance and Next Steps<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#-importance-and-next-steps" class="hash-link" aria-label="Direct link to ❗ Importance and Next Steps" title="Direct link to ❗ Importance and Next Steps">​</a></h3>
<p><strong>A signature from space:</strong> Any computer placed on Earth is vulnerable to physical force and penetration through physical access. Although it is very difficult to simultaneously compromise <code>threshold</code> nodes and LoE partners use the highest security standards, a node that operates from space is physically unreachable. This is why CryptoSat’s node, which operates from space, is such an interesting addition to the League of Entropy.</p>
<p>The two teams plan to continue the collaboration and establish CryptoSat’s participation in the League of Entropy as a longer-term commitment. Several things stand out from this vision:</p>
<ol>
<li><strong>Improved Security:</strong> Having a node outside of physical reach further enhances the bias-resistance and resilience of the drand network and randomness service.</li>
<li><strong>Latency Testing:</strong> We will be able to test whether higher latencies influence any part of the drand randomness service, including the DKG itself and the aggregation of partials.</li>
<li><strong>CryptoSat's Cryptographic Use Case:</strong> Running drand is generally lightweight in terms of CPU and bandwidth requirements but has increased availability requirements. Stress-testing cryptographic operations helps CryptoSat focus on increasing availability and showcasing progress through clear metrics.</li>
<li><strong>User Flexibility:</strong> Different users have different threat models. CryptoSat provides a node with unique security properties that can withstand coordinated attacks on multiple ground nodes, allowing users to choose whether their use-case requires beacons produced with the participation of CryptoSat.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="️-whats-next-on-our-roadmap">🗺️ What’s Next on Our Roadmap?<a href="https://docs.drand.love/blog/cryptosat-takes-drand-to-space#%EF%B8%8F-whats-next-on-our-roadmap" class="hash-link" aria-label="Direct link to 🗺️ What’s Next on Our Roadmap?" title="Direct link to 🗺️ What’s Next on Our Roadmap?">​</a></h3>
<p>In May 2022, <a href="https://cointelegraph.com/news/cryptosat-s-first-nanosatellite-blasts-off-wednesday-on-spacex-rocket" target="_blank" rel="noopener noreferrer">CryptoSat launched its first satellite</a>, Crypto1. While the ISS experiment was a valuable proof of concept for running drand in space, the real value comes from a truly physically isolated satellite supporting the drand protocol. Protocol Labs and CryptoSat are aiming to continue co-development towards a functional drand node running aboard a satellite. This requires some refactoring of the drand implementation to separate the cryptographic module that needs to run in space from the parts that communicate with other drand nodes.</p>
<p>As mentioned, the time-constrained ISS experiment doesn’t provide full insight into the ongoing operation of a node with spotty connectivity. We need to simulate a participant node that is only occasionally available to participate in beacon generation rounds, simulating the conditions of a satellite that is sometimes out of reach of any ground station.</p>
<p>The future is bright for this collaboration—not only for the two parties involved but most importantly for the users of drand as a randomness service! Reach out if you have ideas on how to add further value to our upcoming experiments, or if you want to get involved and contribute to drand’s vision. Make sure to join our <a href="https://join.slack.com/t/drandworkspace/shared_invite/zt-2p00bn43o-qALTK5RZEIK3I4fIO9h8dQ" target="_blank" rel="noopener noreferrer"><strong>drand Slack workspace</strong></a>, or reach out by email at: leagueofentropy [ at ] googlegroups.com.</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Observing Randomness]]></title>
        <id>https://docs.drand.love/blog/observing-randomness</id>
        <link href="https://docs.drand.love/blog/observing-randomness"/>
        <updated>2022-08-25T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Monitoring distributed systems is a challenge. While there are established patterns and solutions for monitoring the most common types of applications, there is usually no silver bullet. In this blog post, we outline the challenges that we faced when implementing monitoring for one such system, drand.]]></summary>
        <content type="html"><![CDATA[<p><em>Monitoring distributed systems is a challenge. While there are established patterns and solutions for monitoring the most common types of applications, there is usually no silver bullet. In this blog post, we outline the challenges that we faced when implementing monitoring for one such system, drand.</em></p>
<!-- -->
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-drand">What is drand?<a href="https://docs.drand.love/blog/observing-randomness#what-is-drand" class="hash-link" aria-label="Direct link to What is drand?" title="Direct link to What is drand?">​</a></h3>
<p><strong>Drand</strong> is a public, verifiable, unpredictable, and unbiased randomness beacon. It is based on the idea that to generate randomness in a reliable and trustworthy way, you cannot depend on a single entity to control the infrastructure where it runs. This led us to seek the collaboration of multiple organizations to run their own drand daemons, forming <a href="https://drand.love/1e76674b75e249699445799c5083fe78" target="_blank" rel="noopener noreferrer">The League of Entropy</a> (LoE)—a distributed organization where each participating partner runs a drand node.</p>
<p>A drand <em>network</em> is composed of multiple <em>nodes</em>. Each network generates separate randomness beacons at specific intervals, called <em>rounds</em>. The number of nodes on a network is fixed at any given point in time and only changes during a <em>ceremony</em>. During the ceremony, a <em>threshold</em> is set, which is the minimum number of nodes that need to be connected to the network at any given time for randomness generation to succeed.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-the-need-for-monitoring">📈 The Need for Monitoring<a href="https://docs.drand.love/blog/observing-randomness#-the-need-for-monitoring" class="hash-link" aria-label="Direct link to 📈 The Need for Monitoring" title="Direct link to 📈 The Need for Monitoring">​</a></h3>
<p>To ensure security, we do not allow just any host to join the network at any time. Whenever a host joins or leaves the network, we hold a “ceremony” where cryptographic keys are refreshed and exchanged. In between ceremonies, the list of hosts that participate in a drand network is static. Ceremonies are usually held quarterly, and before each ceremony, an allow list containing the IP addresses of all nodes in the network is distributed to all participants to open the appropriate firewall ports.</p>
<p>Coordinating these ceremonies presents several challenges:</p>
<ul>
<li><strong>Synchronous Operation</strong>: All node operators need to be online simultaneously to execute commands correctly.</li>
<li><strong>Version Mismatch</strong>: Nodes might be running different versions of <code>drand</code>, leading to failures.</li>
<li><strong>Connectivity Issues</strong>: Nodes might have connectivity problems that prevent proper participation.</li>
</ul>
<p>To address these issues, full visibility into the drand network and the state of each node is essential. Our goal is to enable <a href="https://en.wikipedia.org/wiki/Asynchronous_system" target="_blank" rel="noopener noreferrer"><strong>asynchronous ceremonies</strong></a> where operators can execute commands within a timeframe without being online simultaneously. A monitoring tool providing an accurate view of nodes and network states is necessary.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-monitoring-architecture-requirements">📏 Monitoring Architecture Requirements<a href="https://docs.drand.love/blog/observing-randomness#-monitoring-architecture-requirements" class="hash-link" aria-label="Direct link to 📏 Monitoring Architecture Requirements" title="Direct link to 📏 Monitoring Architecture Requirements">​</a></h3>
<p>To properly monitor the drand network, we have the following requirements:</p>
<ol>
<li><strong>Allow any LoE member to create their own monitoring infrastructure</strong>: Organizations can select the metrics aggregation platform that best meets their needs.</li>
<li><strong>Ease of deployment</strong>: Modify the drand binary to export metrics without adding a new binary.</li>
<li><strong>Minimize the need for opening network ports</strong>: Ideally, no network ports other than the one used for generating randomness should be opened.</li>
<li><strong>Use industry-standard formats where possible</strong>: Use an industry-standard format to publish metrics.</li>
<li><strong>Ability to see the state of the whole network from any point in the network</strong>: Enable each node to provide a full view of the whole network.</li>
<li><strong>(Close to) real-time view of the network state</strong>: Ensure changes in node state are seen quickly, especially during ceremonies.</li>
</ol>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-design-decisions">📐 Design Decisions<a href="https://docs.drand.love/blog/observing-randomness#-design-decisions" class="hash-link" aria-label="Direct link to 📐 Design Decisions" title="Direct link to 📐 Design Decisions">​</a></h3>
<p>Our requirements led to the following design:</p>
<ul>
<li><strong>Each node exposes its own metrics in Prometheus format</strong>: Prometheus is an <a href="https://en.wikipedia.org/wiki/Prometheus_(software)" target="_blank" rel="noopener noreferrer"><strong>industry-standard</strong></a> format, and each node exposing its own metrics allows direct monitoring of individual nodes.</li>
<li><strong>Each node can retrieve other nodes’ metrics and expose them in Prometheus format</strong>: This enables not only Protocol Labs but any LoE member to create their own dashboards showing the state of the whole network.</li>
<li><strong>Metrics transport uses the same mechanism as inter-node communication for generating randomness (GRPC)</strong>: By using <a href="https://en.wikipedia.org/wiki/GRPC" target="_blank" rel="noopener noreferrer"><strong>GRPC</strong></a>, we allow metrics to be sent between nodes without requiring additional network ports.</li>
<li><strong>Gather metrics using Telegraf and export them to InfluxDB, accessed via Grafana Cloud</strong>: This setup centralizes metrics and creates an easy-to-use dashboard with a one-minute scraping interval, which can be lowered during ceremonies for faster updates.</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-metrics-design">📊 Metrics Design<a href="https://docs.drand.love/blog/observing-randomness#-metrics-design" class="hash-link" aria-label="Direct link to 📊 Metrics Design" title="Direct link to 📊 Metrics Design">​</a></h3>
<p>We decided to monitor the following minimal information for running a smooth ceremony:</p>
<ul>
<li>Version of <code>drand</code> that the node is running.</li>
<li>Whether nodes have restarted their daemon ahead of the ceremony to ensure that the certificate is still valid and to clear the process’ memory and storage.</li>
<li>Whether nodes have connectivity to all other nodes.</li>
<li>The current ceremony state of the node.</li>
</ul>
<p>For ongoing monitoring, we added the following for each beacon in each node:</p>
<ul>
<li>When the last randomness was generated.</li>
<li>The last round generated by the node for that beacon chain.</li>
<li>The time difference between nodes (including network round-trip times).</li>
</ul>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-inter-node-communications">📡 Inter-Node Communications<a href="https://docs.drand.love/blog/observing-randomness#-inter-node-communications" class="hash-link" aria-label="Direct link to 📡 Inter-Node Communications" title="Direct link to 📡 Inter-Node Communications">​</a></h3>
<p>As mentioned above, one of the requirements was to be able to view the state of the whole drand network without requiring node operators to open any additional holes in their firewall, nor to connect to any hosts other than those included in the drand network itself. Therefore, it was necessary to enable the possibility of fetching a remote node’s metrics via the same method used to coordinate randomness generation: that is, through <a href="https://en.wikipedia.org/wiki/GRPC" target="_blank" rel="noopener noreferrer"><strong>GRPC</strong></a>.</p>
<p>We also wanted to reduce the amount of metrics traffic between nodes, so we went with a pull system where any node can pull any other node’s metrics when requested. For that, we exposed an additional HTTP endpoint that includes the peer’s ID to get Prometheus metrics for the associated peer. A request to that endpoint makes a GRPC call to the remote node to get the metrics before returning them to the client. With this, we have the ability to get metrics from all nodes in the drand network without any unnecessary additional traffic.</p>
<p>The Protocol Labs nodes all run instances of <a href="https://www.influxdata.com/time-series-platform/telegraf/" target="_blank" rel="noopener noreferrer"><strong>Telegraf</strong></a>, whose configuration is hard-coded to get the metrics from all nodes in the drand network. This is possible because the nodes in the network are static and only change during ceremonies. Telegraf then pushes the metrics into <a href="https://www.influxdata.com/" target="_blank" rel="noopener noreferrer"><strong>InfluxDB</strong></a>. We then use <a href="https://grafana.com/" target="_blank" rel="noopener noreferrer"><strong>Grafana</strong></a> to visualize the data.</p>
<p>Regarding LoE members, the fact that metrics are exposed using the industry-standard Prometheus format and that any node can gather metrics from any other node in the network makes it possible for any of them to create a setup similar to this and gather metrics into their own observability solution.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-dashboard-design">📉 Dashboard Design<a href="https://docs.drand.love/blog/observing-randomness#-dashboard-design" class="hash-link" aria-label="Direct link to 📉 Dashboard Design" title="Direct link to 📉 Dashboard Design">​</a></h3>
<p>As is usually the case, it took multiple iterations to get to a dashboard design that was useful and also comprehensible. These iterations involved both changing the layout and organization of the presented information, as well as adding metrics that were missed during initial analysis. For example, during ceremonies some of the state changes happen so fast that they were missed by the polling and dashboard refresh intervals, so we added timestamps to be able to see whether a state had changed or not. We also reformulated some metrics labels to reduce cardinality.</p>
<p>We ended up with a dashboard with two sections. The first section includes connectivity information for each node, as well as a connectivity matrix showing which nodes are connected to which other nodes. This has enabled us to find problems such as firewall misconfigurations or bugs impacting connectivity.</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/drand_dash_1.f1a0b363.png" src="https://docs.drand.love/assets/images/drand_dash_1.f1a0b363-d91d74ddbe74f78ea8c2c3da60e99c2d.png" width="1175" height="887" class="img_ev3q"></p>
<p>The second section contains information about each of the beacons in the given network, including the ceremony state for each node. This allows us to track ceremonies, as well as ensuring that all nodes are up to date with all other nodes.</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/drand_dash_2.f887bda3.png" src="https://docs.drand.love/assets/images/drand_dash_2.f887bda3-0f1d726e291be5d74b2fa9879db8b50a.png" width="1158" height="845" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="-results">🏆 Results<a href="https://docs.drand.love/blog/observing-randomness#-results" class="hash-link" aria-label="Direct link to 🏆 Results" title="Direct link to 🏆 Results">​</a></h3>
<p>We have already deployed and used the new dashboard in the last set of ceremonies that we carried out in our testnet network. It has proven to be an extremely useful tool. We were able to spot connectivity problems and other inconsistencies in a totally asynchronous manner, which in turn enabled us to resolve issues much faster. This has given us confidence to run the next testnet ceremony in an asynchronous manner, without having to coordinate all operators being in front of their keyboards at the same time.</p>
<p>Beyond ceremonies, we now have a much more detailed view of the state of the LoE drand network.</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="next-steps">Next Steps<a href="https://docs.drand.love/blog/observing-randomness#next-steps" class="hash-link" aria-label="Direct link to Next Steps" title="Direct link to Next Steps">​</a></h3>
<p>As is the case with pretty much any software tool, many more features can be added and several of the existing ones can be optimized. However, what we have is already a big step forward and gives us much higher confidence in the process, compared to the ceremony procedure we used to have.</p>
<p>Some of the issues we have found that we would like to fix in future versions of the monitoring infrastructure are:</p>
<ul>
<li><strong>Consistency</strong>: We sometimes see some measurements toggling between two numbers in the dashboard. The reason for this is, we are gathering metrics from all hosts and storing them in Influx DB. However, some of these metrics are system-wide, and since this is a distributed system, some hosts might have slightly different views of the state of the network than other hosts (especially during ceremonies). While this is not a widespread problem, it can be confusing.</li>
<li><strong>Visibility of New Nodes</strong>: When a new node joins the network, we are unable to see</li>
</ul>
<p>it in the dashboard until the ceremony is finished. We would like to have some way of monitoring the state of a new node.</p>
<ul>
<li><strong>Visibility in the Case of Connectivity Problems</strong>: Since we are scraping the metrics from the Protocol Labs nodes, if a node cannot connect to any of them, we cannot gather its metrics. While this is mitigated by scraping from all Protocol Labs nodes instead of just one, we still run the risk of missing a node’s metrics if it cannot connect to any Protocol Labs nodes.</li>
</ul>
<hr>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="suggested-references-for-further-reading">Suggested References for Further Reading:<a href="https://docs.drand.love/blog/observing-randomness#suggested-references-for-further-reading" class="hash-link" aria-label="Direct link to Suggested References for Further Reading:" title="Direct link to Suggested References for Further Reading:">​</a></h3>
<ul>
<li><a href="https://en.wikipedia.org/wiki/Random_number" target="_blank" rel="noopener noreferrer">Random Number</a></li>
<li><a href="https://en.wikipedia.org/wiki/Threshold_cryptography" target="_blank" rel="noopener noreferrer">Threshold Cryptography</a></li>
<li><a href="https://en.wikipedia.org/wiki/Public_key_infrastructure" target="_blank" rel="noopener noreferrer">Public Key Infrastructure</a></li>
<li><a href="https://en.wikipedia.org/wiki/Verifiable_random_function" target="_blank" rel="noopener noreferrer">Verifiable Random Function</a></li>
<li><a href="https://en.wikipedia.org/wiki/Prometheus_(software)" target="_blank" rel="noopener noreferrer">Prometheus (software)</a></li>
<li><a href="https://en.wikipedia.org/wiki/GRPC" target="_blank" rel="noopener noreferrer">GRPC</a></li>
<li><a href="https://en.wikipedia.org/wiki/Asynchronous_system" target="_blank" rel="noopener noreferrer">Asynchronous System</a></li>
</ul>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="Features" term="Features"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[drand @ NorthSec]]></title>
        <id>https://docs.drand.love/blog/drand-at-northsec</id>
        <link href="https://docs.drand.love/blog/drand-at-northsec"/>
        <updated>2022-06-23T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Drand was recently presented at the North Sec conference! Here is a brief summary of the event and the drand talk, as well as the answers to a few of the interesting questions we received.]]></summary>
        <content type="html"><![CDATA[<p><em>Drand was recently presented at the North Sec conference! Here is a brief summary of the event and the drand talk, as well as the answers to a few of the interesting questions we received.</em></p>
<!-- -->
<p>You can find the slides <a href="https://ipfs.io/ipfs/bafybeigenfo4az5j7abbjc3mbn7i4rl6qto7cca75kednwh73lopzq6foa/Public_verifiable_unbiasable_randomness_wassat-NSec2022-Yolan_Romailler.pdf" target="_blank" rel="noopener noreferrer">**ready to be downloaded on IPFS</a>:**</p>
<p>[CID: bafybeigenfo4az5j7abbjc3mbn7i4rl6qto7cca75kednwh73lopzq6foa]</p>
<p>A video of the talk is already <a href="https://youtu.be/I1iKtNGRv0s?t=17468" target="_blank" rel="noopener noreferrer"><strong>available on Youtube</strong></a>.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-northsec"><strong>What is NorthSec?</strong><a href="https://docs.drand.love/blog/drand-at-northsec#what-is-northsec" class="hash-link" aria-label="Direct link to what-is-northsec" title="Direct link to what-is-northsec">​</a></h2>
<p><a href="https://nsec.io/" target="_blank" rel="noopener noreferrer"><strong>North Sec</strong></a> is the biggest conference in Canada that focuses on IT Security and its many facets. It is traditionally in Montreal in May and starts by featuring a few days of deep dive trainings, followed by two days of conference sessions and finishes with the one of the largest on-site Capture The Flag (CTF) events in the world taking place over the weekend.</p>
<p>At North Sec you find plenty of security professionals and hackers alike in the audience, and the range of talks is usually well balanced, from pen-testing to social impact or legal ones, including cryptography, malware, and more! It features both attack- and defence-focused presentations and is usually very enjoyable.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="drand--northsec"><strong>Drand @ NorthSec</strong><a href="https://docs.drand.love/blog/drand-at-northsec#drand--northsec" class="hash-link" aria-label="Direct link to drand--northsec" title="Direct link to drand--northsec">​</a></h2>
<p>The Drand team attended North Sec to present a talk titled “Public, verifiable, and unbiasable randomness: wassat?” whose goal was to introduce the different flavours of randomness to the audience, as well as to explain some of the quirks that make randomness a sensitive topic, and why it’s especially difficult in the distributed, public case. Finally, we also did a recap about the current drand network being run by the League of Entropy and available to the public as a source of randomness. We have invited interested parties to start using drand in their projects, or to join the <a href="https://www.cloudflare.com/en-gb/leagueofentropy/" target="_blank" rel="noopener noreferrer"><strong>League of Entropy</strong></a> to contribute to a secure, distributed randomness network.</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/northsec-presentation-01.jpg" src="https://docs.drand.love/assets/images/northsec-presentation-01-15390e0f69fc6f2f4430d5a7a3ce175d.jpg" width="2048" height="913" class="img_ev3q"></p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="key-takeaways-from-the-talk"><strong>Key Takeaways from the Talk</strong><a href="https://docs.drand.love/blog/drand-at-northsec#key-takeaways-from-the-talk" class="hash-link" aria-label="Direct link to key-takeaways-from-the-talk" title="Direct link to key-takeaways-from-the-talk">​</a></h3>
<p>In case you need a refresher or are just curious about what this talk was about, here are my key takeaways:</p>
<ul>
<li><strong>Public randomness is a specific kind of randomness that is typically used in lotteries and other public processes (jury election, population sampling, etc)</strong>, where you want to be able to say “Look, I’ve got nothing up my sleeves, I just took the random value here and anybody can check that I didn’t cheat”.</li>
<li><strong>Verifiable randomness is another kind of randomness that can be proven to have been generated in a given (honest) way</strong>. This is useful in order to increase public trust in one’s system. If you run a lottery but nobody knows how you’re choosing the winning number, people might be wary, whereas if you chose the winning numbers by picking them live on TV in a jar, then people can see you’re unlikely to bias the result. In the same way, verifiable randomness aims at increasing trust by providing a means of verifying the random value is unbiased and generated in a fair manner.</li>
<li><strong>Secret randomness is the kind of randomness you’re most used to and is meant to stay secret</strong>: every time you connect to a website, every time you generate a new SSH or PGP key, that’s the kind of randomness you’ll be using. For this kind of randomness, you usually want to source it from your very own computer and to rely on so-called “cryptographic PRNGs” when using it in your code to produce nonces, IVs or secret keys. It’s called “secret” because a leak or bias can have devastating consequences up to secret key leakage from a single signature, for example.</li>
</ul>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/northsec-presentation-02.jpg" src="https://docs.drand.love/assets/images/northsec-presentation-02-849ed771617c2d6375193e6bb74e86d7.jpg" width="2048" height="1099" class="img_ev3q"></p>
<ul>
<li><strong>Distributed randomness is what we call randomness that is meant to be used on a distributed system;</strong>&nbsp;be it a smart contract on a blockchain, or any other random value on which a system needs to achieve consensus, maybe for leader election, or something else. It’s usually fairly difficult to achieve consensus on a random value in a way that will ensure that this random value is neither predictable nor biased. In general, care must be taken in the distributed case to avoid “<a href="https://en.wikipedia.org/wiki/Front_running" target="_blank" rel="noopener noreferrer"><strong>front-running</strong></a>”: if someone can race the distributed system as soon as the random value is public and get their own transaction in just after the random value became public, it might have pretty severe consequences for the system. Therefore, if the public randomness is used to designate a winner, or if there is any potential gain from knowing it before others, we recommend relying on a “locking period” just before public release of the random beacon where you stop accepting new submissions, in order to avoid <a href="https://ethereum.org/en/developers/docs/mev/#effects-of-mev-the-bad" target="_blank" rel="noopener noreferrer"><strong>MEV attacks</strong></a> and front-running.</li>
<li><strong>drand and the League of Entropy are running a network of nodes providing public, verifiable, distributed randomness</strong> with 100% uptime since its launch in 2020! You can access it freely using our HTTP endpoints:<!-- -->
<ul>
<li><a href="https://api.drand.sh/public/latest" target="_blank" rel="noopener noreferrer"><strong>https://api.drand.sh/public/latest</strong></a></li>
<li><a href="https://api.drand.sh/info" target="_blank" rel="noopener noreferrer"><strong>https://api.drand.sh/info</strong></a></li>
<li>or Cloudflare’s endpoints:<!-- -->
<ul>
<li><a href="https://mainnet1-api.drand.cloudflare.com/health" target="_blank" rel="noopener noreferrer"><strong>https://mainnet1-api.drand.cloudflare.com/health</strong></a></li>
<li><a href="https://mainnet2-api.drand.cloudflare.com/public/1981367" target="_blank" rel="noopener noreferrer"><strong>https://mainnet2-api.drand.cloudflare.com/public/1981367</strong></a></li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Just don’t forget to verify the randomness and don’t use it to produce secret keys!</p>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/northsec-presentation-03.jpg" src="https://docs.drand.love/assets/images/northsec-presentation-03-24388235707baf45dcadd26e3bc93e5f.jpg" width="2048" height="1121" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-qa">❓ <strong>Q&amp;A</strong><a href="https://docs.drand.love/blog/drand-at-northsec#-qa" class="hash-link" aria-label="Direct link to -qa" title="Direct link to -qa">​</a></h2>
<p>While we had many interesting questions during the cryptography session panel, here is a selection of questions worth sharing further, along with some answers:</p>
<ul>
<li><strong>Q: How is drand and the LoE handling malicious takeover by new nodes?</strong></li>
</ul>
<p><strong>A:</strong>&nbsp;This is mostly a governance question: we are not accepting any random node on the network, new nodes and organizations joining the network need to be “vetted” by the other members. There is no technical countermeasure to this kind of takeover.</p>
<ul>
<li><strong>Q: How many rounds per second or per minute can drand generate? What’s the “bandwidth” of the produced randomness?</strong></li>
</ul>
<p><strong>A:</strong>&nbsp;The current mainnet is emitting one round every 30 seconds, and we are testing on our testnet a new, faster network producing a round every 3 seconds. Each round contains 256 bits of “randomness”.</p>
<ul>
<li><strong>Q: How can an organization join the League of Entropy and run a drand node?</strong></li>
</ul>
<p><strong>A:</strong>&nbsp;Just <a href="https://drand.love/" target="_blank" rel="noopener noreferrer"><strong>head to our webpage</strong></a> and fill the form at the bottom! The LoE will then discuss the application and if there are no blockers, we’ll get in touch with you, help you setup your node and join our testnet. This is a pre-cautionary, short testing period to make sure everything works fine, after which your node can join the mainnet network! There’s almost no paperwork, and it’s a fairly straightforward process.</p>
<ul>
<li><strong>Q: How does Time lock encryption work?</strong></li>
</ul>
<p><strong>A:</strong>&nbsp;Stay tuned, we’ll release the details, along with a blog post and a paper, and hopefully a conference talk later this year!</p>
<ul>
<li><strong>Q: How about using division and multiplication (r / max * range) instead of using modulo (r % range) to sample a random value in a given range in an unbiased way?</strong></li>
</ul>
<p><strong>A:</strong>&nbsp;This is not a good solution either, as relying on floating point arithmetic also introduces bias, although not necessarily in the same places as a modulo bias. You can find more about the biases of floating point techniques in <a href="https://www.pcg-random.org/posts/bounded-rands.html#fp-multiply-biased" target="_blank" rel="noopener noreferrer"><strong>this blog post</strong></a>. The real solution to sample an unbiased random value is to <a href="https://research.kudelskisecurity.com/2020/07/28/the-definitive-guide-to-modulo-bias-and-how-to-avoid-it/#:~:text=The%20most%20common%20way:%20rejection%20sampling" target="_blank" rel="noopener noreferrer"><strong>rely on rejection sampling</strong></a>:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token number" style="color:#36acaa">1.</span><span class="token plain"> sample a random r</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token number" style="color:#36acaa">2.</span><span class="token plain"> check is r </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">range</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">alternatively any multiple </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> range closest to max</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">yes</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">r</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">or r </span><span class="token operator" style="color:#393A34">%</span><span class="token plain"> range is the check was done against a multiple </span><span class="token keyword" style="color:#00009f">of</span><span class="token plain"> range</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token literal-property property" style="color:#36acaa">no</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> go back to step </span><span class="token number" style="color:#36acaa">1</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p><img decoding="async" loading="lazy" alt="https://drand.love/assets/img/biased-randomness.jpeg" src="https://docs.drand.love/assets/images/biased-randomness-415e5eb7b7061467cba0ba4319b35d7b.jpeg" width="2048" height="913" class="img_ev3q"></p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="-bonus-a-solution-to-one-of-the-ctf-challenges">🥇 <strong>Bonus: A Solution to one of the CTF Challenges</strong><a href="https://docs.drand.love/blog/drand-at-northsec#-bonus-a-solution-to-one-of-the-ctf-challenges" class="hash-link" aria-label="Direct link to -bonus-a-solution-to-one-of-the-ctf-challenges" title="Direct link to -bonus-a-solution-to-one-of-the-ctf-challenges">​</a></h2>
<p>Did I mention the Capture The Flag (CTF) session even featured a challenge centered around randomness this year? We solved it together with <a href="http://twitter.com/frenchYeti" target="_blank" rel="noopener noreferrer"><strong>FrenchYeti</strong></a>, who confessed he hadn’t written Java in years despite working on Android reverse engineering for a living! Here’s how we did it.</p>
<p>The challenge was just a simple webpage with a login form and a basic password-reset functionality relying on UUID version 4 to produce its password-reset URLs. We could query a password-reset URL for any user, including the admin account, but sadly the admin’s URL was sent to them by email, whereas our own user’s password-reset URL was just displayed on the webpage when we queried it.</p>
<p>UUID stands for “Universal Unique Identifiers” and there are 128-bit values used to uniquely identify objects or entities on the internet. They typically look like this: acb44130-856e-499f-b56e-bfce45dd1ae9.</p>
<p>“Version 4” means that the UUID is <strong>generated using random numbers</strong>, and since we had access to the code running on the server side, we could see that the random generator used to generate these UUID was simply Java’s very own Random. Sadly, or luckily for us, Java’s Random is a so-called <a href="https://en.wikipedia.org/wiki/Linear_congruential_generator" target="_blank" rel="noopener noreferrer"><strong>LCG</strong></a>, which stands for “linear congruential generator” and yes, it’s linear and totally insecure! So if you know its seed or can look at as few as two random values it generated, you can predict all of its output!</p>
<p>Next we needed to figure out how these UUID type 4 where generated, and thankfully, since they have 128 bits of entropy, they are just generated by <a href="https://github.com/cowtowncoder/java-uuid-generator/blob/a28b65dc2d862e6aa3ac7b16584d0e9eb8dd8ff9/src/main/java/com/fasterxml/uuid/impl/RandomBasedGenerator.java#L89-L93" target="_blank" rel="noopener noreferrer"><strong>calling the RNG <code>getLong</code> twice</strong></a>:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">@</span><span class="token maybe-class-name">Override</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">UUID</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">generate</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">/* 14-Oct-2010, tatu: Surprisingly, variant for reading byte array is</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         *   tad faster for SecureRandom... so let's use that then</span><br></span><span class="token-line" style="color:#393A34"><span class="token comment" style="color:#999988;font-style:italic">         */</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long r1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">_secureRandom</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            final byte</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> buffer </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">byte</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            _random</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">nextBytes</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_toLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">_toLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">buffer</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"> </span><span class="token keyword control-flow" style="color:#00009f">else</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _random</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">nextLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> _random</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">nextLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token maybe-class-name">UUIDUtil</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">constructUUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token maybe-class-name">UUIDType</span><span class="token punctuation" style="color:#393A34">.</span><span class="token constant" style="color:#36acaa">RANDOM_BASED</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>So, it meant we just needed a single UUID in order to recover Java’s Random seed and predict the next UUID it would generate!</p>
<p>There is a bit of extra complication stemming from the fact that the UUID generator is doing <a href="https://github.com/cowtowncoder/java-uuid-generator/blob/a28b65dc2d862e6aa3ac7b16584d0e9eb8dd8ff9/src/main/java/com/fasterxml/uuid/impl/UUIDUtil.java#L152-L161" target="_blank" rel="noopener noreferrer"><strong>some bit-fiddling when constructing the UUID</strong></a>:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">UUID</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">constructUUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter maybe-class-name">UUIDType</span><span class="token parameter"> type</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> long l1</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> long l2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// first, ensure type is ok</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        l1 </span><span class="token operator" style="color:#393A34">&amp;=</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">~</span><span class="token plain">0xF000L</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// remove high nibble of 6th byte</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        l1 </span><span class="token operator" style="color:#393A34">|=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">long</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">type</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">raw</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">12</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token comment" style="color:#999988;font-style:italic">// second, ensure variant is properly set too (8th byte; most-sig byte of second long)</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        l2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l2 </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&gt;&gt;&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// remove 2 MSB</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        l2 </span><span class="token operator" style="color:#393A34">|=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">2L </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">62</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> </span><span class="token comment" style="color:#999988;font-style:italic">// set 2 MSB to '10'</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">UUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l1</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> l2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Note that there is even some lost information, so we don’t know for sure what the two longs were when we “split” the UUID into longs again… But as you can see, the second long is only losing its 2 MSB, but that’s only 4 trials to bruteforce, so it’s fairly easy to “just try all possibilities” in that case. A further blessing for us is the fact that we actually only need one long to try and attack Java’s Random, because to generate a long, the random generator is called twice to produce integers and combines them together into a long! So, what we need to do is to:</p>
<ul>
<li>split the UUID into longs,</li>
<li>recover the possible integers from the longs,</li>
<li>try to see if it gives us a seed once reversed,</li>
<li>if so, validate it’s generating the right longs and generate the next UUID, the one that would have gotten sent to the admin email, then reset the admin password and win our flag!</li>
</ul>
<p>Which we did using the following code (<a href="https://stackoverflow.com/a/20183412/2757014" target="_blank" rel="noopener noreferrer"><strong>adapted from this StackExchange response</strong></a>):</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">splitLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">long l</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> r </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        r</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">0xffffffff</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        r</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">l </span><span class="token operator" style="color:#393A34">&gt;&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">32</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> r</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> long </span><span class="token function" style="color:#d73a49">getSeed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter">int i1</span><span class="token parameter punctuation" style="color:#393A34">,</span><span class="token parameter"> int i2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final long multiplier </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 0x5DEECE66DL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final long inv_mult </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 0xDFE05BCB1365L</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final long increment </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 0xBL</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        final long mask </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">1L </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">48</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long suffix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> 0L</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long lastSeed</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long currSeed</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int lastInt</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">long i</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i </span><span class="token operator" style="color:#393A34">&lt;</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token number" style="color:#36acaa">1</span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            suffix </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> i</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            currSeed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">long</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain">i2 </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> suffix</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lastSeed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currSeed </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> increment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> inv_mult</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> mask</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            lastInt </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">int</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastSeed </span><span class="token operator" style="color:#393A34">&gt;&gt;&gt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">16</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token keyword control-flow" style="color:#00009f">if</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastInt </span><span class="token operator" style="color:#393A34">==</span><span class="token plain"> i1</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                currSeed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> lastSeed</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                lastSeed </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">currSeed </span><span class="token operator" style="color:#393A34">-</span><span class="token plain"> increment</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">*</span><span class="token plain"> inv_mult</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">&amp;</span><span class="token plain"> mask</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">" Seed found: "</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">+</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">lastSeed </span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> multiplier</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">                </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain">  lastSeed </span><span class="token operator" style="color:#393A34">^</span><span class="token plain"> multiplier</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"current seed not found"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> long</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">splitUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter constant" style="color:#36acaa">UUID</span><span class="token parameter"> uuid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long l1 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> uuid</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getMostSignificantBits</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long l2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> uuid</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getLeastSignificantBits</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> ret </span><span class="token operator" style="color:#393A34">=</span><span class="token plain">  </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">long</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">4</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l2 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">3L </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">62</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l2 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">2L </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">62</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">2</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l2 </span><span class="token operator" style="color:#393A34">|</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">1L </span><span class="token operator" style="color:#393A34">&lt;&lt;</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">62</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        ret</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">3</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> l2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">return</span><span class="token plain">  ret</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token keyword" style="color:#00009f">public</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">static</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">void</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">main</span><span class="token punctuation" style="color:#393A34">(</span><span class="token parameter known-class-name class-name">String</span><span class="token parameter punctuation" style="color:#393A34">[</span><span class="token parameter punctuation" style="color:#393A34">]</span><span class="token parameter"> args</span><span class="token punctuation" style="color:#393A34">)</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"Starting"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token maybe-class-name">Random</span><span class="token plain"> random</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">					</span><span class="token comment" style="color:#999988;font-style:italic">// using the UUID we got from our own password reset request:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token constant" style="color:#36acaa">UUID</span><span class="token plain"> uuid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token constant" style="color:#36acaa">UUID</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">fromString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token string" style="color:#e3116c">"7e7c8bd5-1ba9-4419-aea9-8e7f3f3dfe7b"</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain" style="display:inline-block"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> parts </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token function" style="color:#d73a49">splitUID</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">uuid</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        int</span><span class="token punctuation" style="color:#393A34">[</span><span class="token punctuation" style="color:#393A34">]</span><span class="token plain"> pp</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        long seed4</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> r2</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token keyword control-flow" style="color:#00009f">for</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">int i</span><span class="token operator" style="color:#393A34">=</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">&lt;</span><span class="token number" style="color:#36acaa">4</span><span class="token plain"> </span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"> i</span><span class="token operator" style="color:#393A34">++</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">{</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            pp </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">splitLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            seed4 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getSeed</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain"> pp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">0</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">,</span><span class="token plain"> pp</span><span class="token punctuation" style="color:#393A34">[</span><span class="token number" style="color:#36acaa">1</span><span class="token punctuation" style="color:#393A34">]</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Test it now:</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            random </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token keyword" style="color:#00009f">new</span><span class="token plain"> </span><span class="token class-name">Random</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">seed4</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            r2 </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> random</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">nextLong</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">+</span><span class="token string" style="color:#e3116c">": "</span><span class="token operator" style="color:#393A34">+</span><span class="token plain">r2</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token comment" style="color:#999988;font-style:italic">// Get the next token</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            uuid </span><span class="token operator" style="color:#393A34">=</span><span class="token plain"> </span><span class="token maybe-class-name">App</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">getToken</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">random</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">            </span><span class="token maybe-class-name">System</span><span class="token punctuation" style="color:#393A34">.</span><span class="token property-access">out</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">println</span><span class="token punctuation" style="color:#393A34">(</span><span class="token plain">parts</span><span class="token punctuation" style="color:#393A34">[</span><span class="token plain">i</span><span class="token punctuation" style="color:#393A34">]</span><span class="token operator" style="color:#393A34">+</span><span class="token string" style="color:#e3116c">": "</span><span class="token operator" style="color:#393A34">+</span><span class="token plain">uuid</span><span class="token punctuation" style="color:#393A34">.</span><span class="token method function property-access" style="color:#d73a49">toString</span><span class="token punctuation" style="color:#393A34">(</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">)</span><span class="token punctuation" style="color:#393A34">;</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        </span><span class="token punctuation" style="color:#393A34">}</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">    </span><span class="token punctuation" style="color:#393A34">}</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>Which gave us the following output:</p>
<div class="language-jsx codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-jsx codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token maybe-class-name">Starting</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">current seed not found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1249310744445583749</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4962768465676381896</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1249310744445583749</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> 3d93cb79</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">9b39</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">40be</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">a32d</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">c9f64f1df03a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">Seed</span><span class="token plain"> found</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30426537520105</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> 6abec385</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">18e8</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4422</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">9d90</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">cc2c2e54dc3b</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">current seed not found</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1249310744445583749</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4962768465676381896</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">1249310744445583749</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> 3d93cb79</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">9b39</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">40be</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">a32d</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">c9f64f1df03a</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"> </span><span class="token maybe-class-name">Seed</span><span class="token plain"> found</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token number" style="color:#36acaa">30426537520105</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> </span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token plain"></span><br></span><span class="token-line" style="color:#393A34"><span class="token plain"></span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">5860996762872971653</span><span class="token operator" style="color:#393A34">:</span><span class="token plain"> 6abec385</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">18e8</span><span class="token operator" style="color:#393A34">-</span><span class="token number" style="color:#36acaa">4422</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">9d90</span><span class="token operator" style="color:#393A34">-</span><span class="token plain">cc2c2e54dc3b</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="Copy code to clipboard" title="Copy" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>And allowed us to reset the admin password using this newly generated UUID and win an extra CTF flag for our team!</p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="Conferences-and-Events" term="Conferences-and-Events"/>
        <category label="News" term="News"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[StorSwift joins the League of Entropy!]]></title>
        <id>https://docs.drand.love/blog/storswift-joins-the-league-of-entropy</id>
        <link href="https://docs.drand.love/blog/storswift-joins-the-league-of-entropy"/>
        <updated>2022-03-29T00:00:00.000Z</updated>
        <summary type="html"><![CDATA["StorSwift becomes the newest member of the League of Entropy. We've asked them why they're motivated by drand and decided to contribute - check what they said!"]]></summary>
        <content type="html"><![CDATA[<p><em>"StorSwift becomes the newest member of the League of Entropy. We've asked them why they're motivated by drand and decided to contribute - check what they said!"</em></p>
<p><img decoding="async" loading="lazy" alt="StorSwiftLogo.png" src="https://docs.drand.love/assets/images/StorSwiftLogo-96a34eff8fe53a6949247f62e98708b9.png" width="599" height="443" class="img_ev3q"></p>
<p>We are excited to announce that <a href="https://storswift.com/" target="_blank" rel="noopener noreferrer"><strong>StorSwift</strong></a>, a China-based cloud computing and storage services company, is joining forces with the <a href="https://leagueofentropy.com/" target="_blank" rel="noopener noreferrer"><strong>League of Entropy</strong></a> (LoE)! StorSwift is becoming the 15th member to join the LoE and the first partner joining from China - a significant milestone for the LoE!</p>
<p>StorSwift has already deployed various workload-scalable enterprise storage systems in video surveillance, HPC, and AI industries and provides support for the many platforms in operation. Based on their extensive experience with large-scale infrastructure projects, StorSwift has recently focused on improving infrastructure management and security techniques for Web3.0 computing platforms - all of which make StorSwift a great addition to the LoE! Welcome!</p>
<p>We've asked StorSwift some key questions that we've previously asked other LoE members - see <a href="https://docs.drand.love/blog/the-value-of-drand-part-1-of-2"><strong>here</strong></a> and <a href="https://docs.drand.love/blog/the-value-of-drand-part-2-of-2"><strong>here</strong></a> - on the value of drand. Here are the answers.</p>
<hr>
<p><strong>In your opinion, why is drand important as a protocol for the next generation of the Internet?</strong></p>
<ul>
<li>The drand protocol elegantly provides a truly decentralized robust solution to the random numbers quality problem, which indeed is fundamental for secure computer systems.</li>
</ul>
<hr>
<p><strong>Why did you decide to join the League of Entropy? What value do you see in drand that is important for your mission (what convinced you to join)?</strong></p>
<ul>
<li>StorSwift is a technology company focused on distributed computing and storage providing. We are also actively participating in the Web3.0 ecosystem development and we are very proud to be a member of League of Entropy!</li>
</ul>
<hr>
<p><strong>Where would you like to see drand in 2 years from now?</strong></p>
<ul>
<li>The growing LoE community is key for robust and fast randomness delivery. We believe that the current and future potential of drand features will be very attractive for all Web3.0 developers and the wider community.</li>
</ul>
<hr>
<p><em>The League of Entropy evaluates, votes on, and onboards new members quarterly. If you want to be a part of the first production-grade distributed randomness beacon and help provide publicly verifiable randomness as a service, contact us at <a href="mailto:leagueofentropy@googlegroups.com" target="_blank" rel="noopener noreferrer">leagueofentropy@googlegroups.com</a>. We are looking for enthusiastic teams with experience running secure production services who are interested in operating drand nodes and relays. We also encourage you to check out the drand GitHub repository for details.</em></p>
<hr>]]></content>
        <author>
            <name>Yolan Romailler</name>
            <uri>https://romailler.ch/</uri>
        </author>
        <category label="League-of-Entropy" term="League-of-Entropy"/>
        <category label="New-Members" term="New-Members"/>
        <category label="News" term="News"/>
    </entry>
</feed>